{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "05cd1710-b32c-4e2e-afc2-af5f793b6760", "event_id": "c2899917-9199-434e-90b6-d8d82d60dff5", "parent_event_id": "05cd1710-b32c-4e2e-afc2-af5f793b6760", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 748, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_1", "variant_name": null}, {"function_name": "Fn_simple_1", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_1\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":10,\"height\":5,\"meta\":\"Value\",\"unit\":\"units\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_1_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a triangle given its base and height.\n  function_name: 'calculate_triangle_area' or null,\n  // The base of the triangle.\n  base: int,\n  // The height of the triangle.\n  height: int,\n  // The unit of measure (defaults to 'units' if not specified)\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the area of a triangle with a base of 10 units and height of 5 units."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_triangle_area\",\n  \"base\": 10,\n  \"height\": 5,\n  \"unit\": \"units\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 128, "output_tokens": 44, "total_tokens": 172, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "05cd1710-b32c-4e2e-afc2-af5f793b6760", "event_id": "05cd1710-b32c-4e2e-afc2-af5f793b6760", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 749, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_1", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6400a7e6-5bbe-4a0f-a339-e5e185b43438", "event_id": "22a470d0-4de1-440c-834a-f3a91f8ad97b", "parent_event_id": "6400a7e6-5bbe-4a0f-a339-e5e185b43438", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:52:39.764Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_2", "variant_name": null}, {"function_name": "Fn_simple_2", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_2\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_2_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the factorial of a given number.\n  function_name: 'math.factorial' or null,\n  // The number for which factorial needs to be calculated.\n  number: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the factorial of 5 using math functions."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"math.factorial\",\n  \"number\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 74, "output_tokens": 25, "total_tokens": 99, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6400a7e6-5bbe-4a0f-a339-e5e185b43438", "event_id": "6400a7e6-5bbe-4a0f-a339-e5e185b43438", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1568, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_2", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "69052ebb-e0e7-4b1e-85ce-08a3d9d31316", "event_id": "c2d003d6-309b-4c44-8710-70d7f6647889", "parent_event_id": "69052ebb-e0e7-4b1e-85ce-08a3d9d31316", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 614, "start_time": "2024-06-20T03:52:40.584Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_3", "variant_name": null}, {"function_name": "Fn_simple_3", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_3\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"x\":4,\"y\":5,\"meta\":\"Value\",\"z\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_3_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Euclidean norm, sqrt(sum(squares)), the length of the vector from the origin to point (x, y) which is the hypotenuse of the right triangle.\n  function_name: 'math.hypot' or null,\n  // The x-coordinate value.\n  x: int,\n  // The y-coordinate value.\n  y: int,\n  // Optional. The z-coordinate value. Default is 0.\n  z: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the hypotenuse of a right triangle given the lengths of the other two sides as 4 and 5."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"math.hypot\",\n  \"x\": 4,\n  \"y\": 5,\n  \"z\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 158, "output_tokens": 41, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "69052ebb-e0e7-4b1e-85ce-08a3d9d31316", "event_id": "69052ebb-e0e7-4b1e-85ce-08a3d9d31316", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2184, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_3", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3cac603d-3edb-4823-b298-ea7cc1a87bab", "event_id": "d5f4f5fd-7219-4d1a-8228-64c02884380f", "parent_event_id": "3cac603d-3edb-4823-b298-ea7cc1a87bab", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 611, "start_time": "2024-06-20T03:52:41.200Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_4", "variant_name": null}, {"function_name": "Fn_simple_4", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_4\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":1,\"b\":-3,\"c\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_4_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the roots of a quadratic equation ax^2 + bx + c = 0.\n  function_name: 'algebra.quadratic_roots' or null,\n  // Coefficient of x^2.\n  a: int,\n  // Coefficient of x.\n  b: int,\n  // Constant term.\n  c: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the roots of a quadratic equation with coefficients a=1, b=-3, c=2."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"algebra.quadratic_roots\",\n  \"a\": 1,\n  \"b\": -3,\n  \"c\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 126, "output_tokens": 54, "total_tokens": 180, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3cac603d-3edb-4823-b298-ea7cc1a87bab", "event_id": "3cac603d-3edb-4823-b298-ea7cc1a87bab", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2798, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_4", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "89d6cbd4-8bc0-48d2-a570-4bcd163144cb", "event_id": "af98eeb7-79be-4ede-bcf8-ee0de4e8074d", "parent_event_id": "89d6cbd4-8bc0-48d2-a570-4bcd163144cb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2225, "start_time": "2024-06-20T03:52:41.814Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_5", "variant_name": null}, {"function_name": "Fn_simple_5", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_5\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":2,\"b\":6,\"c\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_5_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Function solves the quadratic equation and returns its roots.\n  function_name: 'solve_quadratic_equation' or null,\n  // Coefficient of x squared\n  a: int,\n  // Coefficient of x\n  b: int,\n  // Constant term in the quadratic equation.\n  c: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Solve a quadratic equation where a=2, b=6, and c=5"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the solution to the quadratic equation where a = 2, b = 6, and c = 5:\n\n{\n  \"function_name\": \"solve_quadratic_equation\",\n  \"a\": 2,\n  \"b\": 6,\n  \"c\": 5\n}\n\nTo solve this quadratic equation, we can use the quadratic formula:\n\nx = (-b \u00b1 \u221a(b^2 - 4ac)) / (2a)\n\nPlugging in the values:\na = 2\nb = 6\nc = 5\n\nx = (-6 \u00b1 \u221a(6^2 - 4(2)(5))) / (2(2))\nx = (-6 \u00b1 \u221a(36 - 40)) / 4\nx = (-6 \u00b1 \u221a(-4)) / 4\nx = (-6 \u00b1 2i) / 4\n\nThe two roots are:\nx1 = (-6 + 2i) / 4 = -1 + 0.5i\nx2 = (-6 - 2i) / 4 = -1 - 0.5i\n\nSo the two roots of the quadratic equation are:\nx1 = -1 + 0.5i\nx2 = -1 - 0.5i", "metadata": {"logprobs": null, "prompt_tokens": 115, "output_tokens": 310, "total_tokens": 425, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "89d6cbd4-8bc0-48d2-a570-4bcd163144cb", "event_id": "89d6cbd4-8bc0-48d2-a570-4bcd163144cb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 5024, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_5", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9c2dce6c-f4c3-4803-9a2b-1b246b91ee7b", "event_id": "753618dd-a055-4ad3-b7ae-b1930842edf6", "parent_event_id": "9c2dce6c-f4c3-4803-9a2b-1b246b91ee7b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1768, "start_time": "2024-06-20T03:52:44.040Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_6", "variant_name": null}, {"function_name": "Fn_simple_6", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_6\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":3,\"b\":-11,\"c\":-4,\"meta\":\"Value\",\"root_type\":\"real\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_6_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Solve a quadratic equation given coefficients a, b, and c. If optional 'root_type' is 'real', the function will only return real roots. If not specified, function may return complex roots.\n  function_name: 'solve_quadratic' or null,\n  // The coefficient of the squared term in the quadratic equation.\n  a: int,\n  // The coefficient of the linear term in the quadratic equation.\n  b: int,\n  // The constant term in the quadratic equation.\n  c: int,\n  // The type of roots to return: 'real' for real roots, 'all' for both real and complex roots. Default value is 'real'.\n  root_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the roots of a quadratic equation given coefficients a = 3, b = -11, and c = -4."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the solution in the requested schema:\n\n{\n  \"function_name\": \"solve_quadratic\",\n  \"a\": 3,\n  \"b\": -11,\n  \"c\": -4,\n  \"root_type\": \"real\"\n}\n\nThe quadratic equation is:\n3x^2 - 11x - 4 = 0\n\nSolving this equation using the quadratic formula, we get the following real roots:\n\nx1 = (11 + \u221a(11^2 - 4 * 3 * -4)) / (2 * 3) = 4\nx2 = (11 - \u221a(11^2 - 4 * 3 * -4)) / (2 * 3) = -1/3\n\nTherefore, the two real roots of this quadratic equation are 4 and -1/3.", "metadata": {"logprobs": null, "prompt_tokens": 217, "output_tokens": 205, "total_tokens": 422, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9c2dce6c-f4c3-4803-9a2b-1b246b91ee7b", "event_id": "9c2dce6c-f4c3-4803-9a2b-1b246b91ee7b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 6793, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_6", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f02f0453-e657-4032-8d8b-20879b609d18", "event_id": "754fb5b2-1212-434e-90c6-89c8f4b70973", "parent_event_id": "f02f0453-e657-4032-8d8b-20879b609d18", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1839, "start_time": "2024-06-20T03:52:45.809Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_7", "variant_name": null}, {"function_name": "Fn_simple_7", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_7\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":2,\"b\":5,\"c\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_7_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the roots of a quadratic equation. Returns both roots.\n  function_name: 'solve_quadratic' or null,\n  // Coefficient of x\u00b2.\n  a: int,\n  // Coefficient of x.\n  b: int,\n  // Constant term.\n  c: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the roots of the quadratic equation where a=2, b=5 and c=3 ?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the solution in the requested format:\n\n{\n  \"function_name\": \"solve_quadratic\",\n  \"a\": 2,\n  \"b\": 5,\n  \"c\": 3\n}\n\nTo solve this quadratic equation, we can use the quadratic formula:\n\nx = (-b \u00b1 \u221a(b^2 - 4ac)) / (2a)\n\nPlugging in the values:\na = 2\nb = 5\nc = 3\n\nx = (-5 \u00b1 \u221a(5^2 - 4(2)(3))) / (2(2))\nx = (-5 \u00b1 \u221a(25 - 24)) / 4\nx = (-5 \u00b1 \u221a1) / 4\nx = (-5 \u00b1 1) / 4\n\nTherefore, the two roots are:\nx1 = (-5 + 1) / 4 = -1\nx2 = (-5 - 1) / 4 = -1.5", "metadata": {"logprobs": null, "prompt_tokens": 115, "output_tokens": 237, "total_tokens": 352, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f02f0453-e657-4032-8d8b-20879b609d18", "event_id": "f02f0453-e657-4032-8d8b-20879b609d18", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 8633, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_7", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "907e51b9-6ffd-4dc3-bcb8-1018b7241c95", "event_id": "28458baa-f936-4b97-9b2d-57c2d928cb48", "parent_event_id": "907e51b9-6ffd-4dc3-bcb8-1018b7241c95", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:52:47.649Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_8", "variant_name": null}, {"function_name": "Fn_simple_8", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_8\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":4,\"meta\":\"Value\",\"unit\":\"inches\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_8_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the circumference of a circle with a given radius.\n  function_name: 'calculate_circumference' or null,\n  // The radius of the circle in the unit given.\n  radius: int,\n  // The unit of measurement for the radius. Default is 'cm'.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the circumference of a circle with a radius of 4 inches?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_circumference\",\n  \"radius\": 4,\n  \"unit\": \"inches\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 112, "output_tokens": 35, "total_tokens": 147, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "907e51b9-6ffd-4dc3-bcb8-1018b7241c95", "event_id": "907e51b9-6ffd-4dc3-bcb8-1018b7241c95", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 9350, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_8", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0cee0da5-f888-4640-909d-3b5c7255c228", "event_id": "df00d21b-ddf6-4efd-b03e-f790267d0d6e", "parent_event_id": "0cee0da5-f888-4640-909d-3b5c7255c228", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:52:48.366Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_9", "variant_name": null}, {"function_name": "Fn_simple_9", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_9\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":10,\"meta\":\"Value\",\"units\":\"meters\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_9_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a circle given the radius.\n  function_name: 'geometry.area_circle' or null,\n  // The radius of the circle.\n  radius: int,\n  // The units in which the radius is measured (defaults to 'meters').\n  units: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the area of a circle with a radius of 10?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.area_circle\",\n  \"radius\": 10,\n  \"units\": \"meters\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 103, "output_tokens": 36, "total_tokens": 139, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0cee0da5-f888-4640-909d-3b5c7255c228", "event_id": "0cee0da5-f888-4640-909d-3b5c7255c228", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 9964, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_9", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4f84c0e2-2694-4d77-8120-52923d0c4df2", "event_id": "fbb0e173-fa49-4ddc-9024-de7c0b101b12", "parent_event_id": "4f84c0e2-2694-4d77-8120-52923d0c4df2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T03:52:48.980Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_10", "variant_name": null}, {"function_name": "Fn_simple_10", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_10\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":5,\"meta\":\"Value\",\"unit\":\"units\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_10_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a circle given its radius.\n  function_name: 'geometry.calculate_area_circle' or null,\n  // The radius of the circle.\n  radius: int,\n  // The measurement unit of the radius (optional parameter, default is 'units').\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a circle with a radius of 5 units."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.calculate_area_circle\",\n  \"radius\": 5,\n  \"unit\": \"units\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 107, "output_tokens": 38, "total_tokens": 145, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4f84c0e2-2694-4d77-8120-52923d0c4df2", "event_id": "4f84c0e2-2694-4d77-8120-52923d0c4df2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 10682, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_10", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "75866ff9-5407-4754-a946-3e2b211c5ae2", "event_id": "715c96a5-f3dd-4c87-a978-301da40710e4", "parent_event_id": "75866ff9-5407-4754-a946-3e2b211c5ae2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:52:49.698Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_11", "variant_name": null}, {"function_name": "Fn_simple_11", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_11\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":6,\"height\":10,\"meta\":\"Value\",\"unit\":\"cm\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_11_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a right-angled triangle given the lengths of its base and height.\n  function_name: 'calculate_area' or null,\n  // The length of the base of the right-angled triangle.\n  base: int,\n  // The height of the right-angled triangle.\n  height: int,\n  // The unit of measure used. Defaults to 'cm'.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a right-angled triangle given the lengths of its base and height as 6cm and 10cm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_area\",\n  \"base\": 6,\n  \"height\": 10,\n  \"unit\": \"cm\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 147, "output_tokens": 42, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "75866ff9-5407-4754-a946-3e2b211c5ae2", "event_id": "75866ff9-5407-4754-a946-3e2b211c5ae2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 11398, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_11", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b39cf872-96c0-4991-8fac-204ff7a0d906", "event_id": "490a4baf-ea7a-4986-a0ef-d29464cc2d62", "parent_event_id": "b39cf872-96c0-4991-8fac-204ff7a0d906", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 856, "start_time": "2024-06-20T03:52:50.413Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_12", "variant_name": null}, {"function_name": "Fn_simple_12", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_12\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":10,\"height\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_12_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a triangle using its base and height.\n  function_name: 'calculate_triangle_area' or null,\n  // The length of the base of the triangle.\n  base: int,\n  // The height of the triangle from the base.\n  height: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the area of a triangle with base of 10 units and height of 5 units?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_triangle_area\",\n  \"base\": 10,\n  \"height\": 5\n}\n\nThe area of a triangle can be calculated using the formula:\nArea = (base * height) / 2\n\nPlugging in the values:\nArea = (10 * 5) / 2\nArea = 25 square units", "metadata": {"logprobs": null, "prompt_tokens": 108, "output_tokens": 98, "total_tokens": 206, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b39cf872-96c0-4991-8fac-204ff7a0d906", "event_id": "b39cf872-96c0-4991-8fac-204ff7a0d906", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 12255, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_12", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "93519913-c67c-4e4f-bbc9-cdbdbb129361", "event_id": "d7f9e2f1-a444-45b4-a1f0-a6565a4bd530", "parent_event_id": "93519913-c67c-4e4f-bbc9-cdbdbb129361", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 577, "start_time": "2024-06-20T03:52:51.270Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_13", "variant_name": null}, {"function_name": "Fn_simple_13", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_13\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":3,\"meta\":\"Value\",\"units\":\"cm\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_13_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the circumference of a circle given the radius.\n  function_name: 'geometry.circumference' or null,\n  // The radius of the circle.\n  radius: int,\n  // Units for the output circumference measurement. Default is 'cm'.\n  units: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the circumference of a circle with radius 3"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.circumference\",\n  \"radius\": 3,\n  \"units\": \"cm\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 99, "output_tokens": 35, "total_tokens": 134, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "93519913-c67c-4e4f-bbc9-cdbdbb129361", "event_id": "93519913-c67c-4e4f-bbc9-cdbdbb129361", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 12833, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_13", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "67afa509-e2f2-4960-bd5c-c6f852650fbc", "event_id": "2e607d04-baa2-4503-a208-c147e43f5b49", "parent_event_id": "67afa509-e2f2-4960-bd5c-c6f852650fbc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:52:51.849Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_14", "variant_name": null}, {"function_name": "Fn_simple_14", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_14\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function\":\"x^2\",\"interval\":[1.0,3.0],\"meta\":\"Value\",\"method\":\"trapezoidal\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_14_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area under a mathematical function within a given interval.\n  function_name: 'calculate_area_under_curve' or null,\n  // The mathematical function as a string.\n  function: string,\n  // An array that defines the interval to calculate the area under the curve from the start to the end point.\n  interval: float[],\n  // The numerical method to approximate the area under the curve. The default value is 'trapezoidal'.\n  method: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area under the curve y=x^2 from x=1 to x=3."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"calculate_area_under_curve\",\n  \"function\": \"x^2\",\n  \"interval\": [1, 3],\n  \"method\": \"trapezoidal\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 154, "output_tokens": 64, "total_tokens": 218, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "67afa509-e2f2-4960-bd5c-c6f852650fbc", "event_id": "67afa509-e2f2-4960-bd5c-c6f852650fbc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 13548, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_14", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c6057b6d-1924-4666-9bf2-bf19318d2bd4", "event_id": "4c7aa553-7604-4508-876f-683d1bc0194b", "parent_event_id": "c6057b6d-1924-4666-9bf2-bf19318d2bd4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 679, "start_time": "2024-06-20T03:52:52.564Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_15", "variant_name": null}, {"function_name": "Fn_simple_15", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_15\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function\":\"3x^2 + 2x - 1\",\"meta\":\"Value\",\"x_value\":0.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_15_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the derivative of a polynomial function.\n  function_name: 'calculate_derivative' or null,\n  // The polynomial function.\n  function: string,\n  // The x-value at which the derivative is calculated. Optional, default to 0.00.\n  x_value: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the derivative of the function 3x^2 + 2x - 1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_derivative\",\n  \"function\": \"3x^2 + 2x - 1\",\n  \"x_value\": 0.00\n}", "metadata": {"logprobs": null, "prompt_tokens": 110, "output_tokens": 48, "total_tokens": 158, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c6057b6d-1924-4666-9bf2-bf19318d2bd4", "event_id": "c6057b6d-1924-4666-9bf2-bf19318d2bd4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 14229, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_15", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "667e72f2-4f0a-4cac-b1ba-c86788c54407", "event_id": "08945bd6-4561-4527-a83c-e5e469020046", "parent_event_id": "667e72f2-4f0a-4cac-b1ba-c86788c54407", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 667, "start_time": "2024-06-20T03:52:53.245Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_16", "variant_name": null}, {"function_name": "Fn_simple_16", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_16\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function\":\"x^3\",\"start_x\":-2,\"end_x\":3,\"meta\":\"Value\",\"method\":\"simpson\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_16_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area under a curve for a specified function between two x values.\n  function_name: 'integrate' or null,\n  // The function to integrate, represented as a string. For example, 'x^3'\n  function: string,\n  // The starting x-value to integrate over.\n  start_x: int,\n  // The ending x-value to integrate over.\n  end_x: int,\n  // The method of numerical integration to use. Choices are 'trapezoid' or 'simpson'. Default is 'trapezoid'.\n  method: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area under the curve from x = -2 to x = 3 for the function y = x^3 using simpson method."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"integrate\",\n  \"function\": \"x^3\",\n  \"start_x\": -2,\n  \"end_x\": 3,\n  \"method\": \"simpson\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 189, "output_tokens": 64, "total_tokens": 253, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "667e72f2-4f0a-4cac-b1ba-c86788c54407", "event_id": "667e72f2-4f0a-4cac-b1ba-c86788c54407", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 14897, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_16", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bd9ba5b2-597a-44a1-b3d0-93b9f7c2f305", "event_id": "9e05bb27-dfe7-4ce9-b9f6-e3c92584f929", "parent_event_id": "bd9ba5b2-597a-44a1-b3d0-93b9f7c2f305", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 800, "start_time": "2024-06-20T03:52:53.913Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_17", "variant_name": null}, {"function_name": "Fn_simple_17", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_17\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function\":\"2x^2\",\"value\":1,\"meta\":\"Value\",\"function_variable\":\"x\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_17_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the derivative of a function at a specific value.\n  function_name: 'calculus.derivative' or null,\n  // The function to calculate the derivative of.\n  function: string,\n  // The value where the derivative needs to be calculated at.\n  value: int,\n  // The variable present in the function, for instance x or y, etc. Default is 'x'.\n  function_variable: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the derivative of the function 2x^2 at x = 1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculus.derivative\",\n  \"function\": \"2x^2\",\n  \"value\": 1,\n  \"function_variable\": \"x\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 58, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bd9ba5b2-597a-44a1-b3d0-93b9f7c2f305", "event_id": "bd9ba5b2-597a-44a1-b3d0-93b9f7c2f305", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 15699, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_17", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ec71b7f7-4812-4b92-ba98-7f4dfc880af2", "event_id": "7ee78b64-7eaf-421c-a0dc-2949e0d7ba4c", "parent_event_id": "ec71b7f7-4812-4b92-ba98-7f4dfc880af2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T03:52:54.715Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_18", "variant_name": null}, {"function_name": "Fn_simple_18", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_18\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":450,\"formatted\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_18_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Function to retrieve prime factors of a number.\n  function_name: 'get_prime_factors' or null,\n  // Number for which prime factors need to be calculated\n  number: int,\n  // Return formatted string if true, array if false. Default is true.\n  formatted: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the prime factors of 450"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_prime_factors\",\n  \"number\": 450,\n  \"formatted\": true\n}\n\nThe prime factors of 450 are: 2 \u00d7 3 \u00d7 5 \u00d7 5", "metadata": {"logprobs": null, "prompt_tokens": 95, "output_tokens": 58, "total_tokens": 153, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ec71b7f7-4812-4b92-ba98-7f4dfc880af2", "event_id": "ec71b7f7-4812-4b92-ba98-7f4dfc880af2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 16621, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_18", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6f70ad12-a6f0-4ec5-aa5a-dd6d8bd5de0d", "event_id": "9f4be12e-bc28-4ede-b22e-fe97ef6bd04c", "parent_event_id": "6f70ad12-a6f0-4ec5-aa5a-dd6d8bd5de0d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:52:55.637Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_19", "variant_name": null}, {"function_name": "Fn_simple_19", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_19\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":123456,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_19_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the prime factors of a number.\n  function_name: 'number_analysis.prime_factors' or null,\n  // The number to be factored.\n  number: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the prime factors of the number 123456."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"number_analysis.prime_factors\",\n  \"number\": 123456\n}", "metadata": {"logprobs": null, "prompt_tokens": 76, "output_tokens": 40, "total_tokens": 116, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6f70ad12-a6f0-4ec5-aa5a-dd6d8bd5de0d", "event_id": "6f70ad12-a6f0-4ec5-aa5a-dd6d8bd5de0d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 17234, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_19", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b99b8b79-a1b6-415a-b627-eaa3611b5277", "event_id": "4a308064-bc93-4117-8c85-9f453ae31386", "parent_event_id": "b99b8b79-a1b6-415a-b627-eaa3611b5277", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 769, "start_time": "2024-06-20T03:52:56.250Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_20", "variant_name": null}, {"function_name": "Fn_simple_20", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_20\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":40,\"num2\":50,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_20_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the greatest common divisor of two numbers\n  function_name: 'math.gcd' or null,\n  // The first number.\n  num1: int,\n  // The second number.\n  num2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the greatest common divisor of two numbers: 40 and 50"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.gcd\",\n  \"num1\": 40,\n  \"num2\": 50\n}", "metadata": {"logprobs": null, "prompt_tokens": 91, "output_tokens": 46, "total_tokens": 137, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b99b8b79-a1b6-415a-b627-eaa3611b5277", "event_id": "b99b8b79-a1b6-415a-b627-eaa3611b5277", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 18005, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_20", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8334b5f1-2511-41ac-8fd5-d785bc73456c", "event_id": "ff185249-8245-4c92-92a7-df004f3b3a30", "parent_event_id": "8334b5f1-2511-41ac-8fd5-d785bc73456c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 593, "start_time": "2024-06-20T03:52:57.021Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_21", "variant_name": null}, {"function_name": "Fn_simple_21", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_21\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number1\":36,\"number2\":24,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_21_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the highest common factor of two numbers.\n  function_name: 'math.hcf' or null,\n  // First number.\n  number1: int,\n  // Second number.\n  number2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the highest common factor of 36 and 24."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.hcf\",\n  \"number1\": 36,\n  \"number2\": 24\n}", "metadata": {"logprobs": null, "prompt_tokens": 86, "output_tokens": 47, "total_tokens": 133, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8334b5f1-2511-41ac-8fd5-d785bc73456c", "event_id": "8334b5f1-2511-41ac-8fd5-d785bc73456c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 18599, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_21", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "be6273ee-8d1b-400b-8bfc-ad7f49fe8fa2", "event_id": "1f52ed52-8b76-4792-a292-0e51c0e996cd", "parent_event_id": "be6273ee-8d1b-400b-8bfc-ad7f49fe8fa2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 682, "start_time": "2024-06-20T03:52:57.615Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_22", "variant_name": null}, {"function_name": "Fn_simple_22", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_22\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number1\":36,\"number2\":48,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_22_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the greatest common divisor of two given integers.\n  function_name: 'number_theory.gcd' or null,\n  // The first integer.\n  number1: int,\n  // The second integer.\n  number2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the Greatest Common Divisor (GCD) of two numbers, say 36 and 48."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"number_theory.gcd\",\n  \"number1\": 36,\n  \"number2\": 48\n}", "metadata": {"logprobs": null, "prompt_tokens": 102, "output_tokens": 48, "total_tokens": 150, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "be6273ee-8d1b-400b-8bfc-ad7f49fe8fa2", "event_id": "be6273ee-8d1b-400b-8bfc-ad7f49fe8fa2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 19283, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_22", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c09c9868-0193-4c1a-ba65-1f706438caba", "event_id": "ce576b72-e10f-47eb-855a-3385f23ec163", "parent_event_id": "c09c9868-0193-4c1a-ba65-1f706438caba", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 676, "start_time": "2024-06-20T03:52:58.299Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_23", "variant_name": null}, {"function_name": "Fn_simple_23", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_23\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":12,\"num2\":15,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_23_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the greatest common divisor (gcd) of the two integers.\n  function_name: 'math.gcd' or null,\n  // The first number.\n  num1: int,\n  // The second number.\n  num2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the greatest common divisor of two given numbers, for example 12 and 15."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.gcd\",\n  \"num1\": 12,\n  \"num2\": 15\n}", "metadata": {"logprobs": null, "prompt_tokens": 100, "output_tokens": 46, "total_tokens": 146, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c09c9868-0193-4c1a-ba65-1f706438caba", "event_id": "c09c9868-0193-4c1a-ba65-1f706438caba", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 19961, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_23", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "db5eb1e6-9903-4a71-b7b3-93f90a2ac0e9", "event_id": "1d7998d4-cdfa-4e6f-8c94-f8b3512e41da", "parent_event_id": "db5eb1e6-9903-4a71-b7b3-93f90a2ac0e9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 978, "start_time": "2024-06-20T03:52:58.977Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_24", "variant_name": null}, {"function_name": "Fn_simple_24", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_24\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":60,\"meta\":\"Value\",\"return_type\":\"dictionary\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_24_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the prime factorization of a given integer.\n  function_name: 'prime_factorize' or null,\n  // The number for which to calculate the prime factorization.\n  number: int,\n  // Determines the format of the returned prime factorization. Can be 'list' for a list of all prime factors or 'dictionary' for a count of each prime factor. Default is 'list'.\n  return_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the prime factorization of the number 60? Return them in the form of dictionary"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"prime_factorize\",\n  \"number\": 60,\n  \"return_type\": \"dictionary\"\n}\n\nThe prime factorization of 60 is:\n{\n  2: 2,\n  3: 1,\n  5: 1\n}\n\nThis means that the prime factorization of 60 is 2 * 2 * 3 * 5.", "metadata": {"logprobs": null, "prompt_tokens": 147, "output_tokens": 103, "total_tokens": 250, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "db5eb1e6-9903-4a71-b7b3-93f90a2ac0e9", "event_id": "db5eb1e6-9903-4a71-b7b3-93f90a2ac0e9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 20940, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_24", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ebedd2ff-7190-4003-bbfc-cd0e529467bb", "event_id": "f012faf4-69a1-4d46-9b97-a3908cd40202", "parent_event_id": "ebedd2ff-7190-4003-bbfc-cd0e529467bb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 799, "start_time": "2024-06-20T03:52:59.956Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_25", "variant_name": null}, {"function_name": "Fn_simple_25", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_25\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":12,\"num2\":18,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_25_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the greatest common divisor of two integers.\n  function_name: 'math.gcd' or null,\n  // First number.\n  num1: int,\n  // Second number.\n  num2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the greatest common divisor (GCD) of 12 and 18"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.gcd\",\n  \"num1\": 12,\n  \"num2\": 18\n}", "metadata": {"logprobs": null, "prompt_tokens": 90, "output_tokens": 46, "total_tokens": 136, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ebedd2ff-7190-4003-bbfc-cd0e529467bb", "event_id": "ebedd2ff-7190-4003-bbfc-cd0e529467bb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 21740, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_25", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "adb3333d-8209-415f-8150-8e7aa4ca487c", "event_id": "ed50d6f8-e6cb-4849-8684-8d9670357136", "parent_event_id": "adb3333d-8209-415f-8150-8e7aa4ca487c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2047, "start_time": "2024-06-20T03:53:00.756Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_26", "variant_name": null}, {"function_name": "Fn_simple_26", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_26\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"height\":150,\"meta\":\"Value\",\"initial_velocity\":0,\"gravity\":9.81}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_26_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final velocity of a free falling object given the height it's dropped from, the initial velocity and acceleration due to gravity. Ignore air resistance.\n  function_name: 'calculate_final_velocity' or null,\n  // The height the object is dropped from, in meters.\n  height: int,\n  // The initial velocity of the object in m/s. Default is zero.\n  initial_velocity: int or null,\n  // Acceleration due to gravity. Default value is 9.81 m/s^2, earth's gravity.\n  gravity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final velocity of an object falling from a 150 meter building, assuming initial velocity is zero."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_final_velocity\",\n  \"height\": 150,\n  \"initial_velocity\": 0,\n  \"gravity\": 9.81\n}\n\nThe final velocity (v) of an object falling from a height (h) with an initial velocity (u) and acceleration due to gravity (g) can be calculated using the formula:\n\nv^2 = u^2 + 2gh\n\nWhere:\n- v is the final velocity in m/s\n- u is the initial velocity in m/s\n- g is the acceleration due to gravity in m/s^2\n- h is the height in meters\n\nPlugging in the values:\n- u = 0 m/s (initial velocity is zero)\n- g = 9.81 m/s^2 (acceleration due to gravity)\n- h = 150 m (height of the building)\n\nCalculating the final velocity:\nv^2 = 0^2 + 2 * 9.81 * 150\nv^2 = 2,942\nv = \u221a2,942\nv = 54.25 m/s\n\nTherefore, the final velocity of the object falling from a 150-meter building with an initial velocity of zero is 54.25 m/s.", "metadata": {"logprobs": null, "prompt_tokens": 174, "output_tokens": 299, "total_tokens": 473, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "adb3333d-8209-415f-8150-8e7aa4ca487c", "event_id": "adb3333d-8209-415f-8150-8e7aa4ca487c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 23788, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_26", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "eb2e04d2-431b-43ec-973e-d390bb490424", "event_id": "bdb33faf-426b-4af4-a4c7-970eb5d2ceba", "parent_event_id": "eb2e04d2-431b-43ec-973e-d390bb490424", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:53:02.804Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_27", "variant_name": null}, {"function_name": "Fn_simple_27", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_27\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance\":50,\"duration\":2,\"meta\":\"Value\",\"unit\":\"km/h\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_27_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the velocity for a certain distance travelled within a specific duration.\n  function_name: 'calculate_velocity' or null,\n  // The distance travelled by the object, typically in kilometers.\n  distance: int,\n  // The duration of the journey, typically in hours.\n  duration: int,\n  // Optional parameter. The unit to return the velocity in. If not provided, the default is km/h.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the velocity of a car that travels a distance of 50 kilometers for a duration of 2 hours?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_velocity\",\n  \"distance\": 50,\n  \"duration\": 2,\n  \"unit\": \"km/h\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 54, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "eb2e04d2-431b-43ec-973e-d390bb490424", "event_id": "eb2e04d2-431b-43ec-973e-d390bb490424", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 24505, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_27", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "91b106dd-5e6c-493e-a7dc-05b8efc6ede5", "event_id": "3f81fb16-3cd2-421d-b893-4c6e47e9bbe0", "parent_event_id": "91b106dd-5e6c-493e-a7dc-05b8efc6ede5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 559, "start_time": "2024-06-20T03:53:03.521Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_28", "variant_name": null}, {"function_name": "Fn_simple_28", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_28\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":10,\"acceleration\":2,\"time\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_28_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final velocity of an object given its initial velocity, acceleration, and time.\n  function_name: 'final_velocity' or null,\n  // The initial velocity of the object in meters/second.\n  initial_velocity: int,\n  // The acceleration of the object in meters/second^2.\n  acceleration: int,\n  // The time over which the acceleration is applied in seconds.\n  time: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final velocity of a vehicle after accelerating at 2 meters/second^2 for a duration of 5 seconds, starting from a speed of 10 meters/second."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"final_velocity\",\n  \"initial_velocity\": 10,\n  \"acceleration\": 2,\n  \"time\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 157, "output_tokens": 43, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "91b106dd-5e6c-493e-a7dc-05b8efc6ede5", "event_id": "91b106dd-5e6c-493e-a7dc-05b8efc6ede5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 25065, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_28", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0d6abb84-cbbf-4bfa-992f-3712cba02c55", "event_id": "ed1492b5-8a9e-4551-a0a7-efbb10e7b57f", "parent_event_id": "0d6abb84-cbbf-4bfa-992f-3712cba02c55", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 638, "start_time": "2024-06-20T03:53:04.081Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_29", "variant_name": null}, {"function_name": "Fn_simple_29", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_29\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":10,\"time\":5,\"meta\":\"Value\",\"acceleration\":9.8}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_29_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the displacement of an object in motion given initial velocity, time, and acceleration.\n  function_name: 'calculate_displacement' or null,\n  // The initial velocity of the object in m/s.\n  initial_velocity: int,\n  // The time in seconds that the object has been in motion.\n  time: int,\n  // The acceleration of the object in m/s^2.\n  acceleration: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the displacement of a car given the initial velocity of 10 and acceleeration of 9.8 within 5 seconds."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_displacement\",\n  \"initial_velocity\": 10,\n  \"time\": 5,\n  \"acceleration\": 9.8\n}", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 55, "total_tokens": 206, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0d6abb84-cbbf-4bfa-992f-3712cba02c55", "event_id": "0d6abb84-cbbf-4bfa-992f-3712cba02c55", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 25705, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_29", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0fc46e4c-8ffa-41c6-87dd-f0d9e7547619", "event_id": "31909369-42b7-4ca5-bb3c-b7fb791f28b3", "parent_event_id": "0fc46e4c-8ffa-41c6-87dd-f0d9e7547619", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1769, "start_time": "2024-06-20T03:53:04.721Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_30", "variant_name": null}, {"function_name": "Fn_simple_30", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_30\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"time\":5,\"meta\":\"Value\",\"initial_speed\":0,\"gravity\":-9.81}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_30_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final speed of an object in free fall after a certain time, neglecting air resistance. The acceleration due to gravity is considered as -9.81 m/s^2\n  function_name: 'calculate_final_speed' or null,\n  // The initial speed of the object in m/s. Default is 0 for an object at rest.\n  initial_speed: int or null,\n  // The time in seconds for which the object is in free fall.\n  time: int,\n  // The acceleration due to gravity. Default is -9.81 m/s^2.\n  gravity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the final speed of an object dropped from rest after falling for 5 seconds if we neglect air resistance?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_final_speed\",\n  \"initial_speed\": 0,\n  \"time\": 5,\n  \"gravity\": -9.81\n}\n\nThe final speed of an object dropped from rest after falling for 5 seconds, neglecting air resistance, can be calculated using the formula:\n\nv = u + at\n\nWhere:\n- v is the final speed (in m/s)\n- u is the initial speed (in m/s)\n- a is the acceleration due to gravity (in m/s^2)\n- t is the time (in seconds)\n\nPlugging in the given values:\n- u = 0 (the object is dropped from rest)\n- a = -9.81 m/s^2 (acceleration due to gravity)\n- t = 5 seconds\n\nCalculating the final speed:\nv = u + at\nv = 0 + (-9.81) * 5\nv = -49.05 m/s\n\nThe final speed of the object is -49.05 m/s. The negative sign indicates that the object is moving downward.", "metadata": {"logprobs": null, "prompt_tokens": 188, "output_tokens": 260, "total_tokens": 448, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0fc46e4c-8ffa-41c6-87dd-f0d9e7547619", "event_id": "0fc46e4c-8ffa-41c6-87dd-f0d9e7547619", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 27474, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_30", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0b8aca0b-71e2-417f-84f9-63d7b2277edf", "event_id": "06b4e2c9-2afd-4720-8f9f-44aa226ae928", "parent_event_id": "0b8aca0b-71e2-417f-84f9-63d7b2277edf", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1794, "start_time": "2024-06-20T03:53:06.491Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_31", "variant_name": null}, {"function_name": "Fn_simple_31", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_31\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"acceleration\":4,\"distance\":300,\"meta\":\"Value\",\"initial_velocity\":0.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_31_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final velocity of an object given the acceleration and distance travelled, assuming initial velocity is 0.\n  function_name: 'kinematics.final_velocity_from_distance' or null,\n  // Acceleration of the object, m/s^2.\n  acceleration: int,\n  // Distance traveled by the object, m.\n  distance: int,\n  // Initial velocity of the object. Default is 0, m/s\n  initial_velocity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the final velocity of a vehicle that started from rest and accelerated at 4 m/s^2 for a distance of 300 meters?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"kinematics.final_velocity_from_distance\",\n  \"acceleration\": 4,\n  \"distance\": 300,\n  \"initial_velocity\": 0\n}\n\nTo calculate the final velocity of the vehicle, we can use the kinematic equation:\n\nv^2 = u^2 + 2as\n\nWhere:\n- v is the final velocity (m/s)\n- u is the initial velocity (m/s)\n- a is the acceleration (m/s^2)\n- s is the distance traveled (m)\n\nGiven:\n- Initial velocity (u) = 0 m/s\n- Acceleration (a) = 4 m/s^2\n- Distance (s) = 300 m\n\nPlugging these values into the equation:\n\nv^2 = 0^2 + 2 * 4 * 300\nv^2 = 2400\nv = \u221a2400\nv = 48.99 m/s\n\nTherefore, the final velocity of the vehicle is approximately 49 m/s.", "metadata": {"logprobs": null, "prompt_tokens": 164, "output_tokens": 253, "total_tokens": 417, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0b8aca0b-71e2-417f-84f9-63d7b2277edf", "event_id": "0b8aca0b-71e2-417f-84f9-63d7b2277edf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 29270, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_31", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "517b0989-491e-4ead-8872-a3d57fe04453", "event_id": "f182af3c-72c4-4a8b-a838-0e1ebc0c5c40", "parent_event_id": "517b0989-491e-4ead-8872-a3d57fe04453", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 761, "start_time": "2024-06-20T03:53:08.286Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_32", "variant_name": null}, {"function_name": "Fn_simple_32", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_32\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":0,\"acceleration\":9.8,\"time\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_32_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final velocity of an object under constant acceleration, knowing its initial velocity, acceleration, and time of acceleration.\n  function_name: 'calculate_final_velocity' or null,\n  // The initial velocity of the object.\n  initial_velocity: int,\n  // The acceleration of the object.\n  acceleration: float,\n  // The time of acceleration.\n  time: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final velocity of an object, knowing that it started from rest, accelerated at a rate of 9.8 m/s^2 for a duration of 5 seconds."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_final_velocity\",\n  \"initial_velocity\": 0,\n  \"acceleration\": 9.8,\n  \"time\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 149, "output_tokens": 47, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "517b0989-491e-4ead-8872-a3d57fe04453", "event_id": "517b0989-491e-4ead-8872-a3d57fe04453", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 30032, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_32", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1e23849f-a3b0-4a60-a174-4a87984c7d79", "event_id": "76aa7630-162a-4332-a1fa-376be8635797", "parent_event_id": "1e23849f-a3b0-4a60-a174-4a87984c7d79", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2254, "start_time": "2024-06-20T03:53:09.048Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_33", "variant_name": null}, {"function_name": "Fn_simple_33", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_33\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":0,\"height\":100,\"meta\":\"Value\",\"gravity\":9.8}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_33_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final speed of an object dropped from a certain height without air resistance.\n  function_name: 'calculate_final_speed' or null,\n  // The initial velocity of the object.\n  initial_velocity: int,\n  // The height from which the object is dropped.\n  height: int,\n  // The gravitational acceleration. Default is 9.8 m/s^2.\n  gravity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final speed of an object dropped from 100 m without air resistance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_final_speed\",\n  \"initial_velocity\": 0,\n  \"height\": 100,\n  \"gravity\": 9.8\n}\n\nTo explain:\n- The function_name is \"calculate_final_speed\" as requested.\n- The initial velocity is 0 m/s, as the object is dropped from rest.\n- The height from which the object is dropped is 100 m.\n- The gravitational acceleration is the default value of 9.8 m/s^2.\n\nThe formula to calculate the final speed of an object dropped without air resistance is:\n\nv_f = sqrt(v_i^2 + 2*g*h)\n\nWhere:\n- v_f is the final velocity\n- v_i is the initial velocity\n- g is the gravitational acceleration\n- h is the height\n\nPlugging in the values:\nv_f = sqrt(0^2 + 2*9.8*100)\nv_f = sqrt(1960)\nv_f = 44.18 m/s\n\nSo the final speed of the object dropped from 100 m without air resistance is 44.18 m/s.", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 289, "total_tokens": 425, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1e23849f-a3b0-4a60-a174-4a87984c7d79", "event_id": "1e23849f-a3b0-4a60-a174-4a87984c7d79", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 32287, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_33", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "980b3ec8-4366-4ce1-bd8e-72561ebeef42", "event_id": "df5db1ed-b085-42f0-917a-e68c362b9b23", "parent_event_id": "980b3ec8-4366-4ce1-bd8e-72561ebeef42", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 673, "start_time": "2024-06-20T03:53:11.303Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_34", "variant_name": null}, {"function_name": "Fn_simple_34", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_34\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Sydney\",\"end_location\":\"Melbourne\",\"meta\":\"Value\",\"route_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_34_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve directions from one location to another.\n  function_name: 'get_directions' or null,\n  // The starting point of the journey.\n  start_location: string,\n  // The destination point of the journey.\n  end_location: string,\n  // Type of route to use (e.g., 'fastest', 'scenic'). Default is 'fastest'.\n  route_type: 'fastest' or 'scenic' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get directions from Sydney to Melbourne using the fastest route."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_directions\",\n  \"start_location\": \"Sydney\",\n  \"end_location\": \"Melbourne\",\n  \"route_type\": \"fastest\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 58, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "980b3ec8-4366-4ce1-bd8e-72561ebeef42", "event_id": "980b3ec8-4366-4ce1-bd8e-72561ebeef42", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 32961, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_34", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "16236cc1-6947-4e59-a9c5-a86fdf9fa89c", "event_id": "50c64163-3dcc-4b8e-b4c7-03585c4f1e68", "parent_event_id": "16236cc1-6947-4e59-a9c5-a86fdf9fa89c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 5040, "start_time": "2024-06-20T03:53:11.977Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_35", "variant_name": null}, {"function_name": "Fn_simple_35", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_35\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"destination\":\"Tokyo\",\"days\":7,\"daily_budget\":100,\"meta\":\"Value\",\"exploration_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_35_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generate a travel itinerary based on specific destination, duration and daily budget, with preferred exploration type.\n  function_name: 'travel_itinerary_generator' or null,\n  // Destination city of the trip.\n  destination: string,\n  // Number of days for the trip.\n  days: int,\n  // The maximum daily budget for the trip.\n  daily_budget: int,\n  // The preferred exploration type. (default: urban)\n  exploration_type: 'nature' or 'urban' or 'history' or 'culture' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Create an itinerary for a 7 days trip to Tokyo with daily budgets not exceeding $100 and prefer exploring nature."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"travel_itinerary_generator\",\n  \"destination\": \"Tokyo\",\n  \"days\": 7,\n  \"daily_budget\": 100,\n  \"exploration_type\": \"nature\"\n}\n\nHere is a suggested 7-day travel itinerary for Tokyo with a daily budget of $100 and a focus on exploring nature:\n\nDay 1: \n- Visit Shinjuku Gyoen National Garden - a beautiful traditional Japanese landscape garden ($5 admission)\n- Explore Yoyogi Park and observe the Harajuku fashion culture\n- Visit Meiji Shrine - a Shinto shrine set in a large urban forest ($3 admission)\n\nDay 2:\n- Take a day trip to Mount Takao - a popular hiking destination with beautiful mountain scenery ($5 round-trip train ticket)\n- Hike to the top of Mount Takao and visit the Buddhist temple at the summit ($4 admission)\n- Explore the hiking trails and natural surroundings\n\nDay 3: \n- Visit Ueno Park - a large urban park with museums, temples, and natural landscapes ($0 admission)\n- Explore the Tokyo National Museum to learn about Japanese art and history ($10 admission)\n- Stroll through the beautiful cherry blossom trees (in season)\n\nDay 4:\n- Take a boat tour on the Sumida River to see the city from the water ($10 per person)\n- Visit Odaiba Seaside Park - a man-made island with beaches, parks, and views of Tokyo Bay ($0 admission)\n- Explore the futuristic architecture and technology exhibits at the Miraikan museum ($8 admission)\n\nDay 5:\n- Day trip to Kamakura - an ancient capital with Buddhist temples and Shinto shrines ($10 round-trip train ticket)\n- Hike up to the Great Buddha statue and explore the Hase-dera temple complex ($5 admission)\n- Wander through the peaceful Kencho-ji temple grounds\n\nDay 6: \n- Explore the Imperial Palace East Gardens ($0 admission)\n- Visit the Sensoji Temple - one of Tokyo's most famous and historic temples ($0 admission)\n- Stroll through the traditional merchant streets of Asakusa\n\nDay 7:\n- Take a day trip to Nikko National Park - a UNESCO World Heritage site with impressive shrines, temples, and natural landscapes ($25 round-trip train ticket)\n- Hike to scenic waterfalls and lakes in the park ($0 admission)\n- Visit the Toshogu Shrine, a stunning example of traditional Japanese architecture ($10 admission)\n\nThe total cost for this 7-day nature-focused itinerary in Tokyo would be approximately $95 per day, well within the $100 daily budget.", "metadata": {"logprobs": null, "prompt_tokens": 182, "output_tokens": 645, "total_tokens": 827, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "16236cc1-6947-4e59-a9c5-a86fdf9fa89c", "event_id": "16236cc1-6947-4e59-a9c5-a86fdf9fa89c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 38002, "start_time": "2024-06-20T03:52:39.015Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_35", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b3fd10da-bd99-4219-9324-3f97d0baebb6", "event_id": "d5245b32-9359-4e65-8fe1-e2c714899702", "parent_event_id": "b3fd10da-bd99-4219-9324-3f97d0baebb6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 908, "start_time": "2024-06-20T03:53:17.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_36", "variant_name": null}, {"function_name": "Fn_simple_36", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_36\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York, NY\",\"meta\":\"Value\",\"operating_hours\":23}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_36_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby vegan restaurants based on specific criteria like operating hours.\n  function_name: 'vegan_restaurant.find_nearby' or null,\n  // The city and state, e.g. New York, NY, you should format it as City, State.\n  location: string,\n  // Preferred latest closing time of the restaurant. E.g. if 11 is given, then restaurants that close at or after 11 PM will be considered. This is in 24 hour format. Default is 24.\n  operating_hours: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find an all vegan restaurant in New York that opens until at least 11 PM."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"vegan_restaurant.find_nearby\",\n  \"location\": \"New York, NY\",\n  \"operating_hours\": 23\n}\n\nThis will search for vegan restaurants near New York, NY that are open until at least 11 PM (23:00 in 24-hour format).", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 88, "total_tokens": 256, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b3fd10da-bd99-4219-9324-3f97d0baebb6", "event_id": "b3fd10da-bd99-4219-9324-3f97d0baebb6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 38911, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_36", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ff036826-ebc2-4f5d-a6f5-574bb668d232", "event_id": "17ee07c6-2b9a-4917-b195-820dbe806abf", "parent_event_id": "ff036826-ebc2-4f5d-a6f5-574bb668d232", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 646, "start_time": "2024-06-20T03:53:17.927Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_37", "variant_name": null}, {"function_name": "Fn_simple_37", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_37\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"origin\":\"New York City\",\"destination\":\"Washington D.C.\",\"meta\":\"Value\",\"unit\":\"km\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_37_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the shortest driving distance between two locations.\n  function_name: 'get_shortest_driving_distance' or null,\n  // Starting point of the journey. You should format it as city name like Boston.\n  origin: string,\n  // End point of the journey. You should format it as city name like Boston.\n  destination: string,\n  // Preferred unit of distance (optional, default is 'km').\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the shortest driving distance between New York City and Washington D.C."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_shortest_driving_distance\",\n  \"origin\": \"New York City\",\n  \"destination\": \"Washington D.C.\",\n  \"unit\": \"km\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 51, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ff036826-ebc2-4f5d-a6f5-574bb668d232", "event_id": "ff036826-ebc2-4f5d-a6f5-574bb668d232", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 39559, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_37", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "06e652e2-d208-4f7b-aafb-674cd081df7c", "event_id": "cfe0029f-7616-4792-87be-c914b1781798", "parent_event_id": "06e652e2-d208-4f7b-aafb-674cd081df7c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 842, "start_time": "2024-06-20T03:53:18.575Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_38", "variant_name": null}, {"function_name": "Fn_simple_38", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_38\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"San Francisco\",\"end_location\":\"Los Angeles\",\"stops\":[\"Santa Barbara\",\"Monterey\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_38_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Estimate the travel time for a specific route with optional stops.\n  function_name: 'route.estimate_time' or null,\n  // The starting point for the journey. It should be format as city name such as Boston.\n  start_location: string,\n  // The destination for the journey. It should be format as city name such as Boston.\n  end_location: string,\n  // Additional cities or points of interest to stop at during the journey. Default is an empty list.\n  stops: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the estimated travel time by car from San Francisco to Los Angeles with stops at Santa Barbara and Monterey."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"route.estimate_time\",\n  \"start_location\": \"San Francisco\",\n  \"end_location\": \"Los Angeles\",\n  \"stops\": [\"Santa Barbara\", \"Monterey\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 160, "output_tokens": 66, "total_tokens": 226, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "06e652e2-d208-4f7b-aafb-674cd081df7c", "event_id": "06e652e2-d208-4f7b-aafb-674cd081df7c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 40402, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_38", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "325ed5cc-e7a2-409d-be36-e138fd89fbc4", "event_id": "04d5a1a3-b37d-4a51-8d38-dc5ae83b76da", "parent_event_id": "325ed5cc-e7a2-409d-be36-e138fd89fbc4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2021, "start_time": "2024-06-20T03:53:19.418Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_39", "variant_name": null}, {"function_name": "Fn_simple_39", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_39\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"charge1\":1e-9,\"charge2\":2e-9,\"distance\":0.05,\"meta\":\"Value\",\"constant\":8990000000.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_39_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the electrostatic potential between two charged bodies using the principle of Coulomb's Law.\n  function_name: 'calculate_electrostatic_potential' or null,\n  // The quantity of charge on the first body.\n  charge1: float,\n  // The quantity of charge on the second body.\n  charge2: float,\n  // The distance between the two bodies.\n  distance: float,\n  // The value of the electrostatic constant. Default is 8.99e9.\n  constant: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the electrostatic potential between two charged bodies of 1e-9 and 2e-9 of distance 0.05?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_electrostatic_potential\",\n  \"charge1\": 1e-9,\n  \"charge2\": 2e-9,\n  \"distance\": 0.05,\n  \"constant\": 8.99e9\n}\n\nTo calculate the electrostatic potential between the two charged bodies using Coulomb's law, the formula is:\n\nV = k * (Q1 * Q2) / r\n\nWhere:\n- V is the electrostatic potential\n- k is the electrostatic constant (8.99 x 10^9 N\u00b7m^2/C^2)\n- Q1 and Q2 are the charges of the two bodies\n- r is the distance between the two bodies\n\nPlugging in the values:\n- Q1 = 1e-9 C\n- Q2 = 2e-9 C\n- r = 0.05 m\n- k = 8.99e9 N\u00b7m^2/C^2\n\nCalculating the electrostatic potential:\nV = (8.99e9 N\u00b7m^2/C^2) * ((1e-9 C) * (2e-9 C)) / (0.05 m)\nV = 3.596 V\n\nTherefore, the electrostatic potential between the two charged bodies is 3.596 V.", "metadata": {"logprobs": null, "prompt_tokens": 175, "output_tokens": 323, "total_tokens": 498, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "325ed5cc-e7a2-409d-be36-e138fd89fbc4", "event_id": "325ed5cc-e7a2-409d-be36-e138fd89fbc4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 42425, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_39", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0e58ced4-237c-407b-9bc7-fee2afb0209a", "event_id": "c891bbac-6f5e-4662-9ccf-4eeec9ed7814", "parent_event_id": "0e58ced4-237c-407b-9bc7-fee2afb0209a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 705, "start_time": "2024-06-20T03:53:21.441Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_40", "variant_name": null}, {"function_name": "Fn_simple_40", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_40\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"charge\":2,\"distance\":3,\"meta\":\"Value\",\"permitivity\":8.854e-12}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_40_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the electric field produced by a charge at a certain distance.\n  function_name: 'calculate_electric_field' or null,\n  // Charge in coulombs producing the electric field.\n  charge: int,\n  // Distance from the charge in meters where the field is being measured.\n  distance: int,\n  // Permitivity of the space where field is being calculated, default is 8.854e-12.\n  permitivity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the electric field at a point 3 meters away from a charge of 2 coulombs."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_electric_field\",\n  \"charge\": 2,\n  \"distance\": 3,\n  \"permitivity\": 8.854e-12\n}", "metadata": {"logprobs": null, "prompt_tokens": 150, "output_tokens": 59, "total_tokens": 209, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0e58ced4-237c-407b-9bc7-fee2afb0209a", "event_id": "0e58ced4-237c-407b-9bc7-fee2afb0209a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 43131, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_40", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "34240c99-f9d3-469d-8e39-f8674008118e", "event_id": "8338d708-afe3-449c-bd06-b84a50c5b002", "parent_event_id": "34240c99-f9d3-469d-8e39-f8674008118e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2175, "start_time": "2024-06-20T03:53:22.147Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_41", "variant_name": null}, {"function_name": "Fn_simple_41", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_41\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"current\":5,\"radius\":4,\"meta\":\"Value\",\"permeability\":1.257e-6}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_41_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the magnetic field produced at the center of a circular loop carrying current.\n  function_name: 'calculate_magnetic_field' or null,\n  // The current through the circular loop in Amperes.\n  current: int,\n  // The radius of the circular loop in meters.\n  radius: int,\n  // The magnetic permeability. Default is 12.57e10 (Vacuum Permeability).\n  permeability: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the magnetic field produced at the center of a circular loop carrying current of 5 Ampere with a radius of 4 meters"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_magnetic_field\",\n  \"current\": 5,\n  \"radius\": 4,\n  \"permeability\": 1.257e-6\n}\n\nThe formula to calculate the magnetic field at the center of a circular loop carrying current is:\n\nB = (\u03bc * I) / (2 * r)\n\nWhere:\n- B is the magnetic field in Teslas (T)\n- \u03bc is the magnetic permeability in Henries per meter (H/m)\n- I is the current in Amperes (A)\n- r is the radius of the loop in meters (m)\n\nPlugging in the values:\n- Current (I) = 5 A\n- Radius (r) = 4 m\n- Permeability (\u03bc) = 1.257e-6 H/m (vacuum permeability)\n\nB = (1.257e-6 H/m * 5 A) / (2 * 4 m)\nB = 3.1425e-7 T\n\nSo, the magnetic field produced at the center of the circular loop carrying 5 Amperes of current with a radius of 4 meters is approximately 3.1425e-7 Teslas.", "metadata": {"logprobs": null, "prompt_tokens": 156, "output_tokens": 298, "total_tokens": 454, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "34240c99-f9d3-469d-8e39-f8674008118e", "event_id": "34240c99-f9d3-469d-8e39-f8674008118e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 45307, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_41", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c3c49bef-9b84-4330-bf51-47bc1af9ce74", "event_id": "3fbfdcbd-eb68-44e4-ba30-707db59d99ef", "parent_event_id": "c3c49bef-9b84-4330-bf51-47bc1af9ce74", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1927, "start_time": "2024-06-20T03:53:24.323Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_42", "variant_name": null}, {"function_name": "Fn_simple_42", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_42\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"charge1\":5,\"charge2\":7,\"distance\":3,\"meta\":\"Value\",\"medium_permittivity\":8.854e-12}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_42_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the electromagnetic force between two charges placed at a certain distance.\n  function_name: 'electromagnetic_force' or null,\n  // The magnitude of the first charge in coulombs.\n  charge1: int,\n  // The magnitude of the second charge in coulombs.\n  charge2: int,\n  // The distance between the two charges in meters.\n  distance: int,\n  // The relative permittivity of the medium in which the charges are present. Default is 8.854e-12 (Vacuum Permittivity).\n  medium_permittivity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the electromagnetic force between two charges of 5C and 7C placed 3 meters apart."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"electromagnetic_force\",\n  \"charge1\": 5,\n  \"charge2\": 7,\n  \"distance\": 3,\n  \"medium_permittivity\": 8.854e-12\n}\n\nTo calculate the electromagnetic force between the two charges, we can use the formula:\n\nF = (k * q1 * q2) / r^2\n\nWhere:\n- F is the electromagnetic force in Newtons\n- k is the Coulomb constant (8.99 x 10^9 N\u22c5m^2/C^2)\n- q1 and q2 are the magnitudes of the charges in Coulombs\n- r is the distance between the charges in meters\n\nPlugging in the values:\nF = (8.99 x 10^9 N\u22c5m^2/C^2) * (5 C) * (7 C) / (3 m)^2\nF = 1.748 x 10^9 N\n\nSo the electromagnetic force between the two charges of 5C and 7C placed 3 meters apart is 1.748 x 10^9 N.", "metadata": {"logprobs": null, "prompt_tokens": 179, "output_tokens": 288, "total_tokens": 467, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c3c49bef-9b84-4330-bf51-47bc1af9ce74", "event_id": "c3c49bef-9b84-4330-bf51-47bc1af9ce74", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 47235, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_42", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7f8d6689-bff4-410d-9067-90c734326fc2", "event_id": "a2b524fa-aa03-4631-8e5c-ab87326d3abf", "parent_event_id": "7f8d6689-bff4-410d-9067-90c734326fc2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 601, "start_time": "2024-06-20T03:53:26.252Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_43", "variant_name": null}, {"function_name": "Fn_simple_43", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_43\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"inductance\":0.05,\"capacitance\":0.0001,\"meta\":\"Value\",\"round_off\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_43_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the resonant frequency of an LC (inductor-capacitor) circuit.\n  function_name: 'calculate_resonant_frequency' or null,\n  // The inductance (L) in henries (H).\n  inductance: float,\n  // The capacitance (C) in farads (F).\n  capacitance: float,\n  // Rounding off the result to a certain decimal places, default is 2.\n  round_off: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the resonant frequency of an LC circuit given capacitance of 100\u00b5F and inductance of 50mH."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_resonant_frequency\",\n  \"inductance\": 0.05,\n  \"capacitance\": 0.0001,\n  \"round_off\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 54, "total_tokens": 213, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7f8d6689-bff4-410d-9067-90c734326fc2", "event_id": "7f8d6689-bff4-410d-9067-90c734326fc2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 47838, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_43", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f7a4b048-98df-4ba8-89d8-4cea81afade6", "event_id": "c244b46a-1673-493c-bf8f-77d1e0cf337e", "parent_event_id": "f7a4b048-98df-4ba8-89d8-4cea81afade6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2266, "start_time": "2024-06-20T03:53:26.854Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_44", "variant_name": null}, {"function_name": "Fn_simple_44", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_44\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"current\":20,\"distance\":10,\"meta\":\"Value\",\"permeability\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_44_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the magnetic field strength at a point a certain distance away from a long wire carrying a current.\n  function_name: 'calculate_magnetic_field_strength' or null,\n  // The current flowing through the wire in Amperes.\n  current: int,\n  // The perpendicular distance from the wire to the point where the magnetic field is being calculated.\n  distance: int,\n  // The permeability of the medium. Default is 12.57e-7 (Vacuum Permeability).\n  permeability: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the magnetic field strength 10 meters away from a long wire carrying a current of 20 Amperes."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_magnetic_field_strength\",\n  \"current\": 20,\n  \"distance\": 10,\n  \"permeability\": 1.257e-6 // Vacuum permeability\n}\n\nThe formula to calculate the magnetic field strength (B) at a distance (r) from a long wire carrying a current (I) is:\n\nB = (\u03bc * I) / (2 * \u03c0 * r)\n\nWhere:\n- B is the magnetic field strength in Teslas (T)\n- \u03bc is the permeability of the medium in Henries per meter (H/m)\n- I is the current in the wire in Amperes (A)\n- r is the distance from the wire in meters (m)\n\nPlugging in the values:\nB = (1.257e-6 H/m * 20 A) / (2 * \u03c0 * 10 m)\nB = 2.56e-6 T or 0.00256 Gauss\n\nSo the magnetic field strength 10 meters away from the wire carrying 20 Amperes of current is 0.00256 Gauss.", "metadata": {"logprobs": null, "prompt_tokens": 172, "output_tokens": 274, "total_tokens": 446, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f7a4b048-98df-4ba8-89d8-4cea81afade6", "event_id": "f7a4b048-98df-4ba8-89d8-4cea81afade6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 50105, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_44", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "deb028ea-3052-4b30-a5c1-00c1f72db2ca", "event_id": "9b48a229-9fc6-4693-a0a2-dca79bf51da5", "parent_event_id": "deb028ea-3052-4b30-a5c1-00c1f72db2ca", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 787, "start_time": "2024-06-20T03:53:29.121Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_45", "variant_name": null}, {"function_name": "Fn_simple_45", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_45\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"charge\":0.01,\"distance\":4,\"meta\":\"Value\",\"medium\":\"vacuum\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_45_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the electric field strength at a certain distance from a point charge.\n  function_name: 'calculate_electric_field_strength' or null,\n  // The charge in Coulombs.\n  charge: float,\n  // The distance from the charge in meters.\n  distance: int,\n  // The medium in which the charge and the point of calculation is located. Default is 'vacuum'.\n  medium: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the electric field strength 4 meters away from a charge of 0.01 Coulombs."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_electric_field_strength\",\n  \"charge\": 0.01,\n  \"distance\": 4,\n  \"medium\": \"vacuum\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 58, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "deb028ea-3052-4b30-a5c1-00c1f72db2ca", "event_id": "deb028ea-3052-4b30-a5c1-00c1f72db2ca", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 50894, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_45", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "470683d5-3054-4c89-84c0-9064d8ca6882", "event_id": "61a7882b-5df3-4342-9c5d-92f5b52030bf", "parent_event_id": "470683d5-3054-4c89-84c0-9064d8ca6882", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 760, "start_time": "2024-06-20T03:53:29.911Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_46", "variant_name": null}, {"function_name": "Fn_simple_46", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_46\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mass\":100,\"phase_transition\":\"vaporization\",\"meta\":\"Value\",\"substance\":\"water\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_46_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the energy required or released during a phase change using mass, the phase transition temperature and the specific latent heat.\n  function_name: 'thermo.calculate_energy' or null,\n  // Mass of the substance in grams.\n  mass: int,\n  // Phase transition. Can be 'melting', 'freezing', 'vaporization', 'condensation'.\n  phase_transition: string,\n  // The substance which is undergoing phase change, default is 'water'\n  substance: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the energy (in Joules) absorbed or released during the phase change of 100g of water from liquid to steam at its boiling point."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"thermo.calculate_energy\",\n  \"mass\": 100,\n  \"phase_transition\": \"vaporization\",\n  \"substance\": \"water\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 175, "output_tokens": 49, "total_tokens": 224, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "470683d5-3054-4c89-84c0-9064d8ca6882", "event_id": "470683d5-3054-4c89-84c0-9064d8ca6882", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 51655, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_46", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1754d742-515c-447a-b0b6-b5ada2d02a5d", "event_id": "9e4e3e8e-89a5-48fe-a335-2e12d960e81e", "parent_event_id": "1754d742-515c-447a-b0b6-b5ada2d02a5d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1978, "start_time": "2024-06-20T03:53:30.672Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_47", "variant_name": null}, {"function_name": "Fn_simple_47", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_47\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mass1\":20,\"temperature1\":30,\"mass2\":15,\"temperature2\":60,\"meta\":\"Value\",\"specific_heat_capacity\":4.2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_47_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the final equilibrium temperature after mixing two bodies with different masses and temperatures\n  function_name: 'calculate_final_temperature' or null,\n  // The mass of the first body (kg).\n  mass1: int,\n  // The initial temperature of the first body (Celsius).\n  temperature1: int,\n  // The mass of the second body (kg).\n  mass2: int,\n  // The initial temperature of the second body (Celsius).\n  temperature2: int,\n  // The specific heat capacity of the bodies in kJ/kg/K. If not provided, will default to that of water at room temperature, which is 4.2 kJ/kg/K.\n  specific_heat_capacity: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final temperature when 20 kg of water at 30 degree Celsius is mixed with 15 kg of water at 60 degree Celsius."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_final_temperature\",\n  \"mass1\": 20,\n  \"temperature1\": 30,\n  \"mass2\": 15,\n  \"temperature2\": 60,\n  \"specific_heat_capacity\": 4.2\n}\n\nTo calculate the final temperature when 20 kg of water at 30 degrees Celsius is mixed with 15 kg of water at 60 degrees Celsius, we can use the formula for calculating the final temperature of a mixture:\n\nT_final = (m1 * T1 + m2 * T2) / (m1 + m2)\n\nWhere:\n- T_final is the final temperature of the mixture\n- m1 is the mass of the first body (20 kg)\n- T1 is the initial temperature of the first body (30 degrees Celsius)\n- m2 is the mass of the second body (15 kg)\n- T2 is the initial temperature of the second body (60 degrees Celsius)\n\nPlugging in the values:\nT_final = (20 * 30 + 15 * 60) / (20 + 15)\nT_final = (600 + 900) / 35\nT_final = 1500 / 35\nT_final = 42.86 degrees Celsius\n\nThe final temperature of the mixture is 42.86 degrees Celsius.", "metadata": {"logprobs": null, "prompt_tokens": 228, "output_tokens": 332, "total_tokens": 560, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1754d742-515c-447a-b0b6-b5ada2d02a5d", "event_id": "1754d742-515c-447a-b0b6-b5ada2d02a5d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 53635, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_47", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "95e7e3ab-be10-4fd8-971b-dd3266c5ed36", "event_id": "cac6c5ad-1f46-4726-a87d-2b9505770de6", "parent_event_id": "95e7e3ab-be10-4fd8-971b-dd3266c5ed36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 667, "start_time": "2024-06-20T03:53:32.651Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_48", "variant_name": null}, {"function_name": "Fn_simple_48", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_48\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"substance\":\"water\",\"sea_level\":5000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_48_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the boiling point and melting point of a substance based on its name and the sea level.\n  function_name: 'get_boiling_melting_points' or null,\n  // The name of the substance.\n  substance: string,\n  // The sea level in meters.\n  sea_level: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the boiling point and melting point of water under the sea level of 5000m."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_boiling_melting_points\",\n  \"substance\": \"water\",\n  \"sea_level\": 5000\n}", "metadata": {"logprobs": null, "prompt_tokens": 117, "output_tokens": 42, "total_tokens": 159, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "95e7e3ab-be10-4fd8-971b-dd3266c5ed36", "event_id": "95e7e3ab-be10-4fd8-971b-dd3266c5ed36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 54304, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_48", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b1166eff-919f-4d46-b43c-ce74c17685da", "event_id": "a33ca216-3d98-437d-a374-3a5bcd345e4d", "parent_event_id": "b1166eff-919f-4d46-b43c-ce74c17685da", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 817, "start_time": "2024-06-20T03:53:33.320Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_49", "variant_name": null}, {"function_name": "Fn_simple_49", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_49\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mass\":45,\"volume\":15,\"meta\":\"Value\",\"unit\":\"kg/m\u00b3\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_49_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the density of a substance based on its mass and volume.\n  function_name: 'calculate_density' or null,\n  // The mass of the substance in kilograms.\n  mass: int,\n  // The volume of the substance in cubic meters.\n  volume: int,\n  // The unit of density. Default is kg/m\u00b3\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the density of a substance with a mass of 45 kg and a volume of 15 m\u00b3?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_density\",\n  \"mass\": 45,\n  \"volume\": 15,\n  \"unit\": \"kg/m\u00b3\"\n}\n\nThe density of the substance with a mass of 45 kg and a volume of 15 m\u00b3 is 3 kg/m\u00b3.", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 78, "total_tokens": 211, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b1166eff-919f-4d46-b43c-ce74c17685da", "event_id": "b1166eff-919f-4d46-b43c-ce74c17685da", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 55122, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_49", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6e6758a9-15b8-4fa4-b9f0-211cedcaaa7a", "event_id": "807e7bef-d7e5-4d02-9b24-8bd6b50d4966", "parent_event_id": "6e6758a9-15b8-4fa4-b9f0-211cedcaaa7a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1594, "start_time": "2024-06-20T03:53:34.138Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_50", "variant_name": null}, {"function_name": "Fn_simple_50", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_50\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"gauge_pressure\":2,\"meta\":\"Value\",\"atm_pressure\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_50_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the absolute pressure from gauge and atmospheric pressures.\n  function_name: 'calc_absolute_pressure' or null,\n  // The atmospheric pressure in atmospheres (atm). Default is 1 atm if not provided.\n  atm_pressure: int or null,\n  // The gauge pressure in atmospheres (atm). Must be provided.\n  gauge_pressure: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the absolute pressure in pascals given atmospheric pressure of 1 atm and a gauge pressure of 2 atm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calc_absolute_pressure\",\n  \"atm_pressure\": 1,\n  \"gauge_pressure\": 2\n}\n\nTo calculate the absolute pressure in pascals, we can use the formula:\n\nAbsolute pressure = Atmospheric pressure + Gauge pressure\n\nWhere:\n- Atmospheric pressure = 1 atm\n- Gauge pressure = 2 atm\n\nAbsolute pressure = 1 atm + 2 atm = 3 atm\n\nTo convert from atmospheres (atm) to pascals (Pa), we can use the conversion factor:\n1 atm = 101,325 Pa\n\nAbsolute pressure in pascals = 3 atm * 101,325 Pa/atm = 303,975 Pa", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 190, "total_tokens": 328, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6e6758a9-15b8-4fa4-b9f0-211cedcaaa7a", "event_id": "6e6758a9-15b8-4fa4-b9f0-211cedcaaa7a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 56718, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_50", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "09a13450-7903-451b-943d-3e44b31cc687", "event_id": "a39913fe-dd48-4e65-a773-c7bf03e7e0be", "parent_event_id": "09a13450-7903-451b-943d-3e44b31cc687", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2242, "start_time": "2024-06-20T03:53:35.734Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_51", "variant_name": null}, {"function_name": "Fn_simple_51", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_51\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"substance\":\"water (ice to liquid)\",\"mass\":1,\"initial_temperature\":0,\"final_temperature\":100,\"meta\":\"Value\",\"pressure\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_51_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the change in entropy for a mass of a specific substance under set initial and final conditions.\n  function_name: 'entropy_change.calculate' or null,\n  // The substance for which the change in entropy is calculated.\n  substance: string,\n  // The mass of the substance in kg.\n  mass: int,\n  // The initial temperature of the substance in degree Celsius.\n  initial_temperature: int,\n  // The final temperature of the substance in degree Celsius.\n  final_temperature: int,\n  // The pressure the substance is under in atmospheres. (default: 1)\n  pressure: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the change in entropy in Joules per Kelvin of a 1kg ice block at 0\u00b0C if it is heated to 100\u00b0C under 1 atmosphere of pressure?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the change in entropy for a 1kg ice block heated from 0\u00b0C to 100\u00b0C under 1 atmosphere of pressure, we can use the following schema:\n\n{\n  \"function_name\": \"entropy_change.calculate\",\n  \"substance\": \"water (ice to liquid)\",\n  \"mass\": 1,\n  \"initial_temperature\": 0,\n  \"final_temperature\": 100,\n  \"pressure\": 1\n}\n\nThe key steps to calculate the change in entropy are:\n\n1. Calculate the entropy change during the ice to liquid water phase transition at 0\u00b0C.\n2. Calculate the entropy change during the heating of liquid water from 0\u00b0C to 100\u00b0C.\n\nThe entropy change during the ice to liquid water phase transition can be calculated using the latent heat of fusion of water (333.55 kJ/kg) and the melting temperature of 0\u00b0C.\n\nThe entropy change during the heating of liquid water from 0\u00b0C to 100\u00b0C can be calculated using the specific heat capacity of water (4.184 kJ/kg\u00b7K).\n\nThe total change in entropy would be the sum of these two entropy changes.\n\nThe final result would be the total change in entropy in Joules per Kelvin.", "metadata": {"logprobs": null, "prompt_tokens": 208, "output_tokens": 287, "total_tokens": 495, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "09a13450-7903-451b-943d-3e44b31cc687", "event_id": "09a13450-7903-451b-943d-3e44b31cc687", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 58961, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_51", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "33186624-3e85-41d7-b283-bcadd6c71630", "event_id": "61323b6b-a107-4a30-b4b8-ed9b6391582d", "parent_event_id": "33186624-3e85-41d7-b283-bcadd6c71630", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 973, "start_time": "2024-06-20T03:53:37.978Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_52", "variant_name": null}, {"function_name": "Fn_simple_52", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_52\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_temp\":300,\"final_temp\":400,\"heat_capacity\":5,\"meta\":\"Value\",\"isothermal\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_52_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the entropy change for an isothermal and reversible process.\n  function_name: 'calculate_entropy_change' or null,\n  // The initial temperature in Kelvin.\n  initial_temp: int,\n  // The final temperature in Kelvin.\n  final_temp: int,\n  // The heat capacity in J/K.\n  heat_capacity: int,\n  // Whether the process is isothermal. Default is True.\n  isothermal: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the entropy change for a certain process given an initial temperature of 300K, a final temperature of 400K, and a heat capacity of 5J/K."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_entropy_change\",\n  \"initial_temp\": 300,\n  \"final_temp\": 400,\n  \"heat_capacity\": 5,\n  \"isothermal\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 68, "total_tokens": 238, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "33186624-3e85-41d7-b283-bcadd6c71630", "event_id": "33186624-3e85-41d7-b283-bcadd6c71630", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 59935, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_52", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d1794969-2527-4d3c-ae30-287400eeed36", "event_id": "59061a92-eab0-4c9b-bc4e-2eeb1a129010", "parent_event_id": "d1794969-2527-4d3c-ae30-287400eeed36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 550, "start_time": "2024-06-20T03:53:38.951Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_53", "variant_name": null}, {"function_name": "Fn_simple_53", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_53\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"temp\":298,\"volume\":10,\"meta\":\"Value\",\"gas\":\"air\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_53_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the heat capacity at constant pressure of air using its temperature and volume.\n  function_name: 'calc_heat_capacity' or null,\n  // The temperature of the gas in Kelvin.\n  temp: int,\n  // The volume of the gas in m^3.\n  volume: int,\n  // Type of gas, with 'air' as default.\n  gas: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the heat capacity at constant pressure for air, given its temperature is 298K and volume is 10 m^3."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calc_heat_capacity\",\n  \"temp\": 298,\n  \"volume\": 10,\n  \"gas\": \"air\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 141, "output_tokens": 44, "total_tokens": 185, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d1794969-2527-4d3c-ae30-287400eeed36", "event_id": "d1794969-2527-4d3c-ae30-287400eeed36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 60486, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_53", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "45c6491a-3133-4f13-9142-5bc61a40d024", "event_id": "75d6b750-54fe-47ba-ad2f-632592d9a6d4", "parent_event_id": "45c6491a-3133-4f13-9142-5bc61a40d024", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 779, "start_time": "2024-06-20T03:53:39.503Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_54", "variant_name": null}, {"function_name": "Fn_simple_54", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_54\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"DNA_id\":\"DNA123\",\"meta\":\"Value\",\"format\":\"fasta\",\"upstream\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_54_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the sequence of a DNA molecule with the given id from a public database.\n  function_name: 'fetch_DNA_sequence' or null,\n  // Unique ID of the DNA molecule in the database.\n  DNA_id: string,\n  // Optional parameter to get sequence in specific format (default to 'fasta').\n  format: string or null,\n  // Optional parameter to include certain number of base pairs upstream the DNA sequence (default to 0).\n  upstream: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve the sequence of DNA molecule with id `DNA123`."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"fetch_DNA_sequence\",\n  \"DNA_id\": \"DNA123\",\n  \"format\": \"fasta\",\n  \"upstream\": 0\n}", "metadata": {"logprobs": null, "prompt_tokens": 147, "output_tokens": 57, "total_tokens": 204, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "45c6491a-3133-4f13-9142-5bc61a40d024", "event_id": "45c6491a-3133-4f13-9142-5bc61a40d024", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 61267, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_54", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "eb9781c1-8849-4320-b354-58d29cbdd295", "event_id": "181965fa-f0af-4c33-a2e4-2539f97e5dd0", "parent_event_id": "eb9781c1-8849-4320-b354-58d29cbdd295", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 791, "start_time": "2024-06-20T03:53:40.283Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_55", "variant_name": null}, {"function_name": "Fn_simple_55", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_55\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"gene\":\"BRCA1\",\"meta\":\"Value\",\"species\":\"Homo sapiens\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_55_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the protein sequence encoded by a human gene.\n  function_name: 'get_protein_sequence' or null,\n  // The human gene of interest.\n  gene: string,\n  // The species for which the gene is to be analyzed. (default: Homo sapiens)\n  species: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Identify the protein sequence of a given human gene 'BRCA1'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"get_protein_sequence\",\n  \"gene\": \"BRCA1\",\n  \"species\": \"Homo sapiens\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 111, "output_tokens": 52, "total_tokens": 163, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "eb9781c1-8849-4320-b354-58d29cbdd295", "event_id": "eb9781c1-8849-4320-b354-58d29cbdd295", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 62059, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_55", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1bb8fc15-70e4-4fd8-8e0f-16eae1234d9c", "event_id": "944d067f-71d5-4daa-b0a4-18ddc9822dde", "parent_event_id": "1bb8fc15-70e4-4fd8-8e0f-16eae1234d9c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 637, "start_time": "2024-06-20T03:53:41.075Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_56", "variant_name": null}, {"function_name": "Fn_simple_56", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_56\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cell_type\":\"human cell\",\"meta\":\"Value\",\"detailed\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_56_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve information about the structure and functioning of a specified type of cell\n  function_name: 'biology.get_cell_info' or null,\n  // Type of cell you want information about\n  cell_type: string,\n  // Indicate if you want a detailed description of the cell (default: false)\n  detailed: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me detailed information about the structure of human cell"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"biology.get_cell_info\",\n  \"cell_type\": \"human cell\",\n  \"detailed\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 49, "total_tokens": 158, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1bb8fc15-70e4-4fd8-8e0f-16eae1234d9c", "event_id": "1bb8fc15-70e4-4fd8-8e0f-16eae1234d9c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 62697, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_56", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3d71ca06-5cc8-4099-88d3-11930a01eaad", "event_id": "1059d477-e981-4aad-8acb-1b678713ad03", "parent_event_id": "3d71ca06-5cc8-4099-88d3-11930a01eaad", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 720, "start_time": "2024-06-20T03:53:41.714Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_57", "variant_name": null}, {"function_name": "Fn_simple_57", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_57\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cell_compartment\":\"plasma_membrane\",\"meta\":\"Value\",\"include_description\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_57_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the list of proteins in a specific cell compartment.\n  function_name: 'cellbio.get_proteins' or null,\n  // The specific cell compartment.\n  cell_compartment: string,\n  // Set true if you want a brief description of each protein. (default: false)\n  include_description: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the names of proteins found in the plasma membrane?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"cellbio.get_proteins\",\n  \"cell_compartment\": \"plasma_membrane\",\n  \"include_description\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 112, "output_tokens": 53, "total_tokens": 165, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3d71ca06-5cc8-4099-88d3-11930a01eaad", "event_id": "3d71ca06-5cc8-4099-88d3-11930a01eaad", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 63419, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_57", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b02339a0-4917-4e49-a24e-cf979cbfb7bc", "event_id": "3cf0394b-eab1-43cf-a66d-2d635a88e5b1", "parent_event_id": "b02339a0-4917-4e49-a24e-cf979cbfb7bc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1533, "start_time": "2024-06-20T03:53:42.435Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_58", "variant_name": null}, {"function_name": "Fn_simple_58", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_58\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"optical_density\":0.6,\"dilution\":5,\"meta\":\"Value\",\"calibration_factor\":1000000000.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_58_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the cell density of a biological sample based on its optical density and the experiment dilution.\n  function_name: 'calculate_cell_density' or null,\n  // The optical density of the sample, usually obtained from a spectrophotometer reading.\n  optical_density: float,\n  // The dilution factor applied during the experiment.\n  dilution: int,\n  // The calibration factor to adjust the density, default value is 1e9 assuming cell density is in CFU/mL.\n  calibration_factor: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the cell density in a sample with an optical density of 0.6, where the experiment dilution is 5 times."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_cell_density\",\n  \"optical_density\": 0.6,\n  \"dilution\": 5,\n  \"calibration_factor\": 1e9\n}\n\nTo calculate the cell density, we can use the following formula:\n\nCell Density = (Optical Density x Calibration Factor) / Dilution\n\nGiven:\n- Optical Density (OD) = 0.6\n- Dilution = 5\n- Calibration Factor = 1e9 (assuming cell density is in CFU/mL)\n\nCalculating the cell density:\nCell Density = (0.6 x 1e9) / 5\nCell Density = 1.2e8 CFU/mL\n\nTherefore, the cell density in the sample is 1.2e8 CFU/mL.", "metadata": {"logprobs": null, "prompt_tokens": 174, "output_tokens": 203, "total_tokens": 377, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b02339a0-4917-4e49-a24e-cf979cbfb7bc", "event_id": "b02339a0-4917-4e49-a24e-cf979cbfb7bc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 64953, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_58", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "86549ab0-27c8-4826-8568-74058fd2eebc", "event_id": "bcee49ea-fe84-49eb-bdaf-2faf776d0ce0", "parent_event_id": "86549ab0-27c8-4826-8568-74058fd2eebc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:53:43.969Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_59", "variant_name": null}, {"function_name": "Fn_simple_59", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_59\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"molecule\":\"ATP synthase\",\"organelle\":\"mitochondria\",\"specific_function\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_59_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Look up the function of a given molecule in a specified organelle.\n  function_name: 'cell_biology.function_lookup' or null,\n  // The molecule of interest.\n  molecule: string,\n  // The organelle of interest.\n  organelle: string,\n  // If set to true, a specific function of the molecule within the organelle will be provided, if such information exists.\n  specific_function: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the function of ATP synthase in mitochondria?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"cell_biology.function_lookup\",\n  \"molecule\": \"ATP synthase\",\n  \"organelle\": \"mitochondria\",\n  \"specific_function\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 51, "total_tokens": 183, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "86549ab0-27c8-4826-8568-74058fd2eebc", "event_id": "86549ab0-27c8-4826-8568-74058fd2eebc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 65567, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_59", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3321d3d8-47f6-4361-abf9-348c3241e348", "event_id": "d3b1e8b9-62c7-4e54-8032-feb0c4a0f13c", "parent_event_id": "3321d3d8-47f6-4361-abf9-348c3241e348", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:53:44.583Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_60", "variant_name": null}, {"function_name": "Fn_simple_60", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_60\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"compound\":\"C6H12O6\",\"to_unit\":\"g/mol\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_60_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the molecular weight of a compound given the compound formula.\n  function_name: 'calculate_molecular_weight' or null,\n  // The molecular formula of the compound.\n  compound: string,\n  // The unit in which to return the result.\n  to_unit: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the molecular weight of Glucose (C6H12O6) in grams/mole."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_molecular_weight\",\n  \"compound\": \"C6H12O6\",\n  \"to_unit\": \"g/mol\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 108, "output_tokens": 45, "total_tokens": 153, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3321d3d8-47f6-4361-abf9-348c3241e348", "event_id": "3321d3d8-47f6-4361-abf9-348c3241e348", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 66284, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_60", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ab468f2e-670c-4870-b43f-98b4a4ab30ff", "event_id": "4c36d76c-9a5d-40de-aad4-55b3c685c7b7", "parent_event_id": "ab468f2e-670c-4870-b43f-98b4a4ab30ff", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:53:45.300Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_61", "variant_name": null}, {"function_name": "Fn_simple_61", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_61\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"snp_id\":\"rs6034464\",\"meta\":\"Value\",\"species\":\"Homo sapiens\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_61_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Finds the type of a genetic mutation based on its SNP (Single Nucleotide Polymorphism) ID.\n  function_name: 'mutation_type.find' or null,\n  // The ID of the Single Nucleotide Polymorphism (SNP) mutation.\n  snp_id: string,\n  // Species in which the SNP occurs, default is 'Homo sapiens' (Humans).\n  species: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the type of gene mutation based on SNP (Single Nucleotide Polymorphism) ID rs6034464."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"mutation_type.find\",\n  \"snp_id\": \"rs6034464\",\n  \"species\": \"Homo sapiens\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 154, "output_tokens": 55, "total_tokens": 209, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ab468f2e-670c-4870-b43f-98b4a4ab30ff", "event_id": "ab468f2e-670c-4870-b43f-98b4a4ab30ff", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 66999, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_61", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "086207c2-cb85-4c09-a208-e2d57a2c8c60", "event_id": "700cd1db-f62d-43ff-acb5-f8ff80c37873", "parent_event_id": "086207c2-cb85-4c09-a208-e2d57a2c8c60", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 853, "start_time": "2024-06-20T03:53:46.015Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_62", "variant_name": null}, {"function_name": "Fn_simple_62", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_62\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":150,\"height\":70,\"activity_level\":\"Value1\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_62_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predict the likelihood of diabetes type 2 based on a person's weight and height.\n  function_name: 'diabetes_prediction' or null,\n  // Weight of the person in lbs.\n  weight: int,\n  // Height of the person in inches.\n  height: int,\n  // Physical activity level of the person.\n  activity_level: 'sedentary' or 'lightly active' or 'moderately active' or 'very active' or 'extra active',\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict whether a person with weight 150lbs and height 5ft 10in who is lightly active will get type 2 diabetes."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"diabetes_prediction\",\n  \"weight\": 150,\n  \"height\": 70, // 5ft 10in = 70 inches\n  \"activity_level\": \"lightly active\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 68, "total_tokens": 236, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "086207c2-cb85-4c09-a208-e2d57a2c8c60", "event_id": "086207c2-cb85-4c09-a208-e2d57a2c8c60", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 67853, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_62", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "08e53446-19b3-4e0b-a462-c9cfcf7c8fd4", "event_id": "689fc949-5fa8-492b-b03d-b64cae3a08fb", "parent_event_id": "08e53446-19b3-4e0b-a462-c9cfcf7c8fd4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1213, "start_time": "2024-06-20T03:53:46.870Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_63", "variant_name": null}, {"function_name": "Fn_simple_63", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_63\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sequence\":\"AGTCGATCGAACGTACGTACG\",\"reference_sequence\":\"AGTCCATCGAACGTACGTACG\",\"meta\":\"Value\",\"mutation_type\":\"Value2\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_63_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Analyzes the DNA sequence based on a reference sequence and return any potential mutations.\n  function_name: 'analyze_dna_sequence' or null,\n  // The DNA sequence to be analyzed.\n  sequence: string,\n  // The reference DNA sequence.\n  reference_sequence: string,\n  // Type of the mutation to be looked for in the sequence. Default to 'substitution'.\n  mutation_type: 'insertion' or 'deletion' or 'substitution' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Analyze the DNA sequence 'AGTCGATCGAACGTACGTACG' for any potential substitution mutations based on a reference sequence 'AGTCCATCGAACGTACGTACG'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"analyze_dna_sequence\",\n  \"sequence\": \"AGTCGATCGAACGTACGTACG\",\n  \"reference_sequence\": \"AGTCCATCGAACGTACGTACG\",\n  \"mutation_type\": \"substitution\"\n}\n\nBased on the provided DNA sequence and the reference sequence, the potential substitution mutation is at the 5th position, where the nucleotide 'C' in the reference sequence is substituted with 'G' in the given sequence.", "metadata": {"logprobs": null, "prompt_tokens": 184, "output_tokens": 137, "total_tokens": 321, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "08e53446-19b3-4e0b-a462-c9cfcf7c8fd4", "event_id": "08e53446-19b3-4e0b-a462-c9cfcf7c8fd4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 69068, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_63", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e5cef48b-cc9f-4bdc-8abe-553afc9254a7", "event_id": "dac17f60-627c-4ff3-b522-613c7e6b7523", "parent_event_id": "e5cef48b-cc9f-4bdc-8abe-553afc9254a7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 901, "start_time": "2024-06-20T03:53:48.085Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_64", "variant_name": null}, {"function_name": "Fn_simple_64", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_64\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species1\":\"human\",\"species2\":\"chimpanzee\",\"meta\":\"Value\",\"format\":\"percentage\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_64_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the genetic similarity between two species based on their DNA sequences.\n  function_name: 'genetics.calculate_similarity' or null,\n  // The first species to compare.\n  species1: string,\n  // The second species to compare.\n  species2: string,\n  // The format of the result (percentage or fraction). Default is percentage.\n  format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out how genetically similar a human and a chimp are in percentage."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"genetics.calculate_similarity\",\n  \"species1\": \"human\",\n  \"species2\": \"chimpanzee\",\n  \"format\": \"percentage\"\n}\n\nThe genetic similarity between humans and chimpanzees is approximately 98.8% based on DNA sequence comparisons.", "metadata": {"logprobs": null, "prompt_tokens": 126, "output_tokens": 84, "total_tokens": 210, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e5cef48b-cc9f-4bdc-8abe-553afc9254a7", "event_id": "e5cef48b-cc9f-4bdc-8abe-553afc9254a7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 69970, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_64", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0a4c99aa-8250-4d3c-8038-d3c35d939700", "event_id": "5068cd62-5b0d-4ae1-b018-0a8cd4d05783", "parent_event_id": "0a4c99aa-8250-4d3c-8038-d3c35d939700", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1432, "start_time": "2024-06-20T03:53:48.986Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_65", "variant_name": null}, {"function_name": "Fn_simple_65", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_65\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"allele_frequency\":0.3,\"genotype\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_65_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the frequency of homozygous dominant genotype based on the allele frequency using Hardy Weinberg Principle.\n  function_name: 'calculate_genotype_frequency' or null,\n  // The frequency of the dominant allele in the population.\n  allele_frequency: float,\n  // The genotype which frequency is needed.\n  genotype: 'AA' or 'Aa' or 'aa',\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the genotype frequency of AA genotype in a population, given that allele frequency of A is 0.3?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_genotype_frequency\",\n  \"allele_frequency\": 0.3,\n  \"genotype\": \"AA\"\n}\n\nTo calculate the genotype frequency of the AA genotype, we can use the Hardy-Weinberg principle. The formula for the frequency of the homozygous dominant genotype (AA) is:\n\np^2\n\nWhere:\n- p is the frequency of the dominant allele (A)\n\nGiven:\n- Allele frequency of A = 0.3\n\nSubstituting the values, we get:\np = 0.3\nFrequency of AA genotype = p^2 = 0.3^2 = 0.09 or 9%\n\nSo, the genotype frequency of the AA genotype in the population is 9%.", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 189, "total_tokens": 334, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0a4c99aa-8250-4d3c-8038-d3c35d939700", "event_id": "0a4c99aa-8250-4d3c-8038-d3c35d939700", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 71404, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_65", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c4407f1b-998a-4c3f-a10f-987a1723db72", "event_id": "cab6b2b2-4b88-42ac-a28a-7bc9dc6b63bf", "parent_event_id": "c4407f1b-998a-4c3f-a10f-987a1723db72", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 850, "start_time": "2024-06-20T03:53:50.420Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_66", "variant_name": null}, {"function_name": "Fn_simple_66", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_66\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"Brazil\",\"year\":\"2022\",\"population\":213000000,\"land_area\":8500000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_66_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the population density of a specific country in a specific year.\n  function_name: 'calculate_density' or null,\n  // The country for which the density needs to be calculated.\n  country: string,\n  // The year in which the density is to be calculated.\n  year: string,\n  // The population of the country.\n  population: int,\n  // The land area of the country in square kilometers.\n  land_area: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Population Density for Brazil in 2022 if the population is 213 million and the land area is 8.5 million square kilometers."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_density\",\n  \"country\": \"Brazil\",\n  \"year\": \"2022\",\n  \"population\": 213000000,\n  \"land_area\": 8500000\n}\n\nTo calculate the population density, we divide the population by the land area:\n\nPopulation Density = Population / Land Area\nPopulation Density = 213,000,000 / 8,500,000\nPopulation Density = 25.06 people per square kilometer", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 114, "total_tokens": 273, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c4407f1b-998a-4c3f-a10f-987a1723db72", "event_id": "c4407f1b-998a-4c3f-a10f-987a1723db72", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 72256, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_66", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b0f5a747-c9b0-47b0-a361-2149e3c5071f", "event_id": "483cb08f-753a-4bc3-89ab-8993c3e51b77", "parent_event_id": "b0f5a747-c9b0-47b0-a361-2149e3c5071f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 622, "start_time": "2024-06-20T03:53:51.272Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_67", "variant_name": null}, {"function_name": "Fn_simple_67", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_67\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Amazon rainforest\",\"time_frame\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_67_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve precipitation data for a specified location and time period.\n  function_name: 'ecology_data.precipitation_stats' or null,\n  // The name of the location, e.g., 'Amazon rainforest'.\n  location: string,\n  // The time period for which data is required.\n  time_frame: 'six_months' or 'year' or 'five_years',\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me data on average precipitation in the Amazon rainforest for the last six months."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"ecology_data.precipitation_stats\",\n  \"location\": \"Amazon rainforest\",\n  \"time_frame\": \"six_months\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 55, "total_tokens": 187, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b0f5a747-c9b0-47b0-a361-2149e3c5071f", "event_id": "b0f5a747-c9b0-47b0-a361-2149e3c5071f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 72879, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_67", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "286937c9-2490-4a1b-9a25-b956078b06ac", "event_id": "7304bd64-f5b3-427d-9be2-c4705cf50556", "parent_event_id": "286937c9-2490-4a1b-9a25-b956078b06ac", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 583, "start_time": "2024-06-20T03:53:51.895Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_68", "variant_name": null}, {"function_name": "Fn_simple_68", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_68\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"color\":\"green\",\"habitat\":\"forest\",\"meta\":\"Value\",\"size\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_68_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Identify a bird species based on certain characteristics.\n  function_name: 'identify_bird' or null,\n  // Color of the bird.\n  color: string,\n  // Habitat of the bird.\n  habitat: string,\n  // Size of the bird. Default is 'small'\n  size: 'small' or 'medium' or 'large' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Identify a small green bird in forest."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"identify_bird\",\n  \"color\": \"green\",\n  \"habitat\": \"forest\",\n  \"size\": \"small\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 119, "output_tokens": 42, "total_tokens": 161, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "286937c9-2490-4a1b-9a25-b956078b06ac", "event_id": "286937c9-2490-4a1b-9a25-b956078b06ac", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 73463, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_68", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "38e31392-dba4-450a-87bb-6d611468f45e", "event_id": "5f0122f3-596f-4826-9b61-3b1f42a76098", "parent_event_id": "38e31392-dba4-450a-87bb-6d611468f45e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 573, "start_time": "2024-06-20T03:53:52.480Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_69", "variant_name": null}, {"function_name": "Fn_simple_69", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_69\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Yellowstone National Park\",\"years\":5,\"meta\":\"Value\",\"include_human_impact\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_69_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predicts the forest growth over the next N years based on current trends.\n  function_name: 'forest_growth_forecast' or null,\n  // The location where you want to predict forest growth.\n  location: string,\n  // The number of years for the forecast.\n  years: int,\n  // Whether or not to include the impact of human activities in the forecast. If not provided, defaults to false.\n  include_human_impact: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the growth of forest in Yellowstone National Park for the next 5 years including human impact."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"forest_growth_forecast\",\n  \"location\": \"Yellowstone National Park\",\n  \"years\": 5,\n  \"include_human_impact\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 150, "output_tokens": 50, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "38e31392-dba4-450a-87bb-6d611468f45e", "event_id": "38e31392-dba4-450a-87bb-6d611468f45e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 74038, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_69", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "68e18199-3ecd-47f7-ad62-8a38b1f0d836", "event_id": "a65850f6-91a3-4698-a604-cee7b1db5ddd", "parent_event_id": "68e18199-3ecd-47f7-ad62-8a38b1f0d836", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 808, "start_time": "2024-06-20T03:53:53.054Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_70", "variant_name": null}, {"function_name": "Fn_simple_70", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_70\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Mississippi river\",\"meta\":\"Value\",\"year\":2020,\"species\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_70_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the population and species of turtles in a specific location.\n  function_name: 'ecology.get_turtle_population' or null,\n  // The name of the location.\n  location: string,\n  // The year of the data requested. Default is 2001.\n  year: int or null,\n  // Whether to include species information. Default is false.\n  species: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the population and species of turtles in Mississippi river in 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"ecology.get_turtle_population\",\n  \"location\": \"Mississippi river\",\n  \"year\": 2020,\n  \"species\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 56, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "68e18199-3ecd-47f7-ad62-8a38b1f0d836", "event_id": "68e18199-3ecd-47f7-ad62-8a38b1f0d836", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 74847, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_70", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "60ca6582-a708-4b23-9f51-a2f3471f34f9", "event_id": "60ba97d3-ffd4-4381-b275-f22ce7b9994e", "parent_event_id": "60ca6582-a708-4b23-9f51-a2f3471f34f9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1575, "start_time": "2024-06-20T03:53:53.864Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_71", "variant_name": null}, {"function_name": "Fn_simple_71", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_71\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"vehicle_type\":\"gas\",\"miles_driven\":1500,\"meta\":\"Value\",\"emission_factor\":355.48}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_71_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the annual carbon emissions produced by a specific type of vehicle based on mileage.\n  function_name: 'calculate_vehicle_emission' or null,\n  // The type of vehicle. 'gas' refers to a gasoline vehicle, 'diesel' refers to a diesel vehicle, and 'EV' refers to an electric vehicle.\n  vehicle_type: string,\n  // The number of miles driven per year.\n  miles_driven: int,\n  // Optional emission factor to calculate emissions, in g/mile. Default factor is 355.48.\n  emission_factor: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the carbon footprint of a gas-powered vehicle driving 1500 miles in a year?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the carbon footprint of a gas-powered vehicle driving 1500 miles in a year, we can use the following schema:\n\n{\n  \"function_name\": \"calculate_vehicle_emission\",\n  \"vehicle_type\": \"gas\",\n  \"miles_driven\": 1500,\n  \"emission_factor\": 355.48\n}\n\nUsing this information, the carbon footprint can be calculated as follows:\n\nThe default emission factor for a gas-powered vehicle is 355.48 g/mile.\nThe total miles driven in a year is 1500 miles.\nThe total carbon emissions can be calculated by multiplying the emission factor by the miles driven:\n355.48 g/mile x 1500 miles = 533,220 g\nThis is equivalent to 533.22 kg of carbon emissions per year for a gas-powered vehicle driving 1500 miles.", "metadata": {"logprobs": null, "prompt_tokens": 179, "output_tokens": 202, "total_tokens": 381, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "60ca6582-a708-4b23-9f51-a2f3471f34f9", "event_id": "60ca6582-a708-4b23-9f51-a2f3471f34f9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 76423, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_71", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "43c26516-dc81-4bb0-8c0c-7a1267220aa9", "event_id": "11c6a2f9-4b82-43e7-96cc-d4f9bd0d3feb", "parent_event_id": "43c26516-dc81-4bb0-8c0c-7a1267220aa9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 622, "start_time": "2024-06-20T03:53:55.440Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_72", "variant_name": null}, {"function_name": "Fn_simple_72", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_72\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"length\":100,\"preferences\":[\"Value3\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_72_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generate a random DNA sequence with a specific length and nucleotide preference.\n  function_name: 'generate_DNA_sequence' or null,\n  // The length of the DNA sequence to be generated.\n  length: int,\n  // Preferred nucleotides to include more frequently in the DNA sequence.\n  preferences: [\n    'A' or 'T' or 'C' or 'G'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a DNA sequence with 100 bases including more G (Guanine) and C (Cytosine)."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"generate_DNA_sequence\",\n  \"length\": 100,\n  \"preferences\": [\n    \"G\",\n    \"C\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 47, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "43c26516-dc81-4bb0-8c0c-7a1267220aa9", "event_id": "43c26516-dc81-4bb0-8c0c-7a1267220aa9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 77047, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_72", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e219b885-94b1-43ba-bcb9-8181f8e54cb0", "event_id": "7ac9ba21-3af0-4580-83b9-4cb744a53713", "parent_event_id": "e219b885-94b1-43ba-bcb9-8181f8e54cb0", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1218, "start_time": "2024-06-20T03:53:56.064Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_73", "variant_name": null}, {"function_name": "Fn_simple_73", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_73\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"trait_values\":[0.8,0.7],\"trait_contributions\":[0.4,0.6],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_73_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the expected evolutionary fitness of a creature based on the individual values and contributions of its traits.\n  function_name: 'calculate_fitness' or null,\n  // List of trait values, which are decimal numbers between 0 and 1, where 1 represents the trait maximally contributing to fitness.\n  trait_values: float[],\n  // List of the percentage contributions of each trait to the overall fitness, which must sum to 1.\n  trait_contributions: float[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the expected evolutionary fitness of a creature, with trait A contributing to 40% of the fitness and trait B contributing 60%, if trait A has a value of 0.8 and trait B a value of 0.7."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_fitness\",\n  \"trait_values\": [0.8, 0.7],\n  \"trait_contributions\": [0.4, 0.6]\n}\n\nThe expected evolutionary fitness of the creature can be calculated as follows:\n\nFitness = (Trait A value * Trait A contribution) + (Trait B value * Trait B contribution)\nFitness = (0.8 * 0.4) + (0.7 * 0.6)\nFitness = 0.32 + 0.42\nFitness = 0.74\n\nSo the expected evolutionary fitness of the creature is 0.74.", "metadata": {"logprobs": null, "prompt_tokens": 179, "output_tokens": 167, "total_tokens": 346, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e219b885-94b1-43ba-bcb9-8181f8e54cb0", "event_id": "e219b885-94b1-43ba-bcb9-8181f8e54cb0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 78266, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_73", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1478fa3d-3bc2-4fb6-a189-f0d32b7acbc3", "event_id": "8dbcdadd-9e3b-47aa-80d5-82e51d74a3b6", "parent_event_id": "1478fa3d-3bc2-4fb6-a189-f0d32b7acbc3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 709, "start_time": "2024-06-20T03:53:57.283Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_74", "variant_name": null}, {"function_name": "Fn_simple_74", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_74\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"United States\",\"years\":20,\"meta\":\"Value\",\"growth_rate\":1.2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_74_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the projected population growth based on the current growth rate.\n  function_name: 'population_projections' or null,\n  // The country for which to calculate the population projection.\n  country: string,\n  // Number of years for the projection.\n  years: int,\n  // Optional parameter to specify the growth rate, in percentage. Default is 1.2.\n  growth_rate: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the projected population growth in United States in the next 20 years?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"population_projections\",\n  \"country\": \"United States\",\n  \"years\": 20,\n  \"growth_rate\": 1.2\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 57, "total_tokens": 191, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1478fa3d-3bc2-4fb6-a189-f0d32b7acbc3", "event_id": "1478fa3d-3bc2-4fb6-a189-f0d32b7acbc3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 78977, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_74", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8dce2e4f-acb9-4fb3-b440-3889b6f3b161", "event_id": "222421f9-6c80-45fe-870b-6f1aa3f348c0", "parent_event_id": "8dce2e4f-acb9-4fb3-b440-3889b6f3b161", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1607, "start_time": "2024-06-20T03:53:57.993Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_75", "variant_name": null}, {"function_name": "Fn_simple_75", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_75\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_population\":5000,\"duplication_frequency\":1,\"duration\":6,\"meta\":\"Value\",\"generation_time\":60}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_75_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the evolution rate of bacteria given the starting number, duplication frequency and total duration.\n  function_name: 'calculate_bacteria_evolution_rate' or null,\n  // The starting population of bacteria.\n  start_population: int,\n  // The frequency of bacteria duplication per hour.\n  duplication_frequency: int,\n  // Total duration in hours.\n  duration: int,\n  // The average generation time of the bacteria in minutes. Default is 20 minutes\n  generation_time: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the evolution rate of a bacteria population, start with 5000 bacteria, each bacteria duplicates every hour for 6 hours."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_bacteria_evolution_rate\",\n  \"start_population\": 5000,\n  \"duplication_frequency\": 1,\n  \"duration\": 6,\n  \"generation_time\": 60\n}\n\nThe evolution rate of the bacteria population can be calculated as follows:\n\n* Starting population: 5000 bacteria\n* Duplication frequency: 1 duplication per hour\n* Duration: 6 hours\n\nThe formula to calculate the final population is:\nFinal population = Starting population * 2^(Duration * Duplication frequency)\n\nPlugging in the values:\nFinal population = 5000 * 2^(6 * 1)\nFinal population = 5000 * 2^6\nFinal population = 5000 * 64\nFinal population = 320,000\n\nTherefore, the evolution rate of the bacteria population, starting with 5000 bacteria and doubling every hour for 6 hours, is 320,000 bacteria.", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 231, "total_tokens": 399, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8dce2e4f-acb9-4fb3-b440-3889b6f3b161", "event_id": "8dce2e4f-acb9-4fb3-b440-3889b6f3b161", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 80585, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_75", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "791ac20f-2dde-472e-b4dc-16a655c80510", "event_id": "d2ce5f13-2cbd-4d7f-ab9c-a333602b820e", "parent_event_id": "791ac20f-2dde-472e-b4dc-16a655c80510", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 933, "start_time": "2024-06-20T03:53:59.601Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_76", "variant_name": null}, {"function_name": "Fn_simple_76", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_76\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"current_population\":35000,\"growth_rate\":0.015,\"years\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_76_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Estimate future population of elephants given current population and growth rate.\n  function_name: 'elephant_population_estimate' or null,\n  // The current number of elephants.\n  current_population: int,\n  // The annual population growth rate of elephants.\n  growth_rate: float,\n  // The number of years to project the population.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Estimate the population size of elephants of 35000 in the next 5 years given the current growth rate of 0.015."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"elephant_population_estimate\",\n  \"current_population\": 35000,\n  \"growth_rate\": 0.015,\n  \"years\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 60, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "791ac20f-2dde-472e-b4dc-16a655c80510", "event_id": "791ac20f-2dde-472e-b4dc-16a655c80510", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 81519, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_76", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ae86642b-5526-4bfa-9ebb-78359df2b497", "event_id": "9bf8ddbf-c603-4e01-ac4b-e0ac876ea25a", "parent_event_id": "ae86642b-5526-4bfa-9ebb-78359df2b497", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 813, "start_time": "2024-06-20T03:54:00.536Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_77", "variant_name": null}, {"function_name": "Fn_simple_77", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_77\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species\":\"Homo Sapiens\",\"years\":50,\"meta\":\"Value\",\"model\":\"Darwin\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_77_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predict the evolutionary rate for a specific species for a given timeframe.\n  function_name: 'prediction.evolution' or null,\n  // The species that the evolution rate will be predicted for.\n  species: string,\n  // Number of years for the prediction.\n  years: int,\n  // The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'.\n  model: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the predictions of the evolutionary rate for Homo Sapiens for next 50 years using Darwin model"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"prediction.evolution\",\n  \"species\": \"Homo Sapiens\",\n  \"years\": 50,\n  \"model\": \"Darwin\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 56, "total_tokens": 204, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ae86642b-5526-4bfa-9ebb-78359df2b497", "event_id": "ae86642b-5526-4bfa-9ebb-78359df2b497", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 82333, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_77", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7f7201c3-0c59-46a8-99f6-67ad80d20af3", "event_id": "86bbe3d5-a083-46e5-be2d-d17f8857a845", "parent_event_id": "7f7201c3-0c59-46a8-99f6-67ad80d20af3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 634, "start_time": "2024-06-20T03:54:01.350Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_78", "variant_name": null}, {"function_name": "Fn_simple_78", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_78\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Los Angeles, CA\",\"dietary_preference\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_78_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby restaurants based on specific dietary preferences.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Los Angeles, CA\n  location: string,\n  // Dietary preference. Default is empty list.\n  dietary_preference: [\n    'Vegan' or 'Vegetarian' or 'Gluten-free' or 'Dairy-free' or 'Nut-free'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a nearby restaurant that serves vegan food in Los Angeles."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"restaurant.find_nearby\",\n  \"location\": \"Los Angeles, CA\",\n  \"dietary_preference\": [\"Vegan\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 53, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7f7201c3-0c59-46a8-99f6-67ad80d20af3", "event_id": "7f7201c3-0c59-46a8-99f6-67ad80d20af3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 82968, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_78", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ec1d0ee4-915f-4ff4-82a1-36bb2578898b", "event_id": "884486c5-2e02-420d-b6b8-3adc5f84b338", "parent_event_id": "ec1d0ee4-915f-4ff4-82a1-36bb2578898b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 621, "start_time": "2024-06-20T03:54:01.985Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_79", "variant_name": null}, {"function_name": "Fn_simple_79", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_79\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Austin\",\"days\":3,\"meta\":\"Value\",\"temp_unit\":\"Celsius\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_79_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves the average temperature for a specific location over the defined timeframe.\n  function_name: 'average_temperature' or null,\n  // The city to get the average temperature for. It should format as city name such as Boston.\n  location: string,\n  // The number of days to get the average temperature for.\n  days: int,\n  // The temperature unit ('Celsius' or 'Fahrenheit'). Default is 'Fahrenheit'.\n  temp_unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the average temperature in Austin for the next 3 days in Celsius."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"average_temperature\",\n  \"location\": \"Austin\",\n  \"days\": 3,\n  \"temp_unit\": \"Celsius\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 153, "output_tokens": 45, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ec1d0ee4-915f-4ff4-82a1-36bb2578898b", "event_id": "ec1d0ee4-915f-4ff4-82a1-36bb2578898b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 83591, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_79", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "92f20359-a64f-4665-8fdf-69a46f588df2", "event_id": "a8f3671d-555f-47b0-9a4c-b93c81adc902", "parent_event_id": "92f20359-a64f-4665-8fdf-69a46f588df2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 697, "start_time": "2024-06-20T03:54:02.607Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_80", "variant_name": null}, {"function_name": "Fn_simple_80", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_80\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"data\":[85,90,88,92,86,89,91],\"bins\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_80_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Create a histogram based on provided data.\n  function_name: 'create_histogram' or null,\n  // The data for which histogram needs to be plotted.\n  data: int[],\n  // The number of equal-width bins in the range. Default is 10.\n  bins: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Create a histogram for student scores with the following data: 85, 90, 88, 92, 86, 89, 91 and set bin range to 5."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"create_histogram\",\n  \"data\": [85, 90, 88, 92, 86, 89, 91],\n  \"bins\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 130, "output_tokens": 61, "total_tokens": 191, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "92f20359-a64f-4665-8fdf-69a46f588df2", "event_id": "92f20359-a64f-4665-8fdf-69a46f588df2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 84289, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_80", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7d8cbc3b-fb39-4ea4-8962-bae56fb52d36", "event_id": "54968322-ce9e-474f-ba0e-1a8c1f6055cb", "parent_event_id": "7d8cbc3b-fb39-4ea4-8962-bae56fb52d36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 830, "start_time": "2024-06-20T03:54:03.305Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_81", "variant_name": null}, {"function_name": "Fn_simple_81", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_81\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Manhattan, New York\",\"food_type\":\"Thai\",\"number\":5,\"dietary_requirements\":[\"vegan\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_81_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby restaurants based on location and food preferences.\n  function_name: 'find_restaurants' or null,\n  // The specific location or area. The location should be in the format of District, City.\n  location: string,\n  // The type of food preferred.\n  food_type: string,\n  // Number of results to return.\n  number: int,\n  // Special dietary requirements, e.g. vegan, gluten-free. Default is empty list.\n  dietary_requirements: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to find 5 restaurants nearby my location, Manhattan, offering Thai food and a vegan menu."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"find_restaurants\",\n  \"location\": \"Manhattan, New York\",\n  \"food_type\": \"Thai\",\n  \"number\": 5,\n  \"dietary_requirements\": [\"vegan\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 162, "output_tokens": 68, "total_tokens": 230, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7d8cbc3b-fb39-4ea4-8962-bae56fb52d36", "event_id": "7d8cbc3b-fb39-4ea4-8962-bae56fb52d36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 85120, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_81", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2b76e27f-ae6d-4e53-822a-c57d09786948", "event_id": "3fdc6107-f2f3-48be-b9b5-4ee20bc25d2b", "parent_event_id": "2b76e27f-ae6d-4e53-822a-c57d09786948", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 779, "start_time": "2024-06-20T03:54:04.137Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_82", "variant_name": null}, {"function_name": "Fn_simple_82", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_82\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"San Francisco\",\"end_location\":\"Los Angeles\",\"meta\":\"Value\",\"avoid_tolls\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_82_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Finds the fastest route from one location to another, with an option to avoid toll roads.\n  function_name: 'map_routing.fastest_route' or null,\n  // The starting location for the journey.\n  start_location: string,\n  // The destination for the journey.\n  end_location: string,\n  // Option to avoid toll roads during the journey. Default is false.\n  avoid_tolls: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the fastest route from San Francisco to Los Angeles with toll roads avoided."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"map_routing.fastest_route\",\n  \"start_location\": \"San Francisco\",\n  \"end_location\": \"Los Angeles\",\n  \"avoid_tolls\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 53, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2b76e27f-ae6d-4e53-822a-c57d09786948", "event_id": "2b76e27f-ae6d-4e53-822a-c57d09786948", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 85901, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_82", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9c380c55-7961-4f38-8046-5ba6bfd08676", "event_id": "a34ff06c-b630-497a-b416-282ddc8f1094", "parent_event_id": "9c380c55-7961-4f38-8046-5ba6bfd08676", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 656, "start_time": "2024-06-20T03:54:04.917Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_83", "variant_name": null}, {"function_name": "Fn_simple_83", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_83\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"numbers\":[12.0,15.0,18.0,20.0,21.0,26.0,30.0],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_83_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the average of a list of numbers.\n  function_name: 'calculate_average' or null,\n  // The list of numbers to calculate the average of.\n  numbers: float[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the average of list of integers [12, 15, 18, 20, 21, 26, 30]."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_average\",\n  \"numbers\": [12, 15, 18, 20, 21, 26, 30]\n}", "metadata": {"logprobs": null, "prompt_tokens": 95, "output_tokens": 44, "total_tokens": 139, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9c380c55-7961-4f38-8046-5ba6bfd08676", "event_id": "9c380c55-7961-4f38-8046-5ba6bfd08676", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 86558, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_83", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "763274a8-fac3-4c2f-af8f-a4d01589c9c3", "event_id": "2888f0f1-2252-4801-bdc8-6ae2cc08ba30", "parent_event_id": "763274a8-fac3-4c2f-af8f-a4d01589c9c3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 746, "start_time": "2024-06-20T03:54:05.575Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_84", "variant_name": null}, {"function_name": "Fn_simple_84", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_84\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coord1\":[33.4484,-112.074],\"coord2\":[34.0522,-118.2437],\"unit\":\"miles\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_84_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the distance between two GPS coordinates.\n  function_name: 'calculate_distance' or null,\n  // The first coordinate as (latitude, longitude).\n  coord1: float[],\n  // The second coordinate as (latitude, longitude).\n  coord2: float[],\n  // The unit of distance. Options: 'miles', 'kilometers'.\n  unit: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the distance between two GPS coordinates (33.4484 N, 112.0740 W) and (34.0522 N, 118.2437 W) in miles."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_distance\",\n  \"coord1\": [33.4484, -112.0740],\n  \"coord2\": [34.0522, -118.2437],\n  \"unit\": \"miles\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 72, "total_tokens": 223, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "763274a8-fac3-4c2f-af8f-a4d01589c9c3", "event_id": "763274a8-fac3-4c2f-af8f-a4d01589c9c3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 87305, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_84", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e57bfc95-68a5-42ed-bf28-0aa781ea72b5", "event_id": "5aa5e08b-6ebf-46b2-b023-a6e85517e1b5", "parent_event_id": "e57bfc95-68a5-42ed-bf28-0aa781ea72b5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 569, "start_time": "2024-06-20T03:54:06.322Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_85", "variant_name": null}, {"function_name": "Fn_simple_85", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_85\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":85,\"height\":180,\"meta\":\"Value\",\"unit\":\"metric\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_85_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Body Mass Index (BMI) of a person.\n  function_name: 'calculate_bmi' or null,\n  // Weight of the person in kilograms.\n  weight: int,\n  // Height of the person in centimeters.\n  height: int,\n  // Optional parameter to choose between 'imperial' and 'metric' systems. Default is 'metric'.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Body Mass Index (BMI) of a person with a weight of 85 kilograms and height of 180 cm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the response in the requested schema:\n\n{\n  \"function_name\": \"calculate_bmi\",\n  \"weight\": 85,\n  \"height\": 180,\n  \"unit\": \"metric\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 149, "output_tokens": 53, "total_tokens": 202, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e57bfc95-68a5-42ed-bf28-0aa781ea72b5", "event_id": "e57bfc95-68a5-42ed-bf28-0aa781ea72b5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 87875, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_85", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "849554b6-4c87-400d-9458-3f17be984972", "event_id": "037098e6-a5e1-40f0-9a99-d9e2752d6107", "parent_event_id": "849554b6-4c87-400d-9458-3f17be984972", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 753, "start_time": "2024-06-20T03:54:06.892Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_86", "variant_name": null}, {"function_name": "Fn_simple_86", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_86\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Boston, MA\",\"end_location\":\"Washington, D.C.\",\"meta\":\"Value\",\"units\":\"miles\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_86_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the geographic distance between two given locations.\n  function_name: 'geo_distance.calculate' or null,\n  // The starting location for the distance calculation. Specify the location in the format of City, State.\n  start_location: string,\n  // The destination location for the distance calculation. Specify the location in the format of City, State.\n  end_location: string,\n  // Optional. The desired units for the resulting distance ('miles' or 'kilometers'). Defaults to 'miles'.\n  units: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the approximate distance between Boston, MA, and Washington, D.C. in mile?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geo_distance.calculate\",\n  \"start_location\": \"Boston, MA\",\n  \"end_location\": \"Washington, D.C.\",\n  \"units\": \"miles\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 165, "output_tokens": 54, "total_tokens": 219, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "849554b6-4c87-400d-9458-3f17be984972", "event_id": "849554b6-4c87-400d-9458-3f17be984972", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 88630, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_86", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cbd08b3b-62e4-415c-9e25-067ae441a706", "event_id": "ed1992b7-5c0c-4ae1-b747-757c9106b209", "parent_event_id": "cbd08b3b-62e4-415c-9e25-067ae441a706", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 766, "start_time": "2024-06-20T03:54:07.647Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_87", "variant_name": null}, {"function_name": "Fn_simple_87", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_87\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_city\":\"New York\",\"end_city\":\"Los Angeles\",\"meta\":\"Value\",\"transportation\":\"train\",\"allow_transfer\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_87_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the shortest distance between two cities via available public transportation.\n  function_name: 'city_distance.find_shortest' or null,\n  // The city you are starting from. The parameter is in the format of city name.\n  start_city: string,\n  // The city you are heading to.The parameter is in the format of city name.\n  end_city: string,\n  // Preferred mode of public transportation. Default is 'bus'.\n  transportation: string or null,\n  // Allows transfer between different transportation if true. Default is false.\n  allow_transfer: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the shortest distance between two cities, New York and Los Angeles, through the train and you can transfer."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"city_distance.find_shortest\",\n  \"start_city\": \"New York\",\n  \"end_city\": \"Los Angeles\",\n  \"transportation\": \"train\",\n  \"allow_transfer\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 182, "output_tokens": 70, "total_tokens": 252, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cbd08b3b-62e4-415c-9e25-067ae441a706", "event_id": "cbd08b3b-62e4-415c-9e25-067ae441a706", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 89397, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_87", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "df887bbd-de40-448b-91ba-c9ed3203c0f2", "event_id": "b98a9a0b-e42b-45f4-930e-c2016b699517", "parent_event_id": "df887bbd-de40-448b-91ba-c9ed3203c0f2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 545, "start_time": "2024-06-20T03:54:08.414Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_88", "variant_name": null}, {"function_name": "Fn_simple_88", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_88\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"list\":[5.0,3.0,4.0,1.0,2.0],\"order\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_88_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Sorts a given list in ascending or descending order.\n  function_name: 'array_sort' or null,\n  // The list of numbers to be sorted.\n  list: float[],\n  // Order of sorting.\n  order: 'ascending' or 'descending',\n}"}]}, {"role": "user", "content": [{"text": "Question: Sort the list [5, 3, 4, 1, 2] in ascending order."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"array_sort\",\n  \"list\": [5, 3, 4, 1, 2],\n  \"order\": \"ascending\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 46, "total_tokens": 155, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "df887bbd-de40-448b-91ba-c9ed3203c0f2", "event_id": "df887bbd-de40-448b-91ba-c9ed3203c0f2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 89945, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_88", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3ab2d3fe-82d2-48d6-9261-766c4f1c691d", "event_id": "93143e1d-7a2e-4aac-b4f7-75ed72ee0c09", "parent_event_id": "3ab2d3fe-82d2-48d6-9261-766c4f1c691d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 593, "start_time": "2024-06-20T03:54:08.962Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_89", "variant_name": null}, {"function_name": "Fn_simple_89", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_89\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight_kg\":70,\"height_m\":1.75,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_89_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Body Mass Index (BMI) given a person's weight and height.\n  function_name: 'calculate_BMI' or null,\n  // The weight of the person in kilograms.\n  weight_kg: int,\n  // The height of the person in meters.\n  height_m: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the BMI (Body Mass Index) of a person who weighs 70kg and is 1.75m tall."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_BMI\",\n  \"weight_kg\": 70,\n  \"height_m\": 1.75\n}", "metadata": {"logprobs": null, "prompt_tokens": 121, "output_tokens": 50, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3ab2d3fe-82d2-48d6-9261-766c4f1c691d", "event_id": "3ab2d3fe-82d2-48d6-9261-766c4f1c691d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 90539, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_89", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f88bd636-e9dc-4eae-a361-3612053b18da", "event_id": "e0304943-98d8-4657-915b-fb294ae9ed20", "parent_event_id": "f88bd636-e9dc-4eae-a361-3612053b18da", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 738, "start_time": "2024-06-20T03:54:09.556Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_90", "variant_name": null}, {"function_name": "Fn_simple_90", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_90\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"database_name\":\"StudentDB\",\"table_name\":\"students\",\"conditions\":{\"department\":\"Science\",\"school\":\"Bluebird High School\"},\"meta\":\"Value\",\"fetch_limit\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_90_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch records from a specified database table based on certain conditions.\n  function_name: 'db_fetch_records' or null,\n  // The name of the database.\n  database_name: string,\n  // The name of the table from which records need to be fetched.\n  table_name: string,\n  // The conditions based on which records are to be fetched.\n  conditions: {\n    // The name of the department of students.\n    department: string or null,\n    // The name of the school students are enrolled in.\n    school: string or null,\n  },\n  // Limits the number of records to be fetched. Default is 0, which means no limit.\n  fetch_limit: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch all records for students studying Science in 'Bluebird High School' from the StudentDB."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"db_fetch_records\",\n  \"database_name\": \"StudentDB\",\n  \"table_name\": \"students\",\n  \"conditions\": {\n    \"department\": \"Science\",\n    \"school\": \"Bluebird High School\"\n  },\n  \"fetch_limit\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 213, "output_tokens": 89, "total_tokens": 302, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f88bd636-e9dc-4eae-a361-3612053b18da", "event_id": "f88bd636-e9dc-4eae-a361-3612053b18da", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 91279, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_90", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "894b0ba4-1d51-462e-a78d-cdf841346cb1", "event_id": "bcbcbe61-8756-463d-8cb6-0ba9e2f31b0c", "parent_event_id": "894b0ba4-1d51-462e-a78d-cdf841346cb1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 938, "start_time": "2024-06-20T03:54:10.295Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_91", "variant_name": null}, {"function_name": "Fn_simple_91", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_91\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"ABC Ltd.\",\"employee_id\":345,\"data_field\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_91_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the detailed data for a specific employee in a given company.\n  function_name: 'employee.fetch_data' or null,\n  // The name of the company.\n  company_name: string,\n  // The unique ID of the employee.\n  employee_id: int,\n  // Fields of data to be fetched for the employee (Optional). Default is ['Personal Info']\n  data_field: [\n    'Personal Info' or 'Job History' or 'Payroll' or 'Attendance'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve Personal Info and Job History data of a specific employee whose ID is 345 in company 'ABC Ltd.'"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"employee.fetch_data\",\n  \"company_name\": \"ABC Ltd.\",\n  \"employee_id\": 345,\n  \"data_field\": [\n    \"Personal Info\",\n    \"Job History\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 74, "total_tokens": 244, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "894b0ba4-1d51-462e-a78d-cdf841346cb1", "event_id": "894b0ba4-1d51-462e-a78d-cdf841346cb1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 92218, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_91", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9e0bb65c-5ed3-4294-9382-d90c85463051", "event_id": "c3e5822d-da06-4b7b-9f96-af2a9b345cae", "parent_event_id": "9e0bb65c-5ed3-4294-9382-d90c85463051", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 619, "start_time": "2024-06-20T03:54:11.234Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_92", "variant_name": null}, {"function_name": "Fn_simple_92", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_92\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cuisine\":\"sushi\",\"location\":\"Boston\",\"condition\":\"opens on Sundays\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_92_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve highest rated restaurant given cuisine, location, and a condition.\n  function_name: 'get_restaurant' or null,\n  // Cuisine of the restaurant.\n  cuisine: string,\n  // City where restaurant is located.\n  location: string,\n  // Condition to be met by the restaurant (e.g., operating days, amenities, etc.)\n  condition: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the highest rated sushi restaurant in Boston, that opens on Sundays."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_restaurant\",\n  \"cuisine\": \"sushi\",\n  \"location\": \"Boston\",\n  \"condition\": \"opens on Sundays\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 127, "output_tokens": 47, "total_tokens": 174, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9e0bb65c-5ed3-4294-9382-d90c85463051", "event_id": "9e0bb65c-5ed3-4294-9382-d90c85463051", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 92838, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_92", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ea63e181-ab95-42ee-a3ff-5b775fec6490", "event_id": "41ef73a1-1f49-4c76-897a-123f86b849ba", "parent_event_id": "ea63e181-ab95-42ee-a3ff-5b775fec6490", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 822, "start_time": "2024-06-20T03:54:11.854Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_93", "variant_name": null}, {"function_name": "Fn_simple_93", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_93\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"actor_name\":\"Leonardo DiCaprio\",\"year\":2010,\"meta\":\"Value\",\"category\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_93_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Searches the database to find all movies by a specific actor within a certain year.\n  function_name: 'imdb.find_movies_by_actor' or null,\n  // The name of the actor.\n  actor_name: string,\n  // The specific year to search in.\n  year: int,\n  // The category of the film (e.g. Drama, Comedy, etc). Default is 'all'\n  category: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find all movies starring Leonardo DiCaprio in the year 2010 from IMDB database."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"imdb.find_movies_by_actor\",\n  \"actor_name\": \"Leonardo DiCaprio\",\n  \"year\": 2010,\n  \"category\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 147, "output_tokens": 65, "total_tokens": 212, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ea63e181-ab95-42ee-a3ff-5b775fec6490", "event_id": "ea63e181-ab95-42ee-a3ff-5b775fec6490", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 93661, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_93", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7e9a88e1-985f-4399-8904-137fa5145aba", "event_id": "a90c7c29-33c2-4d1b-9d28-c84eba1d4bdb", "parent_event_id": "7e9a88e1-985f-4399-8904-137fa5145aba", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 644, "start_time": "2024-06-20T03:54:12.678Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_94", "variant_name": null}, {"function_name": "Fn_simple_94", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_94\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"LA\",\"timeframe\":7,\"meta\":\"Value\",\"format\":\"IMAX\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_94_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the list of movie releases in specific theaters for a specified period. in the format of city shorten name like SF.\n  function_name: 'get_theater_movie_releases' or null,\n  // The location of the theaters.\n  location: string,\n  // The number of days for which releases are required from current date.\n  timeframe: int,\n  // Format of movies - could be 'IMAX', '2D', '3D', '4DX' etc. Default is 'all'\n  format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch me the list of IMAX movie releases in theaters near LA for the next week."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_theater_movie_releases\",\n  \"location\": \"LA\",\n  \"timeframe\": 7,\n  \"format\": \"IMAX\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 49, "total_tokens": 217, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7e9a88e1-985f-4399-8904-137fa5145aba", "event_id": "7e9a88e1-985f-4399-8904-137fa5145aba", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 94306, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_94", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2feeef5b-85cb-4422-a640-492e98799d0d", "event_id": "6fc82871-172f-4a3d-b35d-c42cc365a46d", "parent_event_id": "2feeef5b-85cb-4422-a640-492e98799d0d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 820, "start_time": "2024-06-20T03:54:13.323Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_95", "variant_name": null}, {"function_name": "Fn_simple_95", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_95\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"user_id\":43523,\"update_info\":{\"name\":\"John Doe\",\"email\":\"johndoe@email.com\"},\"meta\":\"Value\",\"database\":\"CustomerInfo\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_95_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Update user information in the database.\n  function_name: 'update_user_info' or null,\n  // The user ID of the customer.\n  user_id: int,\n  // The new information to update.\n  update_info: {\n    // The customer's updated name.\n    name: string or null,\n    // The customer's updated email.\n    email: string or null,\n  },\n  // The database where the user's information is stored. (default: CustomerInfo)\n  database: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Update my customer information with user id 43523 'name':'John Doe', 'email':'johndoe@email.com' in the database."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"update_user_info\",\n  \"user_id\": 43523,\n  \"update_info\": {\n    \"name\": \"John Doe\",\n    \"email\": \"johndoe@email.com\"\n  },\n  \"database\": \"CustomerInfo\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 177, "output_tokens": 85, "total_tokens": 262, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2feeef5b-85cb-4422-a640-492e98799d0d", "event_id": "2feeef5b-85cb-4422-a640-492e98799d0d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 95127, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_95", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "45cab1bd-35a8-4df1-a681-792bb13bfbd9", "event_id": "11bb50ea-305f-4a81-8cbf-e56d5afa5d9e", "parent_event_id": "45cab1bd-35a8-4df1-a681-792bb13bfbd9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 665, "start_time": "2024-06-20T03:54:14.144Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_96", "variant_name": null}, {"function_name": "Fn_simple_96", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_96\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":5,\"height\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_96_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a triangle with the formula area = 0.5 * base * height.\n  function_name: 'calc_area_triangle' or null,\n  // The length of the base of the triangle in meters.\n  base: int,\n  // The perpendicular height of the triangle from the base to the opposite vertex in meters.\n  height: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a triangle with base 5m and height 3m."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calc_area_triangle\",\n  \"base\": 5,\n  \"height\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 45, "total_tokens": 168, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "45cab1bd-35a8-4df1-a681-792bb13bfbd9", "event_id": "45cab1bd-35a8-4df1-a681-792bb13bfbd9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 95794, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_96", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "06548c89-66a0-4913-9c9a-dc004fabfb3c", "event_id": "2f878f97-42f8-4d67-8b7e-d336c3238638", "parent_event_id": "06548c89-66a0-4913-9c9a-dc004fabfb3c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 888, "start_time": "2024-06-20T03:54:14.811Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_97", "variant_name": null}, {"function_name": "Fn_simple_97", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_97\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"table\":\"user\",\"conditions\":[{\"field\":\"age\",\"operation\":\">\",\"value\":\"25\"},{\"field\":\"job\",\"operation\":\"=\",\"value\":\"engineer\"}],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_97_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Query the database based on certain conditions.\n  function_name: 'database.query' or null,\n  // Name of the table to query.\n  table: string,\n  // Conditions for the query.\n  conditions: [\n    {\n      // The field to apply the condition.\n      field: string,\n      // The operation to be performed.\n      operation: string,\n      // The value to be compared.\n      value: string,\n    }\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find records in database in user table where age is greater than 25 and job is 'engineer'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"database.query\",\n  \"table\": \"user\",\n  \"conditions\": [\n    {\n      \"field\": \"age\",\n      \"operation\": \">\",\n      \"value\": \"25\"\n    },\n    {\n      \"field\": \"job\",\n      \"operation\": \"=\",\n      \"value\": \"engineer\"\n    }\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 105, "total_tokens": 256, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "06548c89-66a0-4913-9c9a-dc004fabfb3c", "event_id": "06548c89-66a0-4913-9c9a-dc004fabfb3c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 96683, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_97", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6c55d7cc-2bcf-466c-badd-4cbd3c511ef9", "event_id": "e8d750d8-d9ab-4bd6-a5f4-01e951a775d0", "parent_event_id": "6c55d7cc-2bcf-466c-badd-4cbd3c511ef9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 605, "start_time": "2024-06-20T03:54:15.700Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_98", "variant_name": null}, {"function_name": "Fn_simple_98", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_98\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_98_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the factorial of a given number.\n  function_name: 'math.factorial' or null,\n  // The number to compute factorial.\n  number: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the factorial of the number 5"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.factorial\",\n  \"number\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 67, "output_tokens": 35, "total_tokens": 102, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6c55d7cc-2bcf-466c-badd-4cbd3c511ef9", "event_id": "6c55d7cc-2bcf-466c-badd-4cbd3c511ef9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 97290, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_98", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7dfe9419-7d01-45fc-967c-71f5926b7f89", "event_id": "c9617b3a-e521-4215-9269-27d1d02dfc0f", "parent_event_id": "7dfe9419-7d01-45fc-967c-71f5926b7f89", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 524, "start_time": "2024-06-20T03:54:16.307Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_99", "variant_name": null}, {"function_name": "Fn_simple_99", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_99\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hours\":6,\"minutes\":30,\"meta\":\"Value\",\"round_to\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_99_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the angle between the hour and minute hands of a clock at a given time.\n  function_name: 'calculate_clock_angle' or null,\n  // The hour on the clock face.\n  hours: int,\n  // The minutes on the clock face.\n  minutes: int,\n  // The number of decimal places to round the result to, default is 2.\n  round_to: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What will be the angle between the hour and minute hands of a clock at 6:30 PM?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_clock_angle\",\n  \"hours\": 6,\n  \"minutes\": 30,\n  \"round_to\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 45, "total_tokens": 183, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7dfe9419-7d01-45fc-967c-71f5926b7f89", "event_id": "7dfe9419-7d01-45fc-967c-71f5926b7f89", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 97815, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_99", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5e89ca25-79aa-4db6-9444-8d4a2055df20", "event_id": "d3123422-b4ed-4d81-8df7-4cc6d4f06432", "parent_event_id": "5e89ca25-79aa-4db6-9444-8d4a2055df20", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 928, "start_time": "2024-06-20T03:54:16.832Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_100", "variant_name": null}, {"function_name": "Fn_simple_100", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_100\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_range\":0.0,\"end_range\":6.2832,\"frequency\":5,\"meta\":\"Value\",\"amplitude\":1,\"phase_shift\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_100_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Plot a sine wave for a given frequency in a given range.\n  function_name: 'plot_sine_wave' or null,\n  // Start of the range in radians. Four decimal places.\n  start_range: float,\n  // End of the range in radians. Four decimal places.\n  end_range: float,\n  // Frequency of the sine wave in Hz.\n  frequency: int,\n  // Amplitude of the sine wave. Default is 1.\n  amplitude: int or null,\n  // Phase shift of the sine wave in radians. Default is 0.\n  phase_shift: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Plot a sine wave from 0 to 2 pi with a frequency of 5 Hz."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"plot_sine_wave\",\n  \"start_range\": 0.0000,\n  \"end_range\": 6.2832,\n  \"frequency\": 5,\n  \"amplitude\": 1,\n  \"phase_shift\": 0\n}", "metadata": {"logprobs": null, "prompt_tokens": 188, "output_tokens": 71, "total_tokens": 259, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5e89ca25-79aa-4db6-9444-8d4a2055df20", "event_id": "5e89ca25-79aa-4db6-9444-8d4a2055df20", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 98744, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_100", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b2500f21-ea5d-4e44-93be-6d5b56fe5f75", "event_id": "f242c82d-dc0e-4b9d-8315-fda054be7253", "parent_event_id": "b2500f21-ea5d-4e44-93be-6d5b56fe5f75", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2108, "start_time": "2024-06-20T03:54:17.761Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_101", "variant_name": null}, {"function_name": "Fn_simple_101", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_101\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance_in_light_years\":4,\"meta\":\"Value\",\"speed_of_light\":299792458}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_101_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the time taken for light to travel from a celestial body to another.\n  function_name: 'light_travel_time' or null,\n  // The distance between the two celestial bodies in light years.\n  distance_in_light_years: int,\n  // The speed of light in vacuum, in m/s. Default value is 299792458 m/s.\n  speed_of_light: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much time will it take for the light to reach earth from a star 4 light years away?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"light_travel_time\",\n  \"distance_in_light_years\": 4,\n  \"speed_of_light\": 299792458\n}\n\nThe time it takes for the light to reach Earth from a star 4 light years away can be calculated as follows:\n\nDistance in light years: 4\nSpeed of light in vacuum: 299,792,458 m/s\n\nTime taken for light to travel = Distance in light years / Speed of light\nTime taken for light to travel = 4 / 299,792,458 (since 1 light year = 9.46 x 10^15 m)\nTime taken for light to travel = 4 / 299,792,458 x 9.46 x 10^15 seconds\nTime taken for light to travel = 4 x 9.46 x 10^15 / 299,792,458 seconds\nTime taken for light to travel = 1.26 x 10^16 seconds\nTime taken for light to travel = 4 years\n\nTherefore, it will take 4 years for the light to reach Earth from a star 4 light years away.", "metadata": {"logprobs": null, "prompt_tokens": 142, "output_tokens": 276, "total_tokens": 418, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b2500f21-ea5d-4e44-93be-6d5b56fe5f75", "event_id": "b2500f21-ea5d-4e44-93be-6d5b56fe5f75", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 100854, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_101", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3cbb8ed3-4b3d-4e09-b59c-aeb33963b561", "event_id": "40e19588-58ad-495a-b1c9-e9dc3fbe68c7", "parent_event_id": "3cbb8ed3-4b3d-4e09-b59c-aeb33963b561", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 657, "start_time": "2024-06-20T03:54:19.871Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_102", "variant_name": null}, {"function_name": "Fn_simple_102", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_102\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance\":450,\"time\":20,\"meta\":\"Value\",\"to_unit\":\"km/h\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_102_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the speed of an object based on the distance travelled and the time taken.\n  function_name: 'calculate_speed' or null,\n  // The distance the object travelled in meters.\n  distance: int,\n  // The time it took for the object to travel in seconds.\n  time: int,\n  // The unit in which the speed should be calculated, default is m/s.\n  to_unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the speed of an object in km/h if it traveled 450 meters in 20 seconds."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_speed\",\n  \"distance\": 450,\n  \"time\": 20,\n  \"to_unit\": \"km/h\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 142, "output_tokens": 46, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3cbb8ed3-4b3d-4e09-b59c-aeb33963b561", "event_id": "3cbb8ed3-4b3d-4e09-b59c-aeb33963b561", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 101513, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_102", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7cd22d35-0add-47b7-9e1a-6ef5cfe355e2", "event_id": "e004d404-b558-4c90-816f-b662d0ac460c", "parent_event_id": "7cd22d35-0add-47b7-9e1a-6ef5cfe355e2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 597, "start_time": "2024-06-20T03:54:20.529Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_103", "variant_name": null}, {"function_name": "Fn_simple_103", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_103\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"body1\":\"Earth\",\"body2\":\"Moon\",\"meta\":\"Value\",\"unit\":\"miles\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_103_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the distance between two celestial bodies.\n  function_name: 'calculate_distance' or null,\n  // The first celestial body.\n  body1: string,\n  // The second celestial body.\n  body2: string,\n  // The unit of measurement, default is 'km'.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the distance in milesfrom the Earth to the Moon?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_distance\",\n  \"body1\": \"Earth\",\n  \"body2\": \"Moon\",\n  \"unit\": \"miles\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 44, "total_tokens": 158, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7cd22d35-0add-47b7-9e1a-6ef5cfe355e2", "event_id": "7cd22d35-0add-47b7-9e1a-6ef5cfe355e2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 102111, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_103", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cd0966fc-1135-41b3-9c46-2005b675a32b", "event_id": "44b92e69-2f4f-4c4b-b2fa-adda9fe033f9", "parent_event_id": "cd0966fc-1135-41b3-9c46-2005b675a32b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 741, "start_time": "2024-06-20T03:54:21.128Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_104", "variant_name": null}, {"function_name": "Fn_simple_104", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_104\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"polynomial\":[3.0,2.0,-4.0],\"limits\":[-1.0,2.0],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_104_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area under the curve for a given polynomial function within a specified interval.\n  function_name: 'mathematics.calculate_area_under_curve' or null,\n  // The coefficients of the polynomial, in decreasing order of exponent, where the first element is the coefficient for x^n, the second element is the coefficient for x^(n-1), and so on. The last element is the constant term.\n  polynomial: float[],\n  // A list of two numbers specifying the lower and upper limit for the integration interval.\n  limits: float[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area under the curve y=3x^2 + 2x - 4, between x = -1 and x = 2."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"mathematics.calculate_area_under_curve\",\n  \"polynomial\": [3, 2, -4],\n  \"limits\": [-1, 2]\n}", "metadata": {"logprobs": null, "prompt_tokens": 181, "output_tokens": 59, "total_tokens": 240, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cd0966fc-1135-41b3-9c46-2005b675a32b", "event_id": "cd0966fc-1135-41b3-9c46-2005b675a32b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 102854, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_104", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1f6bcb9c-48dd-42a6-b196-4737f39c57a9", "event_id": "51022fc9-35ed-4672-981b-d73f4c551c02", "parent_event_id": "1f6bcb9c-48dd-42a6-b196-4737f39c57a9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 733, "start_time": "2024-06-20T03:54:21.870Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_105", "variant_name": null}, {"function_name": "Fn_simple_105", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_105\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":6,\"height\":10,\"meta\":\"Value\",\"unit\":\"square meters\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_105_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area of a triangle.\n  function_name: 'geometry.area_triangle' or null,\n  // The length of the base of the triangle.\n  base: int,\n  // The height of the triangle from the base.\n  height: int,\n  // The measurement unit for the area. Defaults to square meters.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a triangle with base 6 and height 10."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the response in the requested schema:\n\n{\n  \"function_name\": \"geometry.area_triangle\",\n  \"base\": 6,\n  \"height\": 10,\n  \"unit\": \"square meters\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 121, "output_tokens": 55, "total_tokens": 176, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1f6bcb9c-48dd-42a6-b196-4737f39c57a9", "event_id": "1f6bcb9c-48dd-42a6-b196-4737f39c57a9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 103587, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_105", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "17509af8-9f05-472b-ba43-669c79b1a2e6", "event_id": "5b7aa02f-28cd-463e-80af-28cd8eb79346", "parent_event_id": "17509af8-9f05-472b-ba43-669c79b1a2e6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 497, "start_time": "2024-06-20T03:54:22.604Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_106", "variant_name": null}, {"function_name": "Fn_simple_106", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_106\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":3,\"exponent\":4,\"meta\":\"Value\",\"mod\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_106_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the power of one number raised to another.\n  function_name: 'math.power' or null,\n  // The base number.\n  base: int,\n  // The exponent.\n  exponent: int,\n  // The modulus. Default is 1. Calculates pow(base, exponent) % mod when provided.\n  mod: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the power of 3 raised to the power 4."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"math.power\",\n  \"base\": 3,\n  \"exponent\": 4,\n  \"mod\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 122, "output_tokens": 41, "total_tokens": 163, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "17509af8-9f05-472b-ba43-669c79b1a2e6", "event_id": "17509af8-9f05-472b-ba43-669c79b1a2e6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 104086, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_106", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dfa0bf1f-9048-4942-9d78-93f978996e02", "event_id": "fe78b665-aa30-41d7-bc27-dfcc244d0a30", "parent_event_id": "dfa0bf1f-9048-4942-9d78-93f978996e02", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 699, "start_time": "2024-06-20T03:54:23.102Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_107", "variant_name": null}, {"function_name": "Fn_simple_107", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_107\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dataset\":\"your_dataset_name\",\"max_depth\":5,\"n_estimators\":100,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_107_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Train a Random Forest classifier with the specified parameters.\n  function_name: 'train_random_forest_classifier' or null,\n  // The dataset to train the classifier on.\n  dataset: string,\n  // The maximum depth of the trees in the forest.\n  max_depth: int,\n  // The number of trees in the forest.\n  n_estimators: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Train a random forest classifier on dataset your_dataset_name with maximum depth of trees as 5, and number of estimators as 100."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"train_random_forest_classifier\",\n  \"dataset\": \"your_dataset_name\",\n  \"max_depth\": 5,\n  \"n_estimators\": 100\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 54, "total_tokens": 192, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dfa0bf1f-9048-4942-9d78-93f978996e02", "event_id": "dfa0bf1f-9048-4942-9d78-93f978996e02", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 104786, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_107", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e43229f3-73c4-4221-8a6e-ed819c3d56c6", "event_id": "8207ac83-83b1-46a9-aafd-4365513263a0", "parent_event_id": "e43229f3-73c4-4221-8a6e-ed819c3d56c6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 510, "start_time": "2024-06-20T03:54:23.803Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_108", "variant_name": null}, {"function_name": "Fn_simple_108", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_108\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":70,\"height\":175,\"meta\":\"Value\",\"system\":\"metric\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_108_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Body Mass Index (BMI) for a person based on their weight and height.\n  function_name: 'calculate_bmi' or null,\n  // The weight of the person in kilograms.\n  weight: int,\n  // The height of the person in centimeters.\n  height: int,\n  // The system of units to be used, 'metric' or 'imperial'. Default is 'metric'.\n  system: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Body Mass Index for a person with a weight of 70 kg and a height of 175 cm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_bmi\",\n  \"weight\": 70,\n  \"height\": 175,\n  \"system\": \"metric\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 153, "output_tokens": 43, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e43229f3-73c4-4221-8a6e-ed819c3d56c6", "event_id": "e43229f3-73c4-4221-8a6e-ed819c3d56c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 105298, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_108", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4423a773-6baf-4e82-b01d-bcbbdaeff291", "event_id": "183210ad-7566-4cac-b7c9-fa5310b2f90e", "parent_event_id": "4423a773-6baf-4e82-b01d-bcbbdaeff291", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 860, "start_time": "2024-06-20T03:54:24.315Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_109", "variant_name": null}, {"function_name": "Fn_simple_109", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_109\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"predictors\":[\"Age\",\"Income\",\"Education\"],\"target\":\"Purchase_Amount\",\"meta\":\"Value\",\"standardize\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_109_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Build a linear regression model using given predictor variables and a target variable.\n  function_name: 'run_linear_regression' or null,\n  // Array containing the names of predictor variables.\n  predictors: string[],\n  // The name of target variable.\n  target: string,\n  // Option to apply standardization on the predictors. Defaults to False.\n  standardize: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Run a linear regression model with predictor variables 'Age', 'Income' and 'Education' and a target variable 'Purchase_Amount'. Also apply standardization."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"run_linear_regression\",\n  \"predictors\": [\"Age\", \"Income\", \"Education\"],\n  \"target\": \"Purchase_Amount\",\n  \"standardize\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 152, "output_tokens": 52, "total_tokens": 204, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4423a773-6baf-4e82-b01d-bcbbdaeff291", "event_id": "4423a773-6baf-4e82-b01d-bcbbdaeff291", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 106159, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_109", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dd1c2a2f-a82e-4889-88ad-596104273aa5", "event_id": "87498b92-394b-477b-9315-271f7bbc8b4c", "parent_event_id": "dd1c2a2f-a82e-4889-88ad-596104273aa5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 733, "start_time": "2024-06-20T03:54:25.176Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_111", "variant_name": null}, {"function_name": "Fn_simple_111", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_111\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"bedrooms\":3,\"bathrooms\":2,\"area\":1800,\"location\":\"San Francisco\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_111_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predict the price of a house in a given area based on number of bedrooms, bathrooms and area.\n  function_name: 'predict_house_price' or null,\n  // The number of bedrooms in the house.\n  bedrooms: int,\n  // The number of bathrooms in the house.\n  bathrooms: int,\n  // The area of the house in square feet.\n  area: int,\n  // The location of the house in the format of city name.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the price of the house in San Francisco with 3 bedrooms, 2 bathrooms and area of 1800 square feet."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"predict_house_price\",\n  \"bedrooms\": 3,\n  \"bathrooms\": 2,\n  \"area\": 1800,\n  \"location\": \"San Francisco\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 56, "total_tokens": 226, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dd1c2a2f-a82e-4889-88ad-596104273aa5", "event_id": "dd1c2a2f-a82e-4889-88ad-596104273aa5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 106894, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_111", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c6b2d7e1-11d1-436d-b263-618df7d815b7", "event_id": "f80b1220-aa19-4450-8ea0-1a0460cdde3c", "parent_event_id": "c6b2d7e1-11d1-436d-b263-618df7d815b7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 761, "start_time": "2024-06-20T03:54:25.911Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_112", "variant_name": null}, {"function_name": "Fn_simple_112", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_112\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mu\":0,\"sigma\":1,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_112_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generates a random number from a normal distribution given the mean and standard deviation.\n  function_name: 'random.normalvariate' or null,\n  // Mean of the normal distribution.\n  mu: int,\n  // Standard deviation of the normal distribution.\n  sigma: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a random number from a normal distribution with mean 0 and standard deviation 1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"random.normalvariate\",\n  \"mu\": 0,\n  \"sigma\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 104, "output_tokens": 45, "total_tokens": 149, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c6b2d7e1-11d1-436d-b263-618df7d815b7", "event_id": "c6b2d7e1-11d1-436d-b263-618df7d815b7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 107657, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_112", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "755628a2-58b0-4130-901a-e323764da458", "event_id": "bbd50eaf-7c3b-4425-a93f-bb35d975c1e6", "parent_event_id": "755628a2-58b0-4130-901a-e323764da458", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 912, "start_time": "2024-06-20T03:54:26.674Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_113", "variant_name": null}, {"function_name": "Fn_simple_113", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_113\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_outcomes\":52,\"favorable_outcomes\":4,\"meta\":\"Value\",\"round_to\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_113_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the probability of an event.\n  function_name: 'calculate_probability' or null,\n  // Total number of possible outcomes.\n  total_outcomes: int,\n  // Number of outcomes considered as 'successful'.\n  favorable_outcomes: int,\n  // Number of decimal places to round the result to. (default: 2)\n  round_to: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the probability of drawing a king from a deck of cards."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_probability\",\n  \"total_outcomes\": 52,\n  \"favorable_outcomes\": 4,\n  \"round_to\": 2\n}\n\nThe probability of drawing a king from a standard deck of 52 playing cards is 4/52 = 0.0769, rounded to 2 decimal places.", "metadata": {"logprobs": null, "prompt_tokens": 122, "output_tokens": 95, "total_tokens": 217, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "755628a2-58b0-4130-901a-e323764da458", "event_id": "755628a2-58b0-4130-901a-e323764da458", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 108570, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_113", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5de8400a-4d2c-4056-a49b-a34f6a8f526b", "event_id": "d0044bc0-fa92-483c-abfa-a5af02d5379c", "parent_event_id": "5de8400a-4d2c-4056-a49b-a34f6a8f526b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1539, "start_time": "2024-06-20T03:54:27.587Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_114", "variant_name": null}, {"function_name": "Fn_simple_114", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_114\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"desired_number\":6,\"number_of_rolls\":2,\"meta\":\"Value\",\"die_sides\":6}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_114_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the probability of rolling a certain number on a six-sided die a certain number of times in a row.\n  function_name: 'probability.dice_roll' or null,\n  // The number you want to roll.\n  desired_number: int,\n  // How many times you want to roll that number in a row.\n  number_of_rolls: int,\n  // The number of sides on the die (optional; default is 6).\n  die_sides: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the probability of rolling a six on a six-sided die twice in a row?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"probability.dice_roll\",\n  \"desired_number\": 6,\n  \"number_of_rolls\": 2,\n  \"die_sides\": 6\n}\n\nThe probability of rolling a six on a six-sided die twice in a row is:\n\n(1/6) * (1/6) = 1/36 = 0.0277 or 2.77%\n\nThis is because the probability of rolling a six on a single six-sided die is 1/6, and the probability of rolling a six twice in a row is the product of the individual probabilities, which is (1/6) * (1/6) = 1/36.", "metadata": {"logprobs": null, "prompt_tokens": 152, "output_tokens": 173, "total_tokens": 325, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5de8400a-4d2c-4056-a49b-a34f6a8f526b", "event_id": "5de8400a-4d2c-4056-a49b-a34f6a8f526b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 110111, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_114", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c5c7f482-6a9a-478d-851a-22d5d1005d2f", "event_id": "1f1c87b3-a69d-4dae-ad74-4baaa1b8f089", "parent_event_id": "c5c7f482-6a9a-478d-851a-22d5d1005d2f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 583, "start_time": "2024-06-20T03:54:29.128Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_115", "variant_name": null}, {"function_name": "Fn_simple_115", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_115\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"trials\":10,\"successes\":5,\"meta\":\"Value\",\"p\":0.5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_115_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the probability of having 'success' outcome from binomial distribution.\n  function_name: 'prob_dist.binomial' or null,\n  // The number of independent experiments.\n  trials: int,\n  // The number of success events.\n  successes: int,\n  // The probability of success on any given trial, defaults to 0.5\n  p: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the probability of getting exactly 5 heads in 10 fair coin tosses."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"prob_dist.binomial\",\n  \"trials\": 10,\n  \"successes\": 5,\n  \"p\": 0.5\n}", "metadata": {"logprobs": null, "prompt_tokens": 131, "output_tokens": 57, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c5c7f482-6a9a-478d-851a-22d5d1005d2f", "event_id": "c5c7f482-6a9a-478d-851a-22d5d1005d2f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 110695, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_115", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3e393817-e89a-4389-a79e-f56b771d81d3", "event_id": "88766e01-e616-4ea7-b5e4-280cb7e02ee1", "parent_event_id": "3e393817-e89a-4389-a79e-f56b771d81d3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 671, "start_time": "2024-06-20T03:54:29.712Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_116", "variant_name": null}, {"function_name": "Fn_simple_116", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_116\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number_of_trials\":8,\"number_of_successes\":5,\"meta\":\"Value\",\"probability_of_success\":0.5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_116_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the binomial probability given the number of trials, successes and the probability of success on an individual trial.\n  function_name: 'calculate_binomial_probability' or null,\n  // The total number of trials.\n  number_of_trials: int,\n  // The desired number of successful outcomes.\n  number_of_successes: int,\n  // The probability of a successful outcome on any given trial. (default: 0.5)\n  probability_of_success: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the probability of getting exactly 5 heads in 8 tosses of a fair coin."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_binomial_probability\",\n  \"number_of_trials\": 8,\n  \"number_of_successes\": 5,\n  \"probability_of_success\": 0.5\n}", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 59, "total_tokens": 218, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3e393817-e89a-4389-a79e-f56b771d81d3", "event_id": "3e393817-e89a-4389-a79e-f56b771d81d3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 111367, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_116", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "59570510-6d85-4994-b71e-6c3f829a7d07", "event_id": "1663b97e-4eba-4ab8-b70d-3b80bcbb8ccc", "parent_event_id": "59570510-6d85-4994-b71e-6c3f829a7d07", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1461, "start_time": "2024-06-20T03:54:30.384Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_117", "variant_name": null}, {"function_name": "Fn_simple_117", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_117\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_outcomes\":52,\"event_outcomes\":4,\"meta\":\"Value\",\"round\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_117_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the probability of an event.\n  function_name: 'probabilities.calculate_single' or null,\n  // The total number of outcomes.\n  total_outcomes: int,\n  // The number of outcomes where the event occurs.\n  event_outcomes: int,\n  // Round the answer to a specified number of decimal places. Defaults to 2.\n  round: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the probability of drawing a king from a well shuffled standard deck of 52 cards?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"probabilities.calculate_single\",\n  \"total_outcomes\": 52,\n  \"event_outcomes\": 4,\n  \"round\": 2\n}\n\nThis calculates the probability of drawing a king from a well-shuffled standard deck of 52 cards. There are 4 kings in a standard deck, and the total number of cards is 52, so the probability is 4/52 = 0.0769, which rounded to 2 decimal places is 0.08.", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 133, "total_tokens": 265, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "59570510-6d85-4994-b71e-6c3f829a7d07", "event_id": "59570510-6d85-4994-b71e-6c3f829a7d07", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 112830, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_117", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6a582af5-2274-40e6-984b-ce6a7440f13d", "event_id": "8daf8f89-46e9-4bc1-a207-9a0543299071", "parent_event_id": "6a582af5-2274-40e6-984b-ce6a7440f13d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 761, "start_time": "2024-06-20T03:54:31.847Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_118", "variant_name": null}, {"function_name": "Fn_simple_118", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_118\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"success_outcomes\":13,\"total_outcomes\":52,\"meta\":\"Value\",\"format_as_ratio\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_118_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the probability of an event.\n  function_name: 'probability_of_event' or null,\n  // The number of successful outcomes.\n  success_outcomes: int,\n  // The total number of possible outcomes.\n  total_outcomes: int,\n  // When true, formats the output as a ratio instead of a decimal. Default is false.\n  format_as_ratio: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the odds of pulling a heart suit from a well-shuffled standard deck of 52 cards? Format it as ratio."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"probability_of_event\",\n  \"success_outcomes\": 13,\n  \"total_outcomes\": 52,\n  \"format_as_ratio\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 50, "total_tokens": 193, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6a582af5-2274-40e6-984b-ce6a7440f13d", "event_id": "6a582af5-2274-40e6-984b-ce6a7440f13d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 113592, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_118", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d7e05264-770c-4b90-9445-579872aa4efd", "event_id": "0807d13c-4f86-463e-bbb6-0c6583afcc4a", "parent_event_id": "d7e05264-770c-4b90-9445-579872aa4efd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T03:54:32.609Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_119", "variant_name": null}, {"function_name": "Fn_simple_119", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_119\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"array_1\":[10,15,12,14,11],\"array_2\":[18,16,17,20,22],\"alpha\":0.05,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_119_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Perform a two-sample t-test for two given arrays.\n  function_name: 'stats.t_test' or null,\n  // First array of data.\n  array_1: int[],\n  // Second array of data.\n  array_2: int[],\n  // Significance level for hypothesis testing.\n  alpha: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Perform a two-sample t-test on my experiment data of Control [10, 15, 12, 14, 11] and Treated [18, 16, 17, 20, 22] group with alpha equals to 0.05"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the response in the requested schema:\n\n{\n  \"function_name\": \"stats.t_test\",\n  \"array_1\": [10, 15, 12, 14, 11],\n  \"array_2\": [18, 16, 17, 20, 22],\n  \"alpha\": 0.05\n}", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 83, "total_tokens": 242, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d7e05264-770c-4b90-9445-579872aa4efd", "event_id": "d7e05264-770c-4b90-9445-579872aa4efd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 114513, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_119", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4ea271aa-3539-4ae1-9540-34453a2aea20", "event_id": "ce12518e-9c24-4584-8f0a-66fcabf4428e", "parent_event_id": "4ea271aa-3539-4ae1-9540-34453a2aea20", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T03:54:33.530Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_120", "variant_name": null}, {"function_name": "Fn_simple_120", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_120\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sample1\":[22,33,42,12,34],\"sample2\":[23,45,44,14,38],\"meta\":\"Value\",\"significance_level\":0.05}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_120_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Conducts a hypothesis test for two independent samples.\n  function_name: 'hypothesis_testing.ttest_ind' or null,\n  // First set of observations (array of numbers).\n  sample1: int[],\n  // Second set of observations (array of numbers).\n  sample2: int[],\n  // Significance level of the test (default: 0.05)\n  significance_level: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Perform a hypothesis test for two independent samples with scores of Sample1: [22,33,42,12,34] and Sample2: [23,45,44,14,38] at a significance level of 0.05."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"hypothesis_testing.ttest_ind\",\n  \"sample1\": [22, 33, 42, 12, 34],\n  \"sample2\": [23, 45, 44, 14, 38],\n  \"significance_level\": 0.05\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 86, "total_tokens": 256, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4ea271aa-3539-4ae1-9540-34453a2aea20", "event_id": "4ea271aa-3539-4ae1-9540-34453a2aea20", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 115435, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_120", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e16af93c-276d-4d5a-9263-6093c1d08bb8", "event_id": "23cef2cc-fdbd-473c-86f8-6b8cf6a8e046", "parent_event_id": "e16af93c-276d-4d5a-9263-6093c1d08bb8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 771, "start_time": "2024-06-20T03:54:34.452Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_121", "variant_name": null}, {"function_name": "Fn_simple_121", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_121\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"group1\":[3,4,5,6,4],\"group2\":[7,8,9,8,7],\"meta\":\"Value\",\"equal_variance\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_121_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Runs a two sample t-test for two given data groups.\n  function_name: 'run_two_sample_ttest' or null,\n  // First group of data points.\n  group1: int[],\n  // Second group of data points.\n  group2: int[],\n  // Assumption about whether the two samples have equal variance. (default: True)\n  equal_variance: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Run a two sample T-test to compare the average of Group A [3, 4, 5, 6, 4] and Group B [7, 8, 9, 8, 7] assuming equal variance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"run_two_sample_ttest\",\n  \"group1\": [3, 4, 5, 6, 4],\n  \"group2\": [7, 8, 9, 8, 7],\n  \"equal_variance\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 169, "output_tokens": 83, "total_tokens": 252, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e16af93c-276d-4d5a-9263-6093c1d08bb8", "event_id": "e16af93c-276d-4d5a-9263-6093c1d08bb8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 116208, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_121", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8842910c-482d-45e6-be37-67d9d4e1b07f", "event_id": "5539a029-2745-4099-96cd-6f94f53f54dc", "parent_event_id": "8842910c-482d-45e6-be37-67d9d4e1b07f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 865, "start_time": "2024-06-20T03:54:35.225Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_122", "variant_name": null}, {"function_name": "Fn_simple_122", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_122\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num_trials\":100,\"num_success\":60,\"prob_success\":0.5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_122_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the probability of an outcome based on the binomial distribution\n  function_name: 'calc_binomial_prob' or null,\n  // Number of independent experiments.\n  num_trials: int,\n  // Number of times the event of interest has occurred.\n  num_success: int,\n  // Probability of the event of interest on any single experiment.\n  prob_success: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the probability of observing 60 heads if I flip a coin 100 times with probability of heads 0.5."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calc_binomial_prob\",\n  \"num_trials\": 100,\n  \"num_success\": 60,\n  \"prob_success\": 0.5\n}", "metadata": {"logprobs": null, "prompt_tokens": 141, "output_tokens": 62, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8842910c-482d-45e6-be37-67d9d4e1b07f", "event_id": "8842910c-482d-45e6-be37-67d9d4e1b07f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 117075, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_122", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dce3dcaa-2128-4d73-b969-e19819a4b054", "event_id": "f22b00bf-f707-4b74-a54c-9d96d7190022", "parent_event_id": "dce3dcaa-2128-4d73-b969-e19819a4b054", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 731, "start_time": "2024-06-20T03:54:36.092Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_123", "variant_name": null}, {"function_name": "Fn_simple_123", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_123\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"table\":[10,30],\"meta\":\"Value\",\"alpha\":0.05}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_123_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Performs a Chi-Squared test for independence on a 2x2 contingency table.\n  function_name: 'chi_squared_test' or null,\n  // A 2x2 contingency table presented in array form.\n  table: int[],\n  // Significance level for the Chi-Squared test. Default is 0.05.\n  alpha: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Perform a Chi-Squared test for independence on a 2x2 contingency table [ [10, 20], [30, 40] ]"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the requested information in the specified schema:\n\n{\n  \"function_name\": \"chi_squared_test\",\n  \"table\": [\n    [10, 20],\n    [30, 40]\n  ],\n  \"alpha\": 0.05\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 65, "total_tokens": 211, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dce3dcaa-2128-4d73-b969-e19819a4b054", "event_id": "dce3dcaa-2128-4d73-b969-e19819a4b054", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 117807, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_123", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7ab44aca-ec2b-4a61-b96d-7ae176a51cf0", "event_id": "413e00d5-fb8c-44f9-96dd-9f5ad121e74f", "parent_event_id": "7ab44aca-ec2b-4a61-b96d-7ae176a51cf0", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 801, "start_time": "2024-06-20T03:54:36.824Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_124", "variant_name": null}, {"function_name": "Fn_simple_124", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_124\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"group1\":[12.4,15.6,11.2,18.9],\"group2\":[10.5,9.8,15.2,13.8],\"meta\":\"Value\",\"alpha\":0.05}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_124_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Perform a two-sample t-test to determine if there is a significant difference between the means of two independent samples.\n  function_name: 'hypothesis_testing.two_sample_t_test' or null,\n  // Sample observations from group 1.\n  group1: float[],\n  // Sample observations from group 2.\n  group2: float[],\n  // Significance level for the t-test. Default is 0.05.\n  alpha: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Perform a two-sample t-test to determine if there is a significant difference between the mean of group1 (e.g., 12.4, 15.6, 11.2, 18.9) and group2 (e.g., 10.5, 9.8, 15.2, 13.8) at the significance level 0.05."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hypothesis_testing.two_sample_t_test\",\n  \"group1\": [12.4, 15.6, 11.2, 18.9],\n  \"group2\": [10.5, 9.8, 15.2, 13.8],\n  \"alpha\": 0.05\n}", "metadata": {"logprobs": null, "prompt_tokens": 219, "output_tokens": 87, "total_tokens": 306, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7ab44aca-ec2b-4a61-b96d-7ae176a51cf0", "event_id": "7ab44aca-ec2b-4a61-b96d-7ae176a51cf0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 118609, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_124", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "883a5011-166b-491c-ac69-dce55a8ea5f1", "event_id": "9a0504c9-cdde-418f-8f3a-648ef0ae008b", "parent_event_id": "883a5011-166b-491c-ac69-dce55a8ea5f1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2463, "start_time": "2024-06-20T03:54:37.626Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_125", "variant_name": null}, {"function_name": "Fn_simple_125", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_125\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dataset_A\":[12,24,36],\"dataset_B\":[15,30,45],\"meta\":\"Value\",\"alpha\":0.05}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_125_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Perform a statistical t-test to check if the means of two independent datasets are statistically different.\n  function_name: 't_test' or null,\n  // Dataset A for comparison.\n  dataset_A: int[],\n  // Dataset B for comparison.\n  dataset_B: int[],\n  // Significance level for the test. Default is 0.05.\n  alpha: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the statistical significance between two set of variables, dataset_A with the values 12, 24, 36 and dataset_B with the values 15, 30, 45."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the solution in the requested schema:\n\n{\n  \"function_name\": \"t_test\",\n  \"dataset_A\": [12, 24, 36],\n  \"dataset_B\": [15, 30, 45],\n  \"alpha\": 0.05\n}\n\nTo perform the t-test, we need to:\n1. Calculate the mean and standard deviation of each dataset.\n2. Compute the t-statistic using the formula:\n   t = (mean_A - mean_B) / sqrt(var_A/n_A + var_B/n_B)\n   where n_A and n_B are the number of samples in dataset_A and dataset_B, respectively.\n3. Compare the computed t-statistic to the critical t-value based on the degrees of freedom and the chosen significance level (alpha).\n4. If the absolute value of the t-statistic is greater than the critical t-value, we can conclude that the means of the two datasets are statistically different.\n\nThe key steps are:\n1. Calculate the means and standard deviations of the two datasets.\n2. Compute the t-statistic using the formula.\n3. Compare the t-statistic to the critical t-value.\n4. Determine if the means are statistically different based on the comparison.\n\nThe specific implementation will depend on the programming language and libraries used, but the overall approach is the same.", "metadata": {"logprobs": null, "prompt_tokens": 156, "output_tokens": 324, "total_tokens": 480, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "883a5011-166b-491c-ac69-dce55a8ea5f1", "event_id": "883a5011-166b-491c-ac69-dce55a8ea5f1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 121074, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_125", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "90016e75-5cc2-4a61-9ecd-6442f39dd3d6", "event_id": "e24ee584-0f0e-442c-9ae2-c5e1df838953", "parent_event_id": "90016e75-5cc2-4a61-9ecd-6442f39dd3d6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 697, "start_time": "2024-06-20T03:54:40.091Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_126", "variant_name": null}, {"function_name": "Fn_simple_126", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_126\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"area\":2500,\"rooms\":5,\"year\":1990,\"location\":\"San Francisco\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_126_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predict house price based on area, number of rooms and year of construction.\n  function_name: 'predict_house_price' or null,\n  // Area of the house in square feet.\n  area: int,\n  // Number of rooms in the house.\n  rooms: int,\n  // Year when the house was constructed.\n  year: int,\n  // The location or city of the house.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict house price in San Francisco based on its area of 2500 square feet, number of rooms as 5 and year of construction is 1990."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"predict_house_price\",\n  \"area\": 2500,\n  \"rooms\": 5,\n  \"year\": 1990,\n  \"location\": \"San Francisco\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 155, "output_tokens": 55, "total_tokens": 210, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "90016e75-5cc2-4a61-9ecd-6442f39dd3d6", "event_id": "90016e75-5cc2-4a61-9ecd-6442f39dd3d6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 121772, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_126", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4c7914aa-8450-4ee4-a22e-38397d619921", "event_id": "d2abf1cf-4415-409d-ab6e-466232007ab7", "parent_event_id": "4c7914aa-8450-4ee4-a22e-38397d619921", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 831, "start_time": "2024-06-20T03:54:40.788Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_127", "variant_name": null}, {"function_name": "Fn_simple_127", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_127\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dataset_path\":\"C:/data/cars.csv\",\"independent_variables\":[\"engine_size\",\"fuel_economy\"],\"dependent_variable\":\"car_price\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_127_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the coefficient of determination of a regression model.\n  function_name: 'linear_regression.get_r_squared' or null,\n  // Path to the CSV dataset file.\n  dataset_path: string,\n  // The independent variables to use in the regression model.\n  independent_variables: string[],\n  // The dependent variable to predict in the regression model.\n  dependent_variable: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the coefficient of determination (R-squared) for a model using engine size and fuel economy variables to predict car_price with a dataset in path C:/data/cars.csv?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"linear_regression.get_r_squared\",\n  \"dataset_path\": \"C:/data/cars.csv\",\n  \"independent_variables\": [\"engine_size\", \"fuel_economy\"],\n  \"dependent_variable\": \"car_price\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 152, "output_tokens": 69, "total_tokens": 221, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4c7914aa-8450-4ee4-a22e-38397d619921", "event_id": "4c7914aa-8450-4ee4-a22e-38397d619921", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 122604, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_127", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "90a4e9b4-95a0-4a30-8681-f491e12cd8e7", "event_id": "eef4d969-d833-4067-9c81-4e5f479a0783", "parent_event_id": "90a4e9b4-95a0-4a30-8681-f491e12cd8e7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2240, "start_time": "2024-06-20T03:54:41.621Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_128", "variant_name": null}, {"function_name": "Fn_simple_128", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_128\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cash_flows\":[200,300,400,500],\"discount_rate\":0.1,\"meta\":\"Value\",\"initial_investment\":2000}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_128_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the NPV (Net Present Value) of an investment, considering a series of future cash flows, discount rate, and an initial investment.\n  function_name: 'calculate_NPV' or null,\n  // Series of future cash flows.\n  cash_flows: int[],\n  // The discount rate to use.\n  discount_rate: float,\n  // The initial investment. Default is 0 if not specified.\n  initial_investment: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the Net Present Value (NPV) of an investment, given cash_flows=[200,300,400,500], a discount rate of 10%, and an initial investment of $2000."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the solution in the requested schema:\n\n{\n  \"function_name\": \"calculate_NPV\",\n  \"cash_flows\": [200, 300, 400, 500],\n  \"discount_rate\": 0.1,\n  \"initial_investment\": 2000\n}\n\nTo calculate the NPV, we need to discount the future cash flows to their present value using the given discount rate, and then subtract the initial investment.\n\nThe formula for NPV is:\n\nNPV = \u03a3 (Cash Flow in year t) / (1 + Discount Rate)^t - Initial Investment\n\nWhere t represents the year.\n\nPlugging in the values:\n\nNPV = (200 / (1 + 0.1)^1) + (300 / (1 + 0.1)^2) + (400 / (1 + 0.1)^3) + (500 / (1 + 0.1)^4) - 2000\n    = 181.82 + 247.93 + 300.75 + 341.68 - 2000\n    = 72.18\n\nTherefore, the Net Present Value (NPV) of the investment is $72.18.", "metadata": {"logprobs": null, "prompt_tokens": 169, "output_tokens": 285, "total_tokens": 454, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "90a4e9b4-95a0-4a30-8681-f491e12cd8e7", "event_id": "90a4e9b4-95a0-4a30-8681-f491e12cd8e7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 124846, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_128", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5b4ad5ac-8cc0-44ae-86bd-323469114b2b", "event_id": "bcd29884-96ca-4167-803e-d2ed2ace15d7", "parent_event_id": "5b4ad5ac-8cc0-44ae-86bd-323469114b2b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1195, "start_time": "2024-06-20T03:54:43.863Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_129", "variant_name": null}, {"function_name": "Fn_simple_129", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_129\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_payout\":50000000,\"outstanding_shares\":100000000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_129_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate quarterly dividend per share for a company given total dividend payout and outstanding shares\n  function_name: 'finance.calculate_quarterly_dividend_per_share' or null,\n  // The total amount of dividends paid out in USD\n  total_payout: int,\n  // Total number of outstanding shares\n  outstanding_shares: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the quarterly dividend per share of a company with 100 million outstanding shares and total dividend payout of 50 million USD?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"finance.calculate_quarterly_dividend_per_share\",\n  \"total_payout\": 50000000,\n  \"outstanding_shares\": 100000000\n}\n\nTo calculate the quarterly dividend per share, we divide the total dividend payout by the number of outstanding shares:\n\nQuarterly dividend per share = Total dividend payout / Outstanding shares\nQuarterly dividend per share = $50,000,000 / 100,000,000\nQuarterly dividend per share = $0.50\n\nSo the quarterly dividend per share for a company with 100 million outstanding shares and $50 million total dividend payout is $0.50.", "metadata": {"logprobs": null, "prompt_tokens": 127, "output_tokens": 151, "total_tokens": 278, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5b4ad5ac-8cc0-44ae-86bd-323469114b2b", "event_id": "5b4ad5ac-8cc0-44ae-86bd-323469114b2b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 126042, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_129", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1c160a3b-89ed-422f-994f-0ddeded767b8", "event_id": "367fa7c1-01ca-4bd7-8a40-8f9715175db9", "parent_event_id": "1c160a3b-89ed-422f-994f-0ddeded767b8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 963, "start_time": "2024-06-20T03:54:45.059Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_130", "variant_name": null}, {"function_name": "Fn_simple_130", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_130\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coupon_payment\":100,\"period\":5,\"discount_rate\":0.04,\"meta\":\"Value\",\"face_value\":1000}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_130_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the discounted cash flow of a bond for a given annual coupon payment, time frame and discount rate.\n  function_name: 'calculate_discounted_cash_flow' or null,\n  // The annual coupon payment.\n  coupon_payment: int,\n  // The time frame in years for which coupon payment is made.\n  period: int,\n  // The discount rate.\n  discount_rate: float,\n  // The face value of the bond, default is 1000.\n  face_value: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the discounted cash flow of a bond that is giving a coupon payment of $100 annually for next 5 years with discount rate 4%."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_discounted_cash_flow\",\n  \"coupon_payment\": 100,\n  \"period\": 5,\n  \"discount_rate\": 0.04,\n  \"face_value\": 1000\n}", "metadata": {"logprobs": null, "prompt_tokens": 178, "output_tokens": 74, "total_tokens": 252, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1c160a3b-89ed-422f-994f-0ddeded767b8", "event_id": "1c160a3b-89ed-422f-994f-0ddeded767b8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 127007, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_130", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e5860c85-2822-4d93-8f7d-71c412e06d36", "event_id": "3b41a1b7-b3e6-4677-bc7c-5357b5eadddc", "parent_event_id": "e5860c85-2822-4d93-8f7d-71c412e06d36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:54:46.024Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_131", "variant_name": null}, {"function_name": "Fn_simple_131", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_131\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cash_flows\":[-50000,10000,15000,20000,25000,30000],\"discount_rate\":0.08,\"years\":[],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_131_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Net Present Value (NPV) for a series of cash flows discounted at a certain interest rate.\n  function_name: 'finance_calculator.npv' or null,\n  // A list of cash flows.\n  cash_flows: int[],\n  // The annual interest rate used to discount the cash flows.\n  discount_rate: float,\n  // A list of years when the cash flow occurs. Default is empty array.\n  years: int[],\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the NPV (Net Present Value) of a series of cash flows: [-50000, 10000, 15000, 20000, 25000, 30000] discounted at 8% annually?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"finance_calculator.npv\",\n  \"cash_flows\": [-50000, 10000, 15000, 20000, 25000, 30000],\n  \"discount_rate\": 0.08,\n  \"years\": []\n}", "metadata": {"logprobs": null, "prompt_tokens": 176, "output_tokens": 80, "total_tokens": 256, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e5860c85-2822-4d93-8f7d-71c412e06d36", "event_id": "e5860c85-2822-4d93-8f7d-71c412e06d36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 127826, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_131", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4a6ce9c5-9458-4e4b-83ca-c47f64c4b835", "event_id": "60a35cbf-9815-4640-84d5-62f6fa97e5e9", "parent_event_id": "4a6ce9c5-9458-4e4b-83ca-c47f64c4b835", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T03:54:46.843Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_132", "variant_name": null}, {"function_name": "Fn_simple_132", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_132\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principal\":10000,\"rate\":0.05,\"time\":10,\"meta\":\"Value\",\"n\":4}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_132_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate compound interest for an initial principal amount.\n  function_name: 'calculate_compound_interest' or null,\n  // The principal amount that the interest is applied to.\n  principal: int,\n  // The annual interest rate. Enter as a decimal. E.g, 5% is 0.05\n  rate: float,\n  // The time the money is invested for in years.\n  time: int,\n  // The number of times that interest is compounded per time period. Default is 1.\n  n: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the compound interest for an initial principal amount of $10000, with an annual interest rate of 5% and the number of times interest applied per time period is 4 and the time the money is invested for 10 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_compound_interest\",\n  \"principal\": 10000,\n  \"rate\": 0.05,\n  \"time\": 10,\n  \"n\": 4\n}", "metadata": {"logprobs": null, "prompt_tokens": 195, "output_tokens": 54, "total_tokens": 249, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4a6ce9c5-9458-4e4b-83ca-c47f64c4b835", "event_id": "4a6ce9c5-9458-4e4b-83ca-c47f64c4b835", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 128544, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_132", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "efb58231-2664-4c16-9199-5361f2a3c3c8", "event_id": "ea1988d2-6771-4160-9b0f-7261a7e9698b", "parent_event_id": "efb58231-2664-4c16-9199-5361f2a3c3c8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1533, "start_time": "2024-06-20T03:54:47.561Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_133", "variant_name": null}, {"function_name": "Fn_simple_133", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_133\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"net_income\":2000000,\"shareholder_equity\":10000000,\"meta\":\"Value\",\"dividends_paid\":200000}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_133_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate a company's return on equity based on its net income, shareholder's equity, and dividends paid.\n  function_name: 'calculate_return_on_equity' or null,\n  // The company's net income.\n  net_income: int,\n  // The company's total shareholder's equity.\n  shareholder_equity: int,\n  // The total dividends paid by the company. Optional. If not given, default to 0.\n  dividends_paid: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the company's return on equity given its net income of $2,000,000, shareholder's equity of $10,000,000, and dividends paid of $200,000."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_return_on_equity\",\n  \"net_income\": 2000000,\n  \"shareholder_equity\": 10000000,\n  \"dividends_paid\": 200000\n}\n\nTo calculate the company's return on equity (ROE), we use the following formula:\n\nROE = (Net Income - Dividends Paid) / Shareholder's Equity\n\nPlugging in the given values:\n\nROE = ($2,000,000 - $200,000) / $10,000,000\nROE = $1,800,000 / $10,000,000\nROE = 0.18 or 18%\n\nThe company's return on equity is 18%.", "metadata": {"logprobs": null, "prompt_tokens": 176, "output_tokens": 173, "total_tokens": 349, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "efb58231-2664-4c16-9199-5361f2a3c3c8", "event_id": "efb58231-2664-4c16-9199-5361f2a3c3c8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 130078, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_133", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3c231c58-4a6a-44b0-93ac-7c9849e65c40", "event_id": "0b4835d7-63ec-44ef-bf57-db8260291783", "parent_event_id": "3c231c58-4a6a-44b0-93ac-7c9849e65c40", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 786, "start_time": "2024-06-20T03:54:49.095Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_134", "variant_name": null}, {"function_name": "Fn_simple_134", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_134\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"present_value\":5000,\"annual_interest_rate\":0.05,\"time_years\":3,\"meta\":\"Value\",\"compounding_periods_per_year\":12}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_134_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the future value of an investment given its present value, interest rate, the number of compounding periods per year, and the time horizon.\n  function_name: 'finance.predict_future_value' or null,\n  // The present value of the investment.\n  present_value: int,\n  // The annual interest rate of the investment.\n  annual_interest_rate: float,\n  // The number of times that interest is compounded per year. Default is 1 (annually).\n  compounding_periods_per_year: int or null,\n  // The investment horizon in years.\n  time_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the future value of a $5000 investment with an annual interest rate of 5% in 3 years with monthly compounding."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"finance.predict_future_value\",\n  \"present_value\": 5000,\n  \"annual_interest_rate\": 0.05,\n  \"compounding_periods_per_year\": 12,\n  \"time_years\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 194, "output_tokens": 81, "total_tokens": 275, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3c231c58-4a6a-44b0-93ac-7c9849e65c40", "event_id": "3c231c58-4a6a-44b0-93ac-7c9849e65c40", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 130865, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_134", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fe784869-6a81-4427-9304-ce1662956fe1", "event_id": "1a30aa9b-5f31-4336-b6ca-0b90fc2e8b07", "parent_event_id": "fe784869-6a81-4427-9304-ce1662956fe1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 748, "start_time": "2024-06-20T03:54:49.882Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_135", "variant_name": null}, {"function_name": "Fn_simple_135", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_135\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"investment_amount\":5000,\"annual_return\":0.07,\"years\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_135_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Predict the profit for given investment after specified number of years.\n  function_name: 'investment.predictProfit' or null,\n  // The amount invested in dollars.\n  investment_amount: int,\n  // The annual return rate of the investment.\n  annual_return: float,\n  // The time period in years for which the investment is made.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the total expected profit of stocks XYZ in 5 years given I have invested $5000 and annual return rate is 7%."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"investment.predictProfit\",\n  \"investment_amount\": 5000,\n  \"annual_return\": 0.07,\n  \"years\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 140, "output_tokens": 60, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fe784869-6a81-4427-9304-ce1662956fe1", "event_id": "fe784869-6a81-4427-9304-ce1662956fe1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 131615, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_135", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "321180e1-f908-41c6-b033-319789d71e90", "event_id": "99fb3c32-49ba-48a9-9fed-90bf03a39d2b", "parent_event_id": "321180e1-f908-41c6-b033-319789d71e90", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:54:50.632Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_136", "variant_name": null}, {"function_name": "Fn_simple_136", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_136\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"purchase_price\":20,\"sale_price\":25,\"meta\":\"Value\",\"dividend\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_136_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the return on investment for a given stock based on its purchase price, sale price, and any dividends received.\n  function_name: 'calculate_return_on_investment' or null,\n  // The price the stock was bought at.\n  purchase_price: int,\n  // The price the stock was sold at.\n  sale_price: int,\n  // Any dividends received from the stock.\n  dividend: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the return on investment for a stock bought at $20, sold at $25, with a dividend of $2."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_return_on_investment\",\n  \"purchase_price\": 20,\n  \"sale_price\": 25,\n  \"dividend\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 59, "total_tokens": 205, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "321180e1-f908-41c6-b033-319789d71e90", "event_id": "321180e1-f908-41c6-b033-319789d71e90", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 132331, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_136", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "64ed1833-9903-408e-af4d-aa81d41bd068", "event_id": "f93b5e23-a4a7-43b7-8ff5-b1120e28f747", "parent_event_id": "64ed1833-9903-408e-af4d-aa81d41bd068", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1947, "start_time": "2024-06-20T03:54:51.348Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_137", "variant_name": null}, {"function_name": "Fn_simple_137", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_137\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principal\":10000,\"annual_rate\":5.0,\"compounding_freq\":\"Value0\",\"time_in_years\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_137_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate compound interest for a certain time period.\n  function_name: 'compound_interest' or null,\n  // The initial amount of money that was invested or loaned out.\n  principal: int,\n  // The interest rate for a year as a percentage.\n  annual_rate: float,\n  // The number of times that interest is compounded per unit period.\n  compounding_freq: 'monthly' or 'quarterly' or 'annually',\n  // The time the money is invested for in years.\n  time_in_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the compound interest for an investment of $10000 with an annual interest rate of 5% compounded monthly for 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"compound_interest\",\n  \"principal\": 10000,\n  \"annual_rate\": 5.0,\n  \"compounding_freq\": \"monthly\",\n  \"time_in_years\": 5\n}\n\nThe compound interest formula is:\n\nA = P(1 + r/n)^(nt)\n\nWhere:\n- A is the final amount (principal + interest)\n- P is the principal amount\n- r is the annual interest rate\n- n is the number of times the interest is compounded per year\n- t is the time period in years\n\nPlugging in the values:\n- P = $10,000\n- r = 5% = 0.05\n- n = 12 (monthly compounding)\n- t = 5 years\n\nA = 10,000 * (1 + 0.05/12)^(12*5)\nA = $12,833.78\n\nThe compound interest earned is $12,833.78 - $10,000 = $2,833.78", "metadata": {"logprobs": null, "prompt_tokens": 178, "output_tokens": 258, "total_tokens": 436, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "64ed1833-9903-408e-af4d-aa81d41bd068", "event_id": "64ed1833-9903-408e-af4d-aa81d41bd068", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 134279, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_137", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "edc01f60-475a-4d02-a33f-7dcef9744556", "event_id": "b5b3e217-fb9f-465d-9ad0-e9c4812ff53c", "parent_event_id": "edc01f60-475a-4d02-a33f-7dcef9744556", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 897, "start_time": "2024-06-20T03:54:53.297Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_138", "variant_name": null}, {"function_name": "Fn_simple_138", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_138\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"investment_amount\":5000,\"annual_growth_rate\":0.06,\"holding_period\":5,\"meta\":\"Value\",\"dividends\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_138_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the projected return of a stock investment given the investment amount, the annual growth rate and holding period in years.\n  function_name: 'calculate_stock_return' or null,\n  // The amount of money to invest.\n  investment_amount: int,\n  // The expected annual growth rate of the stock.\n  annual_growth_rate: float,\n  // The number of years you intend to hold the stock.\n  holding_period: int,\n  // Optional. True if the calculation should take into account potential dividends. Default is false.\n  dividends: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the projected return on a $5000 investment in ABC company's stock, if the expected annual growth rate is 6% and the holding period is 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_stock_return\",\n  \"investment_amount\": 5000,\n  \"annual_growth_rate\": 0.06,\n  \"holding_period\": 5,\n  \"dividends\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 191, "output_tokens": 62, "total_tokens": 253, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "edc01f60-475a-4d02-a33f-7dcef9744556", "event_id": "edc01f60-475a-4d02-a33f-7dcef9744556", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 135178, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_138", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8de6cec8-cb57-4e2c-a0a1-7eada2a1536c", "event_id": "e2333849-d079-4b86-8584-4bfd356efd20", "parent_event_id": "8de6cec8-cb57-4e2c-a0a1-7eada2a1536c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1556, "start_time": "2024-06-20T03:54:54.195Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_139", "variant_name": null}, {"function_name": "Fn_simple_139", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_139\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"stock\":\"X\",\"invested_amount\":5000,\"expected_annual_return\":0.05,\"years\":7,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_139_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the future value of an investment in a specific stock based on the invested amount, expected annual return and number of years.\n  function_name: 'portfolio_future_value' or null,\n  // The ticker symbol of the stock.\n  stock: string,\n  // The invested amount in USD.\n  invested_amount: int,\n  // The expected annual return on investment as a decimal. E.g. 5% = 0.05\n  expected_annual_return: float,\n  // The number of years for which the investment is made.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the future value of my portfolio if I invest $5000 in stock 'X' with an expected annual return of 5% for 7 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"portfolio_future_value\",\n  \"stock\": \"X\",\n  \"invested_amount\": 5000,\n  \"expected_annual_return\": 0.05,\n  \"years\": 7\n}\n\nThe future value of your portfolio can be calculated using the formula:\n\nFuture Value = Invested Amount * (1 + Expected Annual Return)^Years\n\nPlugging in the values:\n\nFuture Value = $5,000 * (1 + 0.05)^7\n            = $5,000 * 1.40372\n            = $7,018.60\n\nSo, the future value of your portfolio after investing $5,000 in stock 'X' with an expected annual return of 5% for 7 years is $7,018.60.", "metadata": {"logprobs": null, "prompt_tokens": 186, "output_tokens": 188, "total_tokens": 374, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8de6cec8-cb57-4e2c-a0a1-7eada2a1536c", "event_id": "8de6cec8-cb57-4e2c-a0a1-7eada2a1536c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 136736, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_139", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "32c9d5a0-d489-422b-8037-b2b8c5bb1e86", "event_id": "be0b09f5-083f-4be8-8cfc-9edeb5f30896", "parent_event_id": "32c9d5a0-d489-422b-8037-b2b8c5bb1e86", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1314, "start_time": "2024-06-20T03:54:55.753Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_140", "variant_name": null}, {"function_name": "Fn_simple_140", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_140\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"yearly_yield\":0.05,\"investment_amount\":2000,\"years\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_140_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the estimated return on a mutual fund given the yearly yield, the investment amount and the time period.\n  function_name: 'estimate_mutual_fund_return' or null,\n  // The yearly yield of the mutual fund as a percentage.\n  yearly_yield: float,\n  // The initial investment amount in the mutual fund.\n  investment_amount: int,\n  // The time period for which the investment is made in years.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the estimated return on a mutual fund, given that it has a yearly yield of 5%, an investment amount of $2000 and a time period of 3 years?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"estimate_mutual_fund_return\",\n  \"yearly_yield\": 0.05,\n  \"investment_amount\": 2000,\n  \"years\": 3\n}\n\nTo calculate the estimated return on the mutual fund, we can use the formula:\n\nEstimated Return = Investment Amount * (1 + Yearly Yield)^Years\n\nPlugging in the values:\n\nEstimated Return = 2000 * (1 + 0.05)^3\n            = 2000 * (1.157625)\n            = $2,315.25\n\nSo, the estimated return on the mutual fund with a yearly yield of 5%, an investment amount of $2000, and a time period of 3 years, is $2,315.25.", "metadata": {"logprobs": null, "prompt_tokens": 163, "output_tokens": 184, "total_tokens": 347, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "32c9d5a0-d489-422b-8037-b2b8c5bb1e86", "event_id": "32c9d5a0-d489-422b-8037-b2b8c5bb1e86", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 138051, "start_time": "2024-06-20T03:52:39.016Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_140", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "458e273e-6d4c-480b-a9ca-8b4f7efae633", "event_id": "ddb8fcc6-94ab-4680-9dfd-5fb2d66c59eb", "parent_event_id": "458e273e-6d4c-480b-a9ca-8b4f7efae633", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1669, "start_time": "2024-06-20T03:54:57.069Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_141", "variant_name": null}, {"function_name": "Fn_simple_141", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_141\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_value\":2000,\"final_value\":3000,\"period_in_years\":4,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_141_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Compound Annual Growth Rate (CAGR) given an initial investment value, a final investment value, and the number of years.\n  function_name: 'calculate_cagr' or null,\n  // The initial investment value.\n  initial_value: int,\n  // The final investment value.\n  final_value: int,\n  // The period of the investment in years.\n  period_in_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Compound Annual Growth Rate (CAGR) for an initial investment of $2000, final value of $3000 in a period of 4 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_cagr\",\n  \"initial_value\": 2000,\n  \"final_value\": 3000,\n  \"period_in_years\": 4\n}\n\nThe Compound Annual Growth Rate (CAGR) for an initial investment of $2000, final value of $3000 in a period of 4 years can be calculated as follows:\n\nCAGR = (Final Value / Initial Value)^(1/n) - 1\nWhere n is the number of years.\n\nPlugging in the values:\nCAGR = (3000 / 2000)^(1/4) - 1\n     = 1.1046 - 1\n     = 0.1046 or 10.46%\n\nSo the CAGR for this investment is 10.46%.", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 212, "total_tokens": 371, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "458e273e-6d4c-480b-a9ca-8b4f7efae633", "event_id": "458e273e-6d4c-480b-a9ca-8b4f7efae633", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 139722, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_141", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b692b9d1-0f79-4580-9556-7789ac049409", "event_id": "36b5dc05-35b7-4465-a64b-3ff685c9401c", "parent_event_id": "b692b9d1-0f79-4580-9556-7789ac049409", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 697, "start_time": "2024-06-20T03:54:58.740Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_142", "variant_name": null}, {"function_name": "Fn_simple_142", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_142\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"metal\":\"gold\",\"measure\":\"ounce\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_142_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current price for a specified metal and measure.\n  function_name: 'get_metal_price' or null,\n  // The metal whose price needs to be fetched.\n  metal: string,\n  // The measure unit for price, like 'ounce' or 'kg'.\n  measure: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get current Gold price per ounce."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_metal_price\",\n  \"metal\": \"gold\",\n  \"measure\": \"ounce\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 105, "output_tokens": 48, "total_tokens": 153, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b692b9d1-0f79-4580-9556-7789ac049409", "event_id": "b692b9d1-0f79-4580-9556-7789ac049409", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 140421, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_142", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c7dde22a-18d0-49ad-8ca3-a1e51ea4ab17", "event_id": "88e9f3bf-47b6-4784-b9b4-c1cc391231bf", "parent_event_id": "c7dde22a-18d0-49ad-8ca3-a1e51ea4ab17", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 746, "start_time": "2024-06-20T03:54:59.439Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_143", "variant_name": null}, {"function_name": "Fn_simple_143", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_143\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Amazon\",\"date\":\"2022-03-11\",\"meta\":\"Value\",\"exchange\":\"NASDAQ\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_143_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the closing stock price for a specific company on a specified date.\n  function_name: 'get_stock_price' or null,\n  // Name of the company.\n  company_name: string,\n  // Date of when to get the stock price. Format: yyyy-mm-dd.\n  date: string,\n  // Name of the stock exchange market where the company's stock is listed. Default is 'NASDAQ'\n  exchange: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the NASDAQ stock price for the company Amazon at closing March.11, 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_stock_price\",\n  \"company_name\": \"Amazon\",\n  \"date\": \"2022-03-11\",\n  \"exchange\": \"NASDAQ\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 62, "total_tokens": 208, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c7dde22a-18d0-49ad-8ca3-a1e51ea4ab17", "event_id": "c7dde22a-18d0-49ad-8ca3-a1e51ea4ab17", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 141170, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_143", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7807be99-d59f-4b20-9d1b-6a1aadabfa12", "event_id": "02e3f13e-0b2d-41f6-b52a-1d60b5ca20bf", "parent_event_id": "7807be99-d59f-4b20-9d1b-6a1aadabfa12", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 629, "start_time": "2024-06-20T03:55:00.187Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_144", "variant_name": null}, {"function_name": "Fn_simple_144", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_144\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"AAPL\",\"days\":5,\"meta\":\"Value\",\"exchange\":\"NASDAQ\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_144_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the stock price for a specific company and time frame.\n  function_name: 'get_stock_price' or null,\n  // The ticker symbol of the company.\n  company: string,\n  // Number of past days for which the stock price is required.\n  days: int,\n  // The stock exchange where the company is listed, default is NYSE\n  exchange: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: 'Get stock price of Apple for the last 5 days in NASDAQ.'"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_stock_price\",\n  \"company\": \"AAPL\",\n  \"days\": 5,\n  \"exchange\": \"NASDAQ\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 129, "output_tokens": 48, "total_tokens": 177, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7807be99-d59f-4b20-9d1b-6a1aadabfa12", "event_id": "7807be99-d59f-4b20-9d1b-6a1aadabfa12", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 141800, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_144", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f09d7cea-4e28-4888-b76d-af90b9274ead", "event_id": "1f89f2ff-0b88-4212-bbf5-97b6f1fb96b1", "parent_event_id": "f09d7cea-4e28-4888-b76d-af90b9274ead", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 769, "start_time": "2024-06-20T03:55:00.818Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_145", "variant_name": null}, {"function_name": "Fn_simple_145", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_145\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"indexes\":[\"S&P 500\",\"Dow Jones\"],\"days\":5,\"meta\":\"Value\",\"detailed\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_145_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the market performance data for specified indexes over a specified time period.\n  function_name: 'market_performance.get_data' or null,\n  // Array of stock market indexes. Supported indexes are 'S&P 500', 'Dow Jones', 'NASDAQ', 'FTSE 100', 'DAX' etc.\n  indexes: string[],\n  // Number of days in the past for which the performance data is required.\n  days: int,\n  // Whether to return detailed performance data. If set to true, returns high, low, opening, and closing prices. If false, returns only closing prices. Default is false.\n  detailed: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the market performance of the S&P 500 and the Dow Jones over the past 5 days."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"market_performance.get_data\",\n  \"indexes\": [\"S&P 500\", \"Dow Jones\"],\n  \"days\": 5,\n  \"detailed\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 203, "output_tokens": 63, "total_tokens": 266, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f09d7cea-4e28-4888-b76d-af90b9274ead", "event_id": "f09d7cea-4e28-4888-b76d-af90b9274ead", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 142571, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_145", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f22b630d-a0b9-49e6-9a71-ee2987eafbe3", "event_id": "5d5ef9f2-76d2-44d0-9312-57b5d5c58a3e", "parent_event_id": "f22b630d-a0b9-49e6-9a71-ee2987eafbe3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 800, "start_time": "2024-06-20T03:55:01.588Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_146", "variant_name": null}, {"function_name": "Fn_simple_146", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_146\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principal\":5000,\"interest_rate\":0.05,\"period\":10,\"meta\":\"Value\",\"compounding_frequency\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_146_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the compounded interest for a given principal, interest rate, and period.\n  function_name: 'calculate_compounded_interest' or null,\n  // The initial principal.\n  principal: int,\n  // The annual interest rate.\n  interest_rate: float,\n  // The period in years.\n  period: int,\n  // The frequency of compounding per year. Defaults to 'Annually'.\n  compounding_frequency: 'Annually' or 'Semiannually' or 'Quarterly' or 'Monthly' or 'Daily' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the compounded interest for an initial principal of $5000, annual interest rate of 5%, and compounding period of 10 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_compounded_interest\",\n  \"principal\": 5000,\n  \"interest_rate\": 0.05,\n  \"period\": 10,\n  \"compounding_frequency\": \"Annually\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 188, "output_tokens": 72, "total_tokens": 260, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f22b630d-a0b9-49e6-9a71-ee2987eafbe3", "event_id": "f22b630d-a0b9-49e6-9a71-ee2987eafbe3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 143373, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_146", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ce31432b-af34-4fe2-9a8c-40d381dbd385", "event_id": "36f83bbb-ecef-47d7-98c1-bc1aed808b67", "parent_event_id": "ce31432b-af34-4fe2-9a8c-40d381dbd385", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 733, "start_time": "2024-06-20T03:55:02.390Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_147", "variant_name": null}, {"function_name": "Fn_simple_147", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_147\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Amazon\",\"days\":3,\"meta\":\"Value\",\"data_type\":\"Close\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_147_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get stock price data for a given company over a specified number of days.\n  function_name: 'stock_price' or null,\n  // The company name.\n  company: string,\n  // The number of previous days to retrieve data for.\n  days: int,\n  // The type of price data to retrieve (e.g., 'Open', 'Close', 'High', 'Low'). Default is 'Close'.\n  data_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the price of Amazon stock for the last 3 days?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"stock_price\",\n  \"company\": \"Amazon\",\n  \"days\": 3,\n  \"data_type\": \"Close\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 54, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ce31432b-af34-4fe2-9a8c-40d381dbd385", "event_id": "ce31432b-af34-4fe2-9a8c-40d381dbd385", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 144107, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_147", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5ffcf309-b0e3-4c7e-9996-e62c05a4156d", "event_id": "fa281c8c-9c58-4d08-8f76-de92dfaa361d", "parent_event_id": "5ffcf309-b0e3-4c7e-9996-e62c05a4156d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 614, "start_time": "2024-06-20T03:55:03.124Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_148", "variant_name": null}, {"function_name": "Fn_simple_148", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_148\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"companies\":[\"Microsoft\",\"Google\"],\"duration\":\"2 weeks\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_148_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves stock prices for specified companies and duration.\n  function_name: 'get_stock_prices' or null,\n  // List of companies to retrieve stock prices for.\n  companies: string[],\n  // Time duration to retrieve stock prices for. E.g., '1 week', '2 weeks', '1 month', etc.\n  duration: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve stock prices of Microsoft and Google for the last 2 weeks."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_stock_prices\",\n  \"companies\": [\"Microsoft\", \"Google\"],\n  \"duration\": \"2 weeks\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 122, "output_tokens": 41, "total_tokens": 163, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5ffcf309-b0e3-4c7e-9996-e62c05a4156d", "event_id": "5ffcf309-b0e3-4c7e-9996-e62c05a4156d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 144722, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_148", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "89e7c114-e4c4-4e20-af07-7bdccfd9aa6b", "event_id": "f4f2a62f-d69e-4118-b071-5b0d3f33f4cd", "parent_event_id": "89e7c114-e4c4-4e20-af07-7bdccfd9aa6b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1023, "start_time": "2024-06-20T03:55:03.739Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_149", "variant_name": null}, {"function_name": "Fn_simple_149", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_149\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_investment\":20000,\"rate_of_return\":0.08,\"years\":5,\"meta\":\"Value\",\"contribution\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_149_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the future value of an investment given an initial investment, annual rate of return, and a time frame.\n  function_name: 'finance.calculate_future_value' or null,\n  // The initial investment amount.\n  initial_investment: int,\n  // The annual rate of return.\n  rate_of_return: float,\n  // The time frame of the investment in years.\n  years: int,\n  // Optional: Additional regular contributions. Default is 0.\n  contribution: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the future value of an investment with an annual rate of return of 8%, an initial investment of $20000, and a time frame of 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"finance.calculate_future_value\",\n  \"initial_investment\": 20000,\n  \"rate_of_return\": 0.08,\n  \"years\": 5,\n  \"contribution\": null\n}\n\nThe future value of the investment with an annual rate of return of 8%, an initial investment of $20,000, and a time frame of 5 years is:\n\n$27,528.95", "metadata": {"logprobs": null, "prompt_tokens": 172, "output_tokens": 105, "total_tokens": 277, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "89e7c114-e4c4-4e20-af07-7bdccfd9aa6b", "event_id": "89e7c114-e4c4-4e20-af07-7bdccfd9aa6b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 145746, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_149", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c9071367-a35f-485a-8dd1-28dba896d4de", "event_id": "f824351d-8225-47c3-8afd-ee15c910163e", "parent_event_id": "c9071367-a35f-485a-8dd1-28dba896d4de", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:55:04.763Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_150", "variant_name": null}, {"function_name": "Fn_simple_150", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_150\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_names\":[\"Apple\",\"Microsoft\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_150_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves the current stock price of the specified companies\n  function_name: 'get_stock_price' or null,\n  // The list of companies for which to retrieve the stock price.\n  company_names: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the current stock price of Apple and Microsoft?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_stock_price\",\n  \"company_names\": [\"Apple\", \"Microsoft\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 84, "output_tokens": 43, "total_tokens": 127, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c9071367-a35f-485a-8dd1-28dba896d4de", "event_id": "c9071367-a35f-485a-8dd1-28dba896d4de", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 146463, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_150", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e18c2ae4-c252-42e1-8162-92c6202c3f39", "event_id": "acd22876-8911-43d6-a8cf-348e0913ecfa", "parent_event_id": "e18c2ae4-c252-42e1-8162-92c6202c3f39", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 638, "start_time": "2024-06-20T03:55:05.480Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_151", "variant_name": null}, {"function_name": "Fn_simple_151", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_151\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"deposit\":1000,\"annual_interest_rate\":0.03,\"years\":1,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_151_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the return on investment for a given deposit amount, annual interest rate, and time frame.\n  function_name: 'calculate_roi' or null,\n  // The initial deposit amount.\n  deposit: int,\n  // The annual interest rate provided by the bank.\n  annual_interest_rate: float,\n  // The period for which the money is invested.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the return of investment of a bank's savings account with a deposit of $1000, annual interest rate of 3% for 1 year."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_roi\",\n  \"deposit\": 1000,\n  \"annual_interest_rate\": 0.03,\n  \"years\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 141, "output_tokens": 48, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e18c2ae4-c252-42e1-8162-92c6202c3f39", "event_id": "e18c2ae4-c252-42e1-8162-92c6202c3f39", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 147102, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_151", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2d02fc4e-fd86-4f45-b591-f7a4ffd46d02", "event_id": "25631f78-8cf6-4a8e-9d96-398d7ed5d73d", "parent_event_id": "2d02fc4e-fd86-4f45-b591-f7a4ffd46d02", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 692, "start_time": "2024-06-20T03:55:06.119Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_152", "variant_name": null}, {"function_name": "Fn_simple_152", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_152\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"United States\",\"year\":2020,\"meta\":\"Value\",\"top_n\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_152_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the highest grossing banks in a specified country and year.\n  function_name: 'highest_grossing_banks' or null,\n  // The country to get the data from.\n  country: string,\n  // The year to get the data from.\n  year: int,\n  // Top n banks in terms of grossing. Default is 5\n  top_n: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the highest grossing bank in the U.S for year 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"highest_grossing_banks\",\n  \"country\": \"United States\",\n  \"year\": 2020,\n  \"top_n\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 130, "output_tokens": 58, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2d02fc4e-fd86-4f45-b591-f7a4ffd46d02", "event_id": "2d02fc4e-fd86-4f45-b591-f7a4ffd46d02", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 147796, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_152", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bcb735a4-e8c7-4d5e-84d2-41c145c646c1", "event_id": "409c88ab-7c96-49ef-95e3-f02ec01b3fb0", "parent_event_id": "bcb735a4-e8c7-4d5e-84d2-41c145c646c1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 621, "start_time": "2024-06-20T03:55:06.814Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_153", "variant_name": null}, {"function_name": "Fn_simple_153", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_153\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"investment_amount\":50000,\"annual_yield\":0.05,\"years\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_153_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the final balance of a mutual fund investment based on the total initial investment, annual yield rate and the time period.\n  function_name: 'calculate_mutual_fund_balance' or null,\n  // The initial total amount invested in the fund.\n  investment_amount: int,\n  // The annual yield rate of the fund.\n  annual_yield: float,\n  // The period of time for the fund to mature.\n  years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the balance of a mutual fund given a total investment of $50000 with a 5% annual yield after 3 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_mutual_fund_balance\",\n  \"investment_amount\": 50000,\n  \"annual_yield\": 0.05,\n  \"years\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 52, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bcb735a4-e8c7-4d5e-84d2-41c145c646c1", "event_id": "bcb735a4-e8c7-4d5e-84d2-41c145c646c1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 148420, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_153", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "522a3444-9e69-454d-af57-55fe0d57e9f9", "event_id": "804a33ab-5fb4-4431-9ce0-d10910d65407", "parent_event_id": "522a3444-9e69-454d-af57-55fe0d57e9f9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2374, "start_time": "2024-06-20T03:55:07.437Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_154", "variant_name": null}, {"function_name": "Fn_simple_154", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_154\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principal\":5000,\"rate\":0.03,\"time\":5,\"n\":4,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_154_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the compounded interest for a given initial deposit, interest rate, time and number of times the interest is compounded per unit time.\n  function_name: 'calculate_compounded_interest' or null,\n  // The initial amount of money that is being invested or loaned.\n  principal: int,\n  // The annual interest rate.\n  rate: float,\n  // The number of time periods the money is invested or loaned for.\n  time: int,\n  // The number of times that interest is compounded per unit time.\n  n: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the compounded interest on an initial deposit of $5000 at an annual interest rate of 3% for 5 years, compounded quarterly."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_compounded_interest\",\n  \"principal\": 5000,\n  \"rate\": 0.03,\n  \"time\": 5,\n  \"n\": 4\n}\n\nTo calculate the compounded interest in this scenario, we can use the formula:\n\nA = P(1 + r/n)^(n*t)\n\nWhere:\n- A is the final amount (principal + interest)\n- P is the principal (initial deposit)\n- r is the annual interest rate\n- n is the number of times the interest is compounded per year\n- t is the time (in years)\n\nPlugging in the values:\n- P = $5,000\n- r = 0.03 (3% annual interest rate)\n- n = 4 (compounded quarterly)\n- t = 5 years\n\nA = 5000 * (1 + 0.03/4)^(4*5)\nA = 5000 * (1.0075)^20\nA = 5,688.24\n\nTherefore, the compounded interest earned on the $5,000 deposit at 3% annual interest rate, compounded quarterly, over 5 years is $688.24.", "metadata": {"logprobs": null, "prompt_tokens": 181, "output_tokens": 289, "total_tokens": 470, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "522a3444-9e69-454d-af57-55fe0d57e9f9", "event_id": "522a3444-9e69-454d-af57-55fe0d57e9f9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 150795, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_154", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "53f35c88-3ae3-44ff-be27-110a7614fa5d", "event_id": "95b45338-c836-4e3e-bbf7-d4518c9983d2", "parent_event_id": "53f35c88-3ae3-44ff-be27-110a7614fa5d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 785, "start_time": "2024-06-20T03:55:09.812Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_155", "variant_name": null}, {"function_name": "Fn_simple_155", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_155\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"present_value\":5000,\"annual_interest_rate\":0.05,\"years\":10,\"meta\":\"Value\",\"compounds_per_year\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_155_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the future value of an investment based on the present value, interest rate, and time period.\n  function_name: 'calculate_future_value' or null,\n  // The present value or principal amount.\n  present_value: int,\n  // The annual interest rate in decimal form. Example, 5% is 0.05.\n  annual_interest_rate: float,\n  // The time period in years for which the investment is made.\n  years: int,\n  // The number of times the interest is compounded per year. Default is 1 (annual compounding).\n  compounds_per_year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Future Value of a $5000 investment made today for a term of 10 years at an annual interest rate of 5%"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_future_value\",\n  \"present_value\": 5000,\n  \"annual_interest_rate\": 0.05,\n  \"years\": 10,\n  \"compounds_per_year\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 198, "output_tokens": 64, "total_tokens": 262, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "53f35c88-3ae3-44ff-be27-110a7614fa5d", "event_id": "53f35c88-3ae3-44ff-be27-110a7614fa5d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 151582, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_155", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "84d08218-34f1-4673-8d6e-5dfb6b3c9f13", "event_id": "163cc314-7049-472d-bd08-df55c0c8ee62", "parent_event_id": "84d08218-34f1-4673-8d6e-5dfb6b3c9f13", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 732, "start_time": "2024-06-20T03:55:10.599Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_156", "variant_name": null}, {"function_name": "Fn_simple_156", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_156\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_investment\":1000,\"interest_rate\":0.05,\"duration\":2,\"meta\":\"Value\",\"compounded\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_156_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the future value of an investment given the initial amount, interest rate, and investment duration.\n  function_name: 'calculate_future_value' or null,\n  // The initial investment amount.\n  initial_investment: int,\n  // The annual interest rate in decimal form.\n  interest_rate: float,\n  // The investment duration in years.\n  duration: int,\n  // The number of times the interest is compounded per year. Default is 1 (annual compounding).\n  compounded: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the future value of my investment of $1000 with an annual interest rate of 5% over 2 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_future_value\",\n  \"initial_investment\": 1000,\n  \"interest_rate\": 0.05,\n  \"duration\": 2,\n  \"compounded\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 69, "total_tokens": 237, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "84d08218-34f1-4673-8d6e-5dfb6b3c9f13", "event_id": "84d08218-34f1-4673-8d6e-5dfb6b3c9f13", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 152316, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_156", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7d505948-aa85-49cb-9878-e7b71eff63ba", "event_id": "0f4ce2ce-45b9-44d1-ba46-c39250e375d8", "parent_event_id": "7d505948-aa85-49cb-9878-e7b71eff63ba", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 610, "start_time": "2024-06-20T03:55:11.333Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_157", "variant_name": null}, {"function_name": "Fn_simple_157", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_157\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":\"CA123456\",\"county\":\"San Diego\",\"meta\":\"Value\",\"details\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_157_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve detailed felony crime records using a specific case number and location.\n  function_name: 'crime_record.get_record' or null,\n  // The case number related to the crime.\n  case_number: string,\n  // The county in which the crime occurred.\n  county: string,\n  // To get a detailed report, set as true. Defaults to false.\n  details: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Look up details of a felony crime record for case number CA123456 in San Diego County"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"crime_record.get_record\",\n  \"case_number\": \"CA123456\",\n  \"county\": \"San Diego\",\n  \"details\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 59, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7d505948-aa85-49cb-9878-e7b71eff63ba", "event_id": "7d505948-aa85-49cb-9878-e7b71eff63ba", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 152927, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_157", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b77ca621-9c9e-4c39-9870-f5ad780f34ce", "event_id": "5a841d0d-a6f7-4b3c-9336-ffcc1bdd45b4", "parent_event_id": "b77ca621-9c9e-4c39-9870-f5ad780f34ce", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 804, "start_time": "2024-06-20T03:55:11.944Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_158", "variant_name": null}, {"function_name": "Fn_simple_158", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_158\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"full_name\":\"John Doe\",\"birth_date\":\"01-01-1980\",\"meta\":\"Value\",\"state\":\"CA\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_158_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // This function checks if an individual has any prior felony convictions based on their full name and birth date.\n  function_name: 'criminal_history.check_felonies' or null,\n  // The full name of the individual.\n  full_name: string,\n  // The birth date of the individual. Must be in MM-DD-YYYY format.\n  birth_date: string,\n  // The state to search the criminal record in. Default to 'None', which the function will search across all states.\n  state: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out if an individual John Doe with a birthday 01-01-1980 has any prior felony convictions in California."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the provided schema:\n\n{\n  \"function_name\": \"criminal_history.check_felonies\",\n  \"full_name\": \"John Doe\",\n  \"birth_date\": \"01-01-1980\",\n  \"state\": \"CA\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 175, "output_tokens": 69, "total_tokens": 244, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b77ca621-9c9e-4c39-9870-f5ad780f34ce", "event_id": "b77ca621-9c9e-4c39-9870-f5ad780f34ce", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 153732, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_158", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7cb2c4b7-91d3-46c3-8cd6-284f2e4f79f7", "event_id": "5a1520e3-385a-4d14-ad0b-5579cbafb7d4", "parent_event_id": "7cb2c4b7-91d3-46c3-8cd6-284f2e4f79f7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 922, "start_time": "2024-06-20T03:55:12.750Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_159", "variant_name": null}, {"function_name": "Fn_simple_159", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_159\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Mr. X\",\"location\":\"New York, NY\",\"from_year\":2012,\"to_year\":2015,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_159_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the criminal records of a specific person in a specific area during a certain time period.\n  function_name: 'get_criminal_records' or null,\n  // The name of the person.\n  name: string,\n  // The city and state, e.g. New York, NY\n  location: string,\n  // The start year of the time frame.\n  from_year: int,\n  // The end year of the time frame.\n  to_year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the information of criminal cases of Mr. X in New York between 2012 and 2015."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_criminal_records\",\n  \"name\": \"Mr. X\",\n  \"location\": \"New York, NY\",\n  \"from_year\": 2012,\n  \"to_year\": 2015\n}", "metadata": {"logprobs": null, "prompt_tokens": 155, "output_tokens": 72, "total_tokens": 227, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7cb2c4b7-91d3-46c3-8cd6-284f2e4f79f7", "event_id": "7cb2c4b7-91d3-46c3-8cd6-284f2e4f79f7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 154655, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_159", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dad4d164-8b36-4736-8dda-eb42320955b2", "event_id": "53c5bc0b-fd7e-4426-8ba3-df6085c6e199", "parent_event_id": "dad4d164-8b36-4736-8dda-eb42320955b2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:55:13.672Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_160", "variant_name": null}, {"function_name": "Fn_simple_160", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_160\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"act_name\":\"Criminal Law Amendment Act\",\"amendment_year\":2013,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_160_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the details of a particular legal act based on its name and year of amendment if any.\n  function_name: 'get_act_details' or null,\n  // The name of the act.\n  act_name: string,\n  // Year of amendment if any. If not provided, the latest amendment year will be considered.\n  amendment_year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me the details of Criminal Law Amendment Act of 2013."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_act_details\",\n  \"act_name\": \"Criminal Law Amendment Act\",\n  \"amendment_year\": 2013\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 53, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dad4d164-8b36-4736-8dda-eb42320955b2", "event_id": "dad4d164-8b36-4736-8dda-eb42320955b2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 155372, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_160", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "565e2723-5c2b-42f6-8f1f-829edb45d00b", "event_id": "77f1ff45-d998-4696-875e-a26ca96feb95", "parent_event_id": "565e2723-5c2b-42f6-8f1f-829edb45d00b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:55:14.389Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_161", "variant_name": null}, {"function_name": "Fn_simple_161", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_161\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"docket\":\"2022/AL2562\",\"court\":\"California\",\"info_type\":\"victim\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_161_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve case details using a specific case docket number and court location.\n  function_name: 'get_case_info' or null,\n  // Docket number for the specific court case.\n  docket: string,\n  // Court in which the case was heard.\n  court: string,\n  // Specify the information type needed for the case. i.e., victim, accused, verdict etc.\n  info_type: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the victim in the case docket numbered 2022/AL2562 in California?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_case_info\",\n  \"docket\": \"2022/AL2562\",\n  \"court\": \"California\",\n  \"info_type\": \"victim\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 52, "total_tokens": 195, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "565e2723-5c2b-42f6-8f1f-829edb45d00b", "event_id": "565e2723-5c2b-42f6-8f1f-829edb45d00b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 156087, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_161", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f0f2a832-1149-4a1f-aaa3-1595946a1dd7", "event_id": "e5a4643b-bb65-4b0a-8c8a-2edaf16a4771", "parent_event_id": "f0f2a832-1149-4a1f-aaa3-1595946a1dd7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:55:15.105Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_162", "variant_name": null}, {"function_name": "Fn_simple_162", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_162\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"jurisdiction\":\"California\",\"crime\":\"theft\",\"meta\":\"Value\",\"detail_level\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_162_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Look up the criminal statutes in a specific jurisdiction to find possible punishments for a specific crime.\n  function_name: 'crime_statute_lookup' or null,\n  // The jurisdiction to search in, usually a state or country.\n  jurisdiction: string,\n  // The crime to search for.\n  crime: string,\n  // How detailed of a report to return. Optional, default is 'basic'.\n  detail_level: 'basic' or 'detailed' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the possible punishments for the crime of theft in California in detail."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"crime_statute_lookup\",\n  \"jurisdiction\": \"California\",\n  \"crime\": \"theft\",\n  \"detail_level\": \"detailed\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 147, "output_tokens": 56, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f0f2a832-1149-4a1f-aaa3-1595946a1dd7", "event_id": "f0f2a832-1149-4a1f-aaa3-1595946a1dd7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 156805, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_162", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6d91ef64-dda3-408d-b022-cfb1c5fb64f1", "event_id": "d77b1a86-2842-4af3-b0ce-2532bbf4ea07", "parent_event_id": "6d91ef64-dda3-408d-b022-cfb1c5fb64f1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:15.822Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_163", "variant_name": null}, {"function_name": "Fn_simple_163", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_163\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"parties\":[\"John\",\"Alice\"],\"contract_type\":\"Rental Agreement\",\"location\":\"California\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_163_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generates a customized law contract given involved parties, contract type and location.\n  function_name: 'generate_law_contract' or null,\n  // Parties involved in the contract.\n  parties: string[],\n  // Type of the contract.\n  contract_type: string,\n  // Location where the contract will be in effect.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a customized law contract between John and Alice for rental agreement in California."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"generate_law_contract\",\n  \"parties\": [\"John\", \"Alice\"],\n  \"contract_type\": \"Rental Agreement\",\n  \"location\": \"California\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 121, "output_tokens": 61, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6d91ef64-dda3-408d-b022-cfb1c5fb64f1", "event_id": "6d91ef64-dda3-408d-b022-cfb1c5fb64f1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 157624, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_163", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2af597ad-e729-4133-a72f-895635319678", "event_id": "98d5fe2f-6027-44ab-ba61-31a8cdde3c0f", "parent_event_id": "2af597ad-e729-4133-a72f-895635319678", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 819, "start_time": "2024-06-20T03:55:16.641Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_164", "variant_name": null}, {"function_name": "Fn_simple_164", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_164\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"address\":\"123 main street\",\"parcel_number\":\"1234567890\",\"county\":\"Santa Clara\",\"meta\":\"Value\",\"include_owner\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_164_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch property records based on location, parcel number and county.\n  function_name: 'property_records.get' or null,\n  // Address of the property.\n  address: string,\n  // Parcel number of the property.\n  parcel_number: string,\n  // County where the property is located.\n  county: string,\n  // Include owner's name in the property record. Default is false.\n  include_owner: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Provide me with the property records of my house located at 123 main street, with parcel number 1234567890 in Santa Clara county. Include owners information in the response."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the requested property record information:\n\n{\n  \"function_name\": \"property_records.get\",\n  \"address\": \"123 main street\",\n  \"parcel_number\": \"1234567890\",\n  \"county\": \"Santa Clara\",\n  \"include_owner\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 71, "total_tokens": 239, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2af597ad-e729-4133-a72f-895635319678", "event_id": "2af597ad-e729-4133-a72f-895635319678", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 158444, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_164", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9eb68e1e-0eef-4144-8a45-0ac2597dfbce", "event_id": "91af1c79-84d6-4b74-bc15-55e785cc0f27", "parent_event_id": "9eb68e1e-0eef-4144-8a45-0ac2597dfbce", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 919, "start_time": "2024-06-20T03:55:17.461Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_165", "variant_name": null}, {"function_name": "Fn_simple_165", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_165\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"San Francisco\",\"state\":\"California\",\"meta\":\"Value\",\"type\":\"violent\",\"year\":2020}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_165_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the official crime rate of a city.\n  function_name: 'get_crime_rate' or null,\n  // The name of the city.\n  city: string,\n  // The state where the city is located.\n  state: string,\n  // Optional. The type of crime. Default is 'violent'\n  type: string or null,\n  // Optional. The year for the crime rate data. Default is year 2001.\n  year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Provide me the official crime rate of violent crime in San Francisco in 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_crime_rate\",\n  \"city\": \"San Francisco\",\n  \"state\": \"California\",\n  \"type\": \"violent\",\n  \"year\": 2020\n}", "metadata": {"logprobs": null, "prompt_tokens": 150, "output_tokens": 63, "total_tokens": 213, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9eb68e1e-0eef-4144-8a45-0ac2597dfbce", "event_id": "9eb68e1e-0eef-4144-8a45-0ac2597dfbce", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 159364, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_165", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "27473847-c76a-4757-8325-a222e4e21502", "event_id": "ce4062a1-13f8-4c27-8de7-228c7423e04b", "parent_event_id": "27473847-c76a-4757-8325-a222e4e21502", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 663, "start_time": "2024-06-20T03:55:18.382Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_166", "variant_name": null}, {"function_name": "Fn_simple_166", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_166\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"year\":2020,\"crime_type\":\"theft\",\"location\":\"Los Angeles, California\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_166_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve civil cases based on given parameters, including year, crime type, and location.\n  function_name: 'civil_cases.retrieve' or null,\n  // Year of the cases\n  year: int,\n  // Type of the crime.\n  crime_type: string,\n  // Location of the case in the format of city name.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve cases from 2020 about theft crimes in Los Angeles, California"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"civil_cases.retrieve\",\n  \"year\": 2020,\n  \"crime_type\": \"theft\",\n  \"location\": \"Los Angeles, California\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 121, "output_tokens": 50, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "27473847-c76a-4757-8325-a222e4e21502", "event_id": "27473847-c76a-4757-8325-a222e4e21502", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 160029, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_166", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9ce7fa84-8e8a-4c58-8461-029a5a907343", "event_id": "0f1184f4-1486-4dd8-aca0-9992083612b9", "parent_event_id": "9ce7fa84-8e8a-4c58-8461-029a5a907343", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 667, "start_time": "2024-06-20T03:55:19.046Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_167", "variant_name": null}, {"function_name": "Fn_simple_167", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_167\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"Chicago, IL\",\"specialty\":[\"Value1\"],\"fee\":400,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_167_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby lawyers based on specific criteria like specialty, fee per hour and city.\n  function_name: 'lawyer.find_nearby' or null,\n  // The city and state, e.g. Chicago, IL.\n  city: string,\n  // Specialization of the lawyer.\n  specialty: [\n    'Civil' or 'Divorce' or 'Immigration' or 'Business' or 'Criminal'\n  ],\n  // Hourly fee charged by lawyer\n  fee: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a lawyer specializing in divorce cases and charge fee less than 400 dollars per hour in Chicago."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"lawyer.find_nearby\",\n  \"city\": \"Chicago, IL\",\n  \"specialty\": [\n    \"Divorce\"\n  ],\n  \"fee\": 400\n}", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 52, "total_tokens": 211, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9ce7fa84-8e8a-4c58-8461-029a5a907343", "event_id": "9ce7fa84-8e8a-4c58-8461-029a5a907343", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 160697, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_167", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "50b01ad6-4eb2-4436-b922-914790214616", "event_id": "55bbd7ce-8591-4864-9b05-0c00b47cc0fc", "parent_event_id": "50b01ad6-4eb2-4436-b922-914790214616", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T03:55:19.714Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_168", "variant_name": null}, {"function_name": "Fn_simple_168", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_168\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_title\":\"Roe v. Wade\",\"include_dissent\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_168_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the details of a Supreme Court case given its title.\n  function_name: 'law.civil.get_case_details' or null,\n  // Title of the Supreme Court case.\n  case_title: string,\n  // If true, the output will include details of the dissenting opinion.\n  include_dissent: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve the details of a Supreme Court case titled 'Roe v. Wade'.Include dissent information."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"law.civil.get_case_details\",\n  \"case_title\": \"Roe v. Wade\",\n  \"include_dissent\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 48, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "50b01ad6-4eb2-4436-b922-914790214616", "event_id": "50b01ad6-4eb2-4436-b922-914790214616", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 161619, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_168", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9298b9e0-b62b-4c3a-8a39-75ae93ed8abf", "event_id": "c31da123-7b3b-4f7c-ab72-293cecbceaea", "parent_event_id": "9298b9e0-b62b-4c3a-8a39-75ae93ed8abf", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T03:55:20.637Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_169", "variant_name": null}, {"function_name": "Fn_simple_169", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_169\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Google\",\"start_date\":\"01-01-2021\",\"location\":\"California\",\"meta\":\"Value\",\"status\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_169_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for lawsuits related to a specific company within a specific date range and location.\n  function_name: 'lawsuit_search' or null,\n  // The company related to the lawsuit.\n  company: string,\n  // Start of the date range for when the lawsuit was filed in the format of MM-DD-YYY.\n  start_date: string,\n  // Location where the lawsuit was filed in the format of full state name.\n  location: string,\n  // The status of the lawsuit. Default is 'ongoing'.\n  status: 'ongoing' or 'settled' or 'dismissed' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for ongoing lawsuits related to the company 'Google' filed after January 1, 2021 in California."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"lawsuit_search\",\n  \"company\": \"Google\",\n  \"start_date\": \"01-01-2021\",\n  \"location\": \"California\",\n  \"status\": \"ongoing\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 190, "output_tokens": 67, "total_tokens": 257, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9298b9e0-b62b-4c3a-8a39-75ae93ed8abf", "event_id": "9298b9e0-b62b-4c3a-8a39-75ae93ed8abf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 162437, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_169", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b64b1aa7-e194-4a9e-b1ac-c178855ac97a", "event_id": "4c948e3d-2049-46fa-a06b-460a6e30f96e", "parent_event_id": "b64b1aa7-e194-4a9e-b1ac-c178855ac97a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 649, "start_time": "2024-06-20T03:55:21.454Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_170", "variant_name": null}, {"function_name": "Fn_simple_170", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_170\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"docket_number\":\"123456\",\"location\":\"Texas\",\"meta\":\"Value\",\"full_text\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_170_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves details about a court case using its docket number and location.\n  function_name: 'court_case.search' or null,\n  // The docket number for the case.\n  docket_number: string,\n  // The location where the case is registered, in the format: state, e.g., Texas\n  location: string,\n  // Option to return the full text of the case ruling. (default: false)\n  full_text: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the details of the court case identified by docket number 123456 in Texas. Don't return full text"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"court_case.search\",\n  \"docket_number\": \"123456\",\n  \"location\": \"Texas\",\n  \"full_text\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 155, "output_tokens": 48, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b64b1aa7-e194-4a9e-b1ac-c178855ac97a", "event_id": "b64b1aa7-e194-4a9e-b1ac-c178855ac97a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 163087, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_170", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a6e9bd22-7ebe-4a5a-bdfc-419b4f57ca47", "event_id": "78e1ce47-91fb-484c-b5f7-fcf17b8075d5", "parent_event_id": "a6e9bd22-7ebe-4a5a-bdfc-419b4f57ca47", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 892, "start_time": "2024-06-20T03:55:22.105Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_171", "variant_name": null}, {"function_name": "Fn_simple_171", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_171\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"subject\":\"fraud\",\"from_year\":2010,\"to_year\":2015,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_171_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for a historical law case based on specific criteria like the subject and year.\n  function_name: 'law_case_search.find_historical' or null,\n  // The subject matter of the case, e.g., 'fraud'\n  subject: string,\n  // The start year for the range of the case. The case should happen after this year.\n  from_year: int,\n  // The end year for the range of the case. The case should happen before this year.\n  to_year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a historical law case about fraud from 2010 to 2015."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"law_case_search.find_historical\",\n  \"subject\": \"fraud\",\n  \"from_year\": 2010,\n  \"to_year\": 2015\n}", "metadata": {"logprobs": null, "prompt_tokens": 157, "output_tokens": 63, "total_tokens": 220, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a6e9bd22-7ebe-4a5a-bdfc-419b4f57ca47", "event_id": "a6e9bd22-7ebe-4a5a-bdfc-419b4f57ca47", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 163980, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_171", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f87deca1-f33e-4bf8-a9a8-7b39b377652a", "event_id": "616204a7-6cc5-46c1-96e9-df44017f5437", "parent_event_id": "f87deca1-f33e-4bf8-a9a8-7b39b377652a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 586, "start_time": "2024-06-20T03:55:22.998Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_172", "variant_name": null}, {"function_name": "Fn_simple_172", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_172\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":43403,\"court\":\"New York\",\"year\":2018,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_172_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch details of a specific law case based on case number, year and court.\n  function_name: 'fetch_law_case_details' or null,\n  // The specific number of the law case.\n  case_number: int,\n  // The city name where the court takes place\n  court: string,\n  // The year in which the law case took place.\n  year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch details of a law case with number 43403 in New York court for year 2018."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"fetch_law_case_details\",\n  \"case_number\": 43403,\n  \"court\": \"New York\",\n  \"year\": 2018\n}", "metadata": {"logprobs": null, "prompt_tokens": 135, "output_tokens": 50, "total_tokens": 185, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f87deca1-f33e-4bf8-a9a8-7b39b377652a", "event_id": "f87deca1-f33e-4bf8-a9a8-7b39b377652a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 164568, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_172", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "11a5a19f-06f5-4492-b7bc-282735c63cb9", "event_id": "dd45b8b3-ee61-47d6-8ddd-9ba1cfd82ff5", "parent_event_id": "11a5a19f-06f5-4492-b7bc-282735c63cb9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1457, "start_time": "2024-06-20T03:55:23.585Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_173", "variant_name": null}, {"function_name": "Fn_simple_173", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_173\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_id\":\"R vs Adams\",\"details\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_173_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch detailed legal case information from database.\n  function_name: 'legal_case.fetch' or null,\n  // The ID of the legal case.\n  case_id: string,\n  // True if need the detail info. \n  details: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: How to obtain the detailed case information of the 'R vs Adams' legal case?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To obtain the detailed case information of the 'R vs Adams' legal case, the request would look like this:\n\n{\n  \"function_name\": \"legal_case.fetch\",\n  \"case_id\": \"R vs Adams\",\n  \"details\": true\n}\n\nThis request would call the `legal_case.fetch` function, passing in the `\"R vs Adams\"` case ID and setting the `details` flag to `true` to indicate that the detailed case information is needed.\n\nThe response from this request would include all the relevant details about the 'R vs Adams' legal case, such as the parties involved, the legal issues, the court proceedings, the verdict, and any other important information about the case.", "metadata": {"logprobs": null, "prompt_tokens": 100, "output_tokens": 160, "total_tokens": 260, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "11a5a19f-06f5-4492-b7bc-282735c63cb9", "event_id": "11a5a19f-06f5-4492-b7bc-282735c63cb9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 166026, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_173", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "65dcd363-2054-4f45-b892-d3f747cccde3", "event_id": "b9ef54e5-b6c4-45a9-a19a-ffe0e4baea47", "parent_event_id": "65dcd363-2054-4f45-b892-d3f747cccde3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 710, "start_time": "2024-06-20T03:55:25.043Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_174", "variant_name": null}, {"function_name": "Fn_simple_174", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_174\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"topic\":\"land disputes\",\"year_range\":[2015,2021],\"location\":\"New York\",\"meta\":\"Value\",\"judicial_system\":\"state\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_174_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search and retrieve law cases based on the topic, timeline, and location.\n  function_name: 'law_case_search' or null,\n  // The subject matter of the case.\n  topic: string,\n  // The start and end year for searching cases.\n  year_range: int[],\n  // The location where the case is being heard.\n  location: string,\n  // The specific judicial system in which to search (e.g. 'federal', 'state'). (default: all)\n  judicial_system: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find state law cases related to land disputes in the past 5 years from 2015 to 2021 in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"law_case_search\",\n  \"topic\": \"land disputes\",\n  \"year_range\": [2015, 2021],\n  \"location\": \"New York\",\n  \"judicial_system\": \"state\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 177, "output_tokens": 73, "total_tokens": 250, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "65dcd363-2054-4f45-b892-d3f747cccde3", "event_id": "65dcd363-2054-4f45-b892-d3f747cccde3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 166737, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_174", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "78a790ea-545f-4fa4-a3d8-ab9ef1e7c6ad", "event_id": "5b438c66-cf88-4a81-a1f3-f0452938e0ff", "parent_event_id": "78a790ea-545f-4fa4-a3d8-ab9ef1e7c6ad", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:25.754Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_175", "variant_name": null}, {"function_name": "Fn_simple_175", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_175\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"field_of_law\":\"constitutional law\",\"top_number\":10,\"meta\":\"Value\",\"country\":\"China\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_175_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a list of the most influential or landmark cases in a specific field of law.\n  function_name: 'get_top_cases' or null,\n  // The specific field of law e.g., constitutional law, criminal law, etc.\n  field_of_law: string,\n  // The number of top cases to retrieve.\n  top_number: int,\n  // The country where the law cases should be retrieved from. Default is United States of America.\n  country: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the top 10 landmark cases in constitutional law in China."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_top_cases\",\n  \"field_of_law\": \"constitutional law\",\n  \"top_number\": 10,\n  \"country\": \"China\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 149, "output_tokens": 61, "total_tokens": 210, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "78a790ea-545f-4fa4-a3d8-ab9ef1e7c6ad", "event_id": "78a790ea-545f-4fa4-a3d8-ab9ef1e7c6ad", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 167557, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_175", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "02de829c-7ea6-40ba-810f-90272cf04369", "event_id": "c445ce3c-12ba-45d4-a822-0bd401323dc8", "parent_event_id": "02de829c-7ea6-40ba-810f-90272cf04369", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 923, "start_time": "2024-06-20T03:55:26.574Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_176", "variant_name": null}, {"function_name": "Fn_simple_176", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_176\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"John Doe\",\"law_type\":\"Bankruptcy\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_176_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve months of experience of a Lawyer on handling certain type of law cases.\n  function_name: 'lawyer.get_experience' or null,\n  // The full name of the Lawyer.\n  name: string,\n  // The type of law case. eg. Bankruptcy\n  law_type: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many months of experience a Lawyer John Doe has on handling Bankruptcy cases."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To retrieve the number of months of experience a Lawyer John Doe has on handling Bankruptcy cases, the answer would be in the following schema:\n\n{\n  \"function_name\": \"lawyer.get_experience\",\n  \"name\": \"John Doe\",\n  \"law_type\": \"Bankruptcy\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 111, "output_tokens": 72, "total_tokens": 183, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "02de829c-7ea6-40ba-810f-90272cf04369", "event_id": "02de829c-7ea6-40ba-810f-90272cf04369", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 168481, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_176", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9e377b7e-2f8a-48d1-ba82-b27d81b17dba", "event_id": "1aaa2ec3-95f8-45cd-b7e0-33bdca076136", "parent_event_id": "9e377b7e-2f8a-48d1-ba82-b27d81b17dba", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T03:55:27.498Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_177", "variant_name": null}, {"function_name": "Fn_simple_177", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_177\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Apple Inc.\",\"year\":2010,\"meta\":\"Value\",\"case_type\":\"Patent\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_177_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find details of lawsuits involving a specific company from a given year.\n  function_name: 'lawsuit_details.find' or null,\n  // Name of the company.\n  company_name: string,\n  // Year of the lawsuit.\n  year: int,\n  // Type of the lawsuit, e.g., 'IPR', 'Patent', 'Commercial', etc. Default is 'all'.\n  case_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find details of patent lawsuits involving the company 'Apple Inc.' from the year 2010."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"lawsuit_details.find\",\n  \"company_name\": \"Apple Inc.\",\n  \"year\": 2010,\n  \"case_type\": \"Patent\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 60, "total_tokens": 208, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9e377b7e-2f8a-48d1-ba82-b27d81b17dba", "event_id": "9e377b7e-2f8a-48d1-ba82-b27d81b17dba", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 169298, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_177", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "48c93408-1a46-4cf6-ab1d-5754ddb41da4", "event_id": "0551602f-a166-488c-974c-687dfa3af376", "parent_event_id": "48c93408-1a46-4cf6-ab1d-5754ddb41da4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:55:28.315Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_178", "variant_name": null}, {"function_name": "Fn_simple_178", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_178\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Facebook\",\"year\":2018,\"meta\":\"Value\",\"status\":\"Value2\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_178_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve all lawsuit cases related to a specific company during a particular year.\n  function_name: 'get_lawsuit_cases' or null,\n  // The name of the company.\n  company_name: string,\n  // The specific year to search for lawsuit cases.\n  year: int,\n  // The status of the lawsuit cases to retrieve. If not specified, defaults to 'all'.\n  status: 'open' or 'closed' or 'all' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find all Patent lawsuit cases of Facebook in 2018."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_lawsuit_cases\",\n  \"company_name\": \"Facebook\",\n  \"year\": 2018,\n  \"status\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 47, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "48c93408-1a46-4cf6-ab1d-5754ddb41da4", "event_id": "48c93408-1a46-4cf6-ab1d-5754ddb41da4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 169911, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_178", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "67170c1e-fbe6-4d0d-8fb5-baecbae50d92", "event_id": "4ed994cf-ac72-4c74-9dcb-6454207f7dd2", "parent_event_id": "67170c1e-fbe6-4d0d-8fb5-baecbae50d92", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 957, "start_time": "2024-06-20T03:55:28.929Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_179", "variant_name": null}, {"function_name": "Fn_simple_179", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_179\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":\"LAX2019080202\",\"court_location\":\"Los Angeles\",\"additional_details\":[\"Value0\",\"Value1\",\"Value2\",\"Value3\",\"Value4\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_179_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the detailed information about a lawsuit based on its case number and the court location.\n  function_name: 'get_lawsuit_details' or null,\n  // The case number of the lawsuit.\n  case_number: string,\n  // The location of the court where the case is filed.\n  court_location: string,\n  // Optional. Array containing additional details to be fetched. Default is all.\n  additional_details: [\n    'attorneys' or 'plaintiffs' or 'defendants' or 'charges' or 'court_updates'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find details about lawsuit case numbered 'LAX2019080202' in the Los Angeles court."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_lawsuit_details\",\n  \"case_number\": \"LAX2019080202\",\n  \"court_location\": \"Los Angeles\",\n  \"additional_details\": [\n    \"attorneys\",\n    \"plaintiffs\",\n    \"defendants\",\n    \"charges\",\n    \"court_updates\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 173, "output_tokens": 95, "total_tokens": 268, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "67170c1e-fbe6-4d0d-8fb5-baecbae50d92", "event_id": "67170c1e-fbe6-4d0d-8fb5-baecbae50d92", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 170870, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_179", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c5fa6c33-2067-4720-a90e-695eda8a81cc", "event_id": "d9e10377-95e7-45bc-b5a8-61d5bfe7211c", "parent_event_id": "c5fa6c33-2067-4720-a90e-695eda8a81cc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 781, "start_time": "2024-06-20T03:55:29.887Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_180", "variant_name": null}, {"function_name": "Fn_simple_180", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_180\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company1\":\"Apple\",\"company2\":\"Samsung\",\"meta\":\"Value\",\"country\":\"USA\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_180_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the latest court case between two companies.\n  function_name: 'find_latest_court_case' or null,\n  // The name of the first company.\n  company1: string,\n  // The name of the second company.\n  company2: string,\n  // The country in which the court case is located. (default: USA)\n  country: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the latest court case between Apple and Samsung occured in USA."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"find_latest_court_case\",\n  \"company1\": \"Apple\",\n  \"company2\": \"Samsung\",\n  \"country\": \"USA\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 58, "total_tokens": 181, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c5fa6c33-2067-4720-a90e-695eda8a81cc", "event_id": "c5fa6c33-2067-4720-a90e-695eda8a81cc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 171652, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_180", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7b5de90e-81ca-4d14-bf22-4ef3dfb08919", "event_id": "ff362d89-9f68-4194-a7cc-e163b58972d1", "parent_event_id": "7b5de90e-81ca-4d14-bf22-4ef3dfb08919", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:30.670Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_181", "variant_name": null}, {"function_name": "Fn_simple_181", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_181\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Google\",\"location\":\"California\",\"year\":2020,\"meta\":\"Value\",\"case_type\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_181_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for lawsuits against a specific company within a specific time and location.\n  function_name: 'lawsuits_search' or null,\n  // The name of the company.\n  company_name: string,\n  // The location where the lawsuit was filed.\n  location: string,\n  // The year when the lawsuit was filed.\n  year: int,\n  // The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. Default is 'all'.\n  case_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the lawsuits filed against the company Google in California in the year 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"lawsuits_search\",\n  \"company_name\": \"Google\",\n  \"location\": \"California\",\n  \"year\": 2020,\n  \"case_type\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 67, "total_tokens": 235, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7b5de90e-81ca-4d14-bf22-4ef3dfb08919", "event_id": "7b5de90e-81ca-4d14-bf22-4ef3dfb08919", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 172472, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_181", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "396ee757-753e-4a22-8768-8635b953285b", "event_id": "0d163fa7-c5a4-4a36-94ae-6d4647f7d774", "parent_event_id": "396ee757-753e-4a22-8768-8635b953285b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:31.489Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_182", "variant_name": null}, {"function_name": "Fn_simple_182", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_182\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":\"123456-ABC\",\"court_location\":\"Los Angeles\",\"meta\":\"Value\",\"with_verdict\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_182_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve details of a lawsuit based on its case number and court location.\n  function_name: 'get_lawsuit_details' or null,\n  // Case number of the lawsuit.\n  case_number: string,\n  // The location of the court where the lawsuit was filed.\n  court_location: string,\n  // Flag to include verdict details if available. Default is False\n  with_verdict: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get details of a lawsuit with case number '123456-ABC' filed in Los Angeles court with verdict"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_lawsuit_details\",\n  \"case_number\": \"123456-ABC\",\n  \"court_location\": \"Los Angeles\",\n  \"with_verdict\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 52, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "396ee757-753e-4a22-8768-8635b953285b", "event_id": "396ee757-753e-4a22-8768-8635b953285b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 173291, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_182", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cd47b8cf-4d59-41c3-a39a-feac2e257b5b", "event_id": "7a571645-68f3-488c-b1c6-4d1b914e66f5", "parent_event_id": "cd47b8cf-4d59-41c3-a39a-feac2e257b5b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1125, "start_time": "2024-06-20T03:55:32.308Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_183", "variant_name": null}, {"function_name": "Fn_simple_183", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_183\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":\"XYZ123\",\"meta\":\"Value\",\"year\":null,\"location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_183_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves details of a lawsuit given a case number\n  function_name: 'lawsuit_info' or null,\n  // The unique identifier of the lawsuit case\n  case_number: string,\n  // The year in which the lawsuit case was initiated. Default is latest year if not specified.\n  year: int or null,\n  // The location or court jurisdiction where the case was filed. Default is 'all'.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve all the lawsuit details for case number XYZ123"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"lawsuit_info\",\n  \"case_number\": \"XYZ123\",\n  \"year\": null,\n  \"location\": null\n}\n\nThis indicates that the function \"lawsuit_info\" should be called to retrieve the details for the lawsuit case with the number \"XYZ123\". The year and location parameters are not specified, so the default values will be used.", "metadata": {"logprobs": null, "prompt_tokens": 135, "output_tokens": 102, "total_tokens": 237, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cd47b8cf-4d59-41c3-a39a-feac2e257b5b", "event_id": "cd47b8cf-4d59-41c3-a39a-feac2e257b5b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 174417, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_183", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c72d8c4d-6764-47d6-bc0e-1fb1d5928a26", "event_id": "6f8c86ba-bf98-419f-902b-b484dae397e8", "parent_event_id": "c72d8c4d-6764-47d6-bc0e-1fb1d5928a26", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:33.435Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_184", "variant_name": null}, {"function_name": "Fn_simple_184", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_184\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"entity\":\"Apple\",\"county\":\"Santa Clara County\",\"meta\":\"Value\",\"state\":\"California\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_184_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve all lawsuits involving a particular entity from specified jurisdiction.\n  function_name: 'lawsuit_search' or null,\n  // The entity involved in lawsuits.\n  entity: string,\n  // The jurisdiction for the lawsuit search for example Alameda county.\n  county: string,\n  // The state for the lawsuit search. Default is California.\n  state: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for current lawsuits filed against Apple in Santa Clara County."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"lawsuit_search\",\n  \"entity\": \"Apple\",\n  \"county\": \"Santa Clara County\",\n  \"state\": \"California\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 125, "output_tokens": 54, "total_tokens": 179, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c72d8c4d-6764-47d6-bc0e-1fb1d5928a26", "event_id": "c72d8c4d-6764-47d6-bc0e-1fb1d5928a26", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 175236, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_184", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d6c37042-8ab0-46e0-850e-9703f464f10b", "event_id": "b63e1520-84d2-4372-bbf0-db6578c6a51c", "parent_event_id": "d6c37042-8ab0-46e0-850e-9703f464f10b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T03:55:34.254Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_185", "variant_name": null}, {"function_name": "Fn_simple_185", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_185\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_id\":1234,\"closed_status\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_185_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Verify the details of a lawsuit case and check its status using case ID.\n  function_name: 'lawsuit.check_case' or null,\n  // The identification number of the lawsuit case.\n  case_id: int,\n  // The status of the lawsuit case to be verified.\n  closed_status: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: I need the details of the lawsuit case with case ID of 1234 and verify if it's already closed."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"lawsuit.check_case\",\n  \"case_id\": 1234,\n  \"closed_status\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 49, "total_tokens": 167, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d6c37042-8ab0-46e0-850e-9703f464f10b", "event_id": "d6c37042-8ab0-46e0-850e-9703f464f10b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 175955, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_185", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fdeeb4aa-f777-40c6-869d-4627f699dc6d", "event_id": "30bad0eb-a8eb-41d3-916c-2cca1447018e", "parent_event_id": "fdeeb4aa-f777-40c6-869d-4627f699dc6d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:55:34.972Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_186", "variant_name": null}, {"function_name": "Fn_simple_186", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_186\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"duration\":72,\"meta\":\"Value\",\"include_precipitation\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_186_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a detailed weather forecast for a specific location and duration including optional precipitation details.\n  function_name: 'detailed_weather_forecast' or null,\n  // The city name that you want to get the weather for.\n  location: string,\n  // Duration in hours for the detailed forecast.\n  duration: int,\n  // Whether to include precipitation data in the forecast. Default is false.\n  include_precipitation: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What will be the weather in New York in the next 72 hours including the precipitation?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"detailed_weather_forecast\",\n  \"location\": \"New York\",\n  \"duration\": 72,\n  \"include_precipitation\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 55, "total_tokens": 193, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fdeeb4aa-f777-40c6-869d-4627f699dc6d", "event_id": "fdeeb4aa-f777-40c6-869d-4627f699dc6d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 176671, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_186", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "96656652-ff58-4e34-8db4-6b3ad37566fe", "event_id": "d6df0043-91b9-41a6-92c7-7b93603099d5", "parent_event_id": "96656652-ff58-4e34-8db4-6b3ad37566fe", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:55:35.688Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_187", "variant_name": null}, {"function_name": "Fn_simple_187", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_187\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"Tokyo\",\"country\":\"Japan\",\"meta\":\"Value\",\"measurement\":\"c\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_187_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the current weather conditions of a specific city including temperature and humidity.\n  function_name: 'current_weather_condition' or null,\n  // The city that you want to get the current weather conditions for.\n  city: string,\n  // The country of the city you specified.\n  country: string,\n  // You can specify which unit to display the temperature in, 'c' for Celsius, 'f' for Fahrenheit. Default is 'c'.\n  measurement: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the temperature in celsius and humidity level of Tokyo, Japan right now?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"current_weather_condition\",\n  \"city\": \"Tokyo\",\n  \"country\": \"Japan\",\n  \"measurement\": \"c\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 152, "output_tokens": 54, "total_tokens": 206, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "96656652-ff58-4e34-8db4-6b3ad37566fe", "event_id": "96656652-ff58-4e34-8db4-6b3ad37566fe", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 177387, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_187", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6e23b1d8-f6a7-4552-8ac1-5ebf9085b2ea", "event_id": "170791ac-b80f-42b3-a033-d10f576f375e", "parent_event_id": "6e23b1d8-f6a7-4552-8ac1-5ebf9085b2ea", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:55:36.404Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_188", "variant_name": null}, {"function_name": "Fn_simple_188", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_188\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Seattle, Washington\",\"meta\":\"Value\",\"include_temperature\":true,\"include_humidity\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_188_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves the current temperature and humidity for a specific location.\n  function_name: 'get_current_weather' or null,\n  // The city name to get the weather for.\n  location: string,\n  // Whether to include the temperature in the result. Default is true.\n  include_temperature: bool or null,\n  // Whether to include the humidity in the result. Default is true.\n  include_humidity: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the current temperature and humidity in Seattle, Washington?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_current_weather\",\n  \"location\": \"Seattle, Washington\",\n  \"include_temperature\": true,\n  \"include_humidity\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 57, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6e23b1d8-f6a7-4552-8ac1-5ebf9085b2ea", "event_id": "6e23b1d8-f6a7-4552-8ac1-5ebf9085b2ea", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 178104, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_188", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0900bc20-d887-46a6-85a5-8dc5d508ff36", "event_id": "29dd3458-e178-4a45-845c-691aa323f447", "parent_event_id": "0900bc20-d887-46a6-85a5-8dc5d508ff36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 593, "start_time": "2024-06-20T03:55:37.122Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_189", "variant_name": null}, {"function_name": "Fn_simple_189", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_189\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Miami, Florida\",\"days\":7,\"meta\":\"Value\",\"min_humidity\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_189_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a humidity forecast for a specific location and time frame.\n  function_name: 'weather.humidity_forecast' or null,\n  // The city that you want to get the humidity for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n  // Minimum level of humidity (in percentage) to filter the result. Default is 0.\n  min_humidity: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the humidity level in Miami, Florida in the upcoming 7 days?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"weather.humidity_forecast\",\n  \"location\": \"Miami, Florida\",\n  \"days\": 7,\n  \"min_humidity\": 0\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 57, "total_tokens": 193, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0900bc20-d887-46a6-85a5-8dc5d508ff36", "event_id": "0900bc20-d887-46a6-85a5-8dc5d508ff36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 178700, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_189", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5fbf1028-90e8-408c-9b22-208cb873e6f8", "event_id": "c36b2b54-8d6e-4b50-82d4-f5138239ccf8", "parent_event_id": "5fbf1028-90e8-408c-9b22-208cb873e6f8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 938, "start_time": "2024-06-20T03:55:37.718Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_190", "variant_name": null}, {"function_name": "Fn_simple_190", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_190\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York, USA\",\"days\":3,\"meta\":\"Value\",\"details\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_190_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a detailed weather forecast for a specific city like Boston and time frame.\n  function_name: 'weather_forecast_detailed' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n  // Provide detailed weather information or not.\n  details: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get weather information for New York, USA for the next 3 days with details."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"weather_forecast_detailed\",\n  \"location\": \"New York, USA\",\n  \"days\": 3,\n  \"details\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 127, "output_tokens": 55, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5fbf1028-90e8-408c-9b22-208cb873e6f8", "event_id": "5fbf1028-90e8-408c-9b22-208cb873e6f8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 179639, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_190", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ba1b7b1e-5ca8-41df-b4fd-74fe7099bdfd", "event_id": "dd0fae13-1f7b-4e37-9d8a-193277248ae8", "parent_event_id": "ba1b7b1e-5ca8-41df-b4fd-74fe7099bdfd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T03:55:38.657Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_191", "variant_name": null}, {"function_name": "Fn_simple_191", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_191\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"park_name\":\"Yellowstone National Park\",\"information\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_191_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the basic information such as elevation and area of a national park.\n  function_name: 'park_information' or null,\n  // The name of the national park.\n  park_name: string,\n  // The type of information you want about the park.\n  information: [\n    'Elevation' or 'Area' or 'Location' or 'Established Year'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the elevation and area of Yellowstone National Park?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"park_information\",\n  \"park_name\": \"Yellowstone National Park\",\n  \"information\": [\n    \"Elevation\",\n    \"Area\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 126, "output_tokens": 62, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ba1b7b1e-5ca8-41df-b4fd-74fe7099bdfd", "event_id": "ba1b7b1e-5ca8-41df-b4fd-74fe7099bdfd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 180561, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_191", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "80f64866-b67a-4281-8da1-8913383ffad1", "event_id": "acd42013-7b22-4cf2-938a-666bb2704443", "parent_event_id": "80f64866-b67a-4281-8da1-8913383ffad1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T03:55:39.579Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_192", "variant_name": null}, {"function_name": "Fn_simple_192", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_192\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Denver, Colorado\",\"radius\":50,\"amount\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_192_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the tallest mountains within a specified radius of a location.\n  function_name: 'locate_tallest_mountains' or null,\n  // The city from which to calculate distance.\n  location: string,\n  // The radius within which to find mountains, measured in kilometers.\n  radius: int,\n  // The number of mountains to find, listed from tallest to smallest.\n  amount: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the 5 tallest mountains within 50km of Denver, Colorado."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"locate_tallest_mountains\",\n  \"location\": \"Denver, Colorado\",\n  \"radius\": 50,\n  \"amount\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 131, "output_tokens": 46, "total_tokens": 177, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "80f64866-b67a-4281-8da1-8913383ffad1", "event_id": "80f64866-b67a-4281-8da1-8913383ffad1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 181277, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_192", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4736fb48-fe13-4b38-bede-1ceb578138f4", "event_id": "32ed10f8-b551-4a1c-8ab8-6ef587d4e210", "parent_event_id": "4736fb48-fe13-4b38-bede-1ceb578138f4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 701, "start_time": "2024-06-20T03:55:40.294Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_193", "variant_name": null}, {"function_name": "Fn_simple_193", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_193\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"point1\":[40.7128,-74.006],\"point2\":[34.0522,-118.2437],\"meta\":\"Value\",\"unit\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_193_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the slope gradient between two geographical coordinates.\n  function_name: 'calculate_slope_gradient' or null,\n  // The geographic coordinates for the first point [Latitude, Longitude].\n  point1: float[],\n  // The geographic coordinates for the second point [Latitude, Longitude].\n  point2: float[],\n  // The unit for the slope gradient. Default is 'degree'.\n  unit: 'degree' or 'percent' or 'ratio' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the slope gradient in degree between two points on a landscape with coordinates (40.7128, -74.0060) and (34.0522, -118.2437)."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_slope_gradient\",\n  \"point1\": [40.7128, -74.0060],\n  \"point2\": [34.0522, -118.2437],\n  \"unit\": \"degree\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 173, "output_tokens": 64, "total_tokens": 237, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4736fb48-fe13-4b38-bede-1ceb578138f4", "event_id": "4736fb48-fe13-4b38-bede-1ceb578138f4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 181978, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_193", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4e3a0e9d-36f5-4e0b-b2bf-1470849dbbf2", "event_id": "4e5d7b45-06cb-4e06-aa96-c6a2ad48c6ad", "parent_event_id": "4e3a0e9d-36f5-4e0b-b2bf-1470849dbbf2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 834, "start_time": "2024-06-20T03:55:40.996Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_194", "variant_name": null}, {"function_name": "Fn_simple_194", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_194\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Toronto\",\"plant_types\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_194_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate local nurseries based on location and plant types availability.\n  function_name: 'local_nursery.find' or null,\n  // The city or locality where the nursery needs to be located.\n  location: string,\n  // Type of plants the nursery should provide.\n  plant_types: [\n    'Annual' or 'Perennial' or 'Shrub' or 'Tree' or 'Herbs' or 'Fruits'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the best local nurseries in Toronto with a good variety of annual plants."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"local_nursery.find\",\n  \"location\": \"Toronto\",\n  \"plant_types\": [\n    \"Annual\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 55, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4e3a0e9d-36f5-4e0b-b2bf-1470849dbbf2", "event_id": "4e3a0e9d-36f5-4e0b-b2bf-1470849dbbf2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 182814, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_194", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bc3dd525-1b51-405c-9a9a-6f369120f740", "event_id": "3be8a729-40a2-411e-be3e-d2b68d34b975", "parent_event_id": "bc3dd525-1b51-405c-9a9a-6f369120f740", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 614, "start_time": "2024-06-20T03:55:41.832Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_195", "variant_name": null}, {"function_name": "Fn_simple_195", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_195\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"slope_type\":\"hill\",\"num_results\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_195_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the list of plants suitable for slope based on erosion control ability.\n  function_name: 'get_plants_for_slope' or null,\n  // The type of slope like steep, moderate etc.\n  slope_type: string,\n  // The number of top results needed. Default is 5.\n  num_results: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the top three plants suitable for a hill slope in terms of erosion prevention?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_plants_for_slope\",\n  \"slope_type\": \"hill\",\n  \"num_results\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 41, "total_tokens": 159, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bc3dd525-1b51-405c-9a9a-6f369120f740", "event_id": "bc3dd525-1b51-405c-9a9a-6f369120f740", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 183429, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_195", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c9f14bee-1472-4e0e-a5aa-a23e2cd1579b", "event_id": "e0d92ac9-5cc3-4a08-adbf-e330ba90494a", "parent_event_id": "c9f14bee-1472-4e0e-a5aa-a23e2cd1579b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 701, "start_time": "2024-06-20T03:55:42.447Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_196", "variant_name": null}, {"function_name": "Fn_simple_196", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_196\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"daily_miles\":20,\"meat_meals_per_week\":3,\"annual_trash_weight\":500,\"meta\":\"Value\",\"flights_per_year\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_196_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the estimated carbon footprint of a lifestyle based on factors such as daily driving distance, weekly meat consumption, and yearly trash production.\n  function_name: 'calculate_carbon_footprint' or null,\n  // The daily driving distance in miles.\n  daily_miles: int,\n  // The number of meat-based meals consumed per week.\n  meat_meals_per_week: int,\n  // The yearly weight of trash production in pounds.\n  annual_trash_weight: int,\n  // The number of flights taken per year. Default is 0.\n  flights_per_year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the carbon footprint of my lifestyle, assuming I drive 20 miles a day, consume 3 meat meals a week, and produce 500 lbs of trash in a year."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_carbon_footprint\",\n  \"daily_miles\": 20,\n  \"meat_meals_per_week\": 3,\n  \"annual_trash_weight\": 500,\n  \"flights_per_year\": 0\n}", "metadata": {"logprobs": null, "prompt_tokens": 201, "output_tokens": 68, "total_tokens": 269, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c9f14bee-1472-4e0e-a5aa-a23e2cd1579b", "event_id": "c9f14bee-1472-4e0e-a5aa-a23e2cd1579b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 184131, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_196", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8d91d3b6-11ef-4752-a6b5-7b96d5779462", "event_id": "b123a1f8-7502-41bb-af79-de6bc4719a1b", "parent_event_id": "8d91d3b6-11ef-4752-a6b5-7b96d5779462", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 628, "start_time": "2024-06-20T03:55:43.149Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_197", "variant_name": null}, {"function_name": "Fn_simple_197", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_197\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"London\",\"date\":\"2022/08/16\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_197_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the air quality index for a specific location.\n  function_name: 'air_quality' or null,\n  // The city that you want to get the air quality index for.\n  location: string,\n  // The date you want to get the air quality index for. Default is today.\n  date: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the air quality index in London 2022/08/16?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"air_quality\",\n  \"location\": \"London\",\n  \"date\": \"2022/08/16\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 110, "output_tokens": 39, "total_tokens": 149, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8d91d3b6-11ef-4752-a6b5-7b96d5779462", "event_id": "8d91d3b6-11ef-4752-a6b5-7b96d5779462", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 184761, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_197", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f3aade86-af73-4810-8f68-a3f85a33b48b", "event_id": "5c203d1f-f1e6-4d47-bb57-fa2fce5d44e9", "parent_event_id": "f3aade86-af73-4810-8f68-a3f85a33b48b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 817, "start_time": "2024-06-20T03:55:43.778Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_198", "variant_name": null}, {"function_name": "Fn_simple_198", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_198\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"San Diego\",\"time\":\"12:00\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_198_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the air quality index at a specified location and time.\n  function_name: 'get_air_quality_index' or null,\n  // The location to get the air quality index for.\n  location: string,\n  // The specific time to check the air quality. Default is the current time.\n  time: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the air quality index in San Diego at 12pm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_air_quality_index\",\n  \"location\": \"San Diego\",\n  \"time\": \"12:00\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 41, "total_tokens": 150, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f3aade86-af73-4810-8f68-a3f85a33b48b", "event_id": "f3aade86-af73-4810-8f68-a3f85a33b48b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 185578, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_198", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "615bf4dd-6d12-4411-9df6-8fd2ab3a5baa", "event_id": "2e19f2bf-62b1-4069-9991-aeb615615e74", "parent_event_id": "615bf4dd-6d12-4411-9df6-8fd2ab3a5baa", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1433, "start_time": "2024-06-20T03:55:44.596Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_199", "variant_name": null}, {"function_name": "Fn_simple_199", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_199\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":70,\"meta\":\"Value\",\"activity_level\":\"moderate\",\"climate\":\"temperate\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_199_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the recommended daily water intake for a person based on their weight.\n  function_name: 'calculate_daily_water_intake' or null,\n  // The weight of the person in kilograms.\n  weight: int,\n  // The level of physical activity of the person. Default is 'moderate'.\n  activity_level: string or null,\n  // The climate of the area where the person lives. Default is 'temperate'.\n  climate: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the required water daily intake for a person with weight 70 kg."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_daily_water_intake\",\n  \"weight\": 70,\n  \"activity_level\": \"moderate\",\n  \"climate\": \"temperate\"\n}\n\nTo calculate the recommended daily water intake for a person with a weight of 70 kg, the formula is:\n\nDaily water intake (liters) = Weight (kg) x 0.033\n\nSo, for a person weighing 70 kg, the recommended daily water intake would be:\n\n70 kg x 0.033 = 2.31 liters\n\nThis calculation assumes a \"moderate\" activity level and a \"temperate\" climate, which are the default values provided in the schema.", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 168, "total_tokens": 313, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "615bf4dd-6d12-4411-9df6-8fd2ab3a5baa", "event_id": "615bf4dd-6d12-4411-9df6-8fd2ab3a5baa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 187012, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_199", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "30a1aa90-6efd-4582-bf1d-90652e4f3d4c", "event_id": "e57c5879-1d27-4ec6-aa92-b01ba4c9e53e", "parent_event_id": "30a1aa90-6efd-4582-bf1d-90652e4f3d4c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:46.030Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_200", "variant_name": null}, {"function_name": "Fn_simple_200", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_200\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"San Jose\",\"meta\":\"Value\",\"days\":3}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_200_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves Air Quality Index (AQI) for specified location over a number of days.\n  function_name: 'environmental_data.air_quality_index' or null,\n  // Name of the city or town to retrieve air quality index for.\n  location: string,\n  // Number of days for which to retrieve data. If not provided, default to today.\n  days: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find air quality index in San Jose for next three days."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"environmental_data.air_quality_index\",\n  \"location\": \"San Jose\",\n  \"days\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 50, "total_tokens": 174, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "30a1aa90-6efd-4582-bf1d-90652e4f3d4c", "event_id": "30a1aa90-6efd-4582-bf1d-90652e4f3d4c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 187831, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_200", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6ca5c568-7a23-4cbf-ac3b-9163e8bd61aa", "event_id": "ed52bb3c-d89a-414c-9ea2-2629503bde84", "parent_event_id": "6ca5c568-7a23-4cbf-ac3b-9163e8bd61aa", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2047, "start_time": "2024-06-20T03:55:46.849Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_201", "variant_name": null}, {"function_name": "Fn_simple_201", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_201\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance\":12000,\"fuel_type\":\"gasoline\",\"fuel_efficiency\":25.0,\"meta\":\"Value\",\"efficiency_reduction\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_201_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the annual carbon dioxide emissions produced by a vehicle based on the distance traveled, the fuel type and the fuel efficiency of the vehicle.\n  function_name: 'calculate_emissions' or null,\n  // The distance travelled in miles.\n  distance: int,\n  // Type of fuel used by the vehicle.\n  fuel_type: string,\n  // The vehicle's fuel efficiency in miles per gallon.\n  fuel_efficiency: float,\n  // The percentage decrease in fuel efficiency per year (optional). Default is 0\n  efficiency_reduction: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much CO2 is produced annually by a gas-fueled car that travels 12,000 miles per year, with fuel efficiency of 25 MPG ?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_emissions\",\n  \"distance\": 12000,\n  \"fuel_type\": \"gasoline\",\n  \"fuel_efficiency\": 25.0,\n  \"efficiency_reduction\": null\n}\n\nThe calculation for the annual carbon dioxide emissions produced by this vehicle is as follows:\n\n1. Calculate the annual fuel consumption:\n   - Fuel consumption = Distance / Fuel Efficiency\n   - Fuel consumption = 12000 miles / 25 MPG = 480 gallons\n\n2. Calculate the carbon dioxide emissions:\n   - Carbon dioxide emissions per gallon of gasoline = 8.78 kg CO2/gallon\n   - Total annual carbon dioxide emissions = Fuel consumption * CO2 per gallon\n   - Total annual carbon dioxide emissions = 480 gallons * 8.78 kg CO2/gallon = 4,214.4 kg CO2\n\nTherefore, the annual carbon dioxide emissions produced by this gas-fueled car that travels 12,000 miles per year with a fuel efficiency of 25 MPG is 4,214.4 kg CO2.", "metadata": {"logprobs": null, "prompt_tokens": 185, "output_tokens": 268, "total_tokens": 453, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6ca5c568-7a23-4cbf-ac3b-9163e8bd61aa", "event_id": "6ca5c568-7a23-4cbf-ac3b-9163e8bd61aa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 189879, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_201", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1a99a269-81fa-4191-8408-1906b7fffb85", "event_id": "7b8b66a1-ccde-429f-ab0b-1eff47976640", "parent_event_id": "1a99a269-81fa-4191-8408-1906b7fffb85", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:55:48.897Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_202", "variant_name": null}, {"function_name": "Fn_simple_202", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_202\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species\":\"pandas\",\"country\":\"China\",\"meta\":\"Value\",\"year\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_202_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Estimate the population of a particular species in a given country.\n  function_name: 'estimate_population' or null,\n  // The species for which population needs to be estimated.\n  species: string,\n  // The country where the species lives.\n  country: string,\n  // The year for which population estimate is sought. Default is the current year.\n  year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Estimate the population of pandas in the wild in China."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"estimate_population\",\n  \"species\": \"pandas\",\n  \"country\": \"China\",\n  \"year\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 122, "output_tokens": 50, "total_tokens": 172, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1a99a269-81fa-4191-8408-1906b7fffb85", "event_id": "1a99a269-81fa-4191-8408-1906b7fffb85", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 190596, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_202", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f33314b6-5200-436a-8be5-1bbb508e4cfd", "event_id": "a65526a5-3b75-4f4c-af6c-89f547ce5470", "parent_event_id": "f33314b6-5200-436a-8be5-1bbb508e4cfd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T03:55:49.613Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_203", "variant_name": null}, {"function_name": "Fn_simple_203", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_203\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"energy_type\":\"renewable\",\"usage_duration\":3,\"meta\":\"Value\",\"region\":\"California\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_203_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate potential greenhouse gas emissions saved by switching to renewable energy sources.\n  function_name: 'calculate_emission_savings' or null,\n  // Type of the renewable energy source.\n  energy_type: string,\n  // Usage duration in months.\n  usage_duration: int,\n  // The region where you use energy. Default is 'Texas'.\n  region: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many greenhouse gas emissions would I save if I switched to renewable energy sources for 3 months in California?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"calculate_emission_savings\",\n  \"energy_type\": \"renewable\",\n  \"usage_duration\": 3,\n  \"region\": \"California\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 58, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f33314b6-5200-436a-8be5-1bbb508e4cfd", "event_id": "f33314b6-5200-436a-8be5-1bbb508e4cfd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 191518, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_203", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9c694791-79f5-4210-8087-2166e5955c3b", "event_id": "9f5aae2c-dd6d-45f4-915a-2dda9e998d3d", "parent_event_id": "9c694791-79f5-4210-8087-2166e5955c3b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:55:50.536Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_204", "variant_name": null}, {"function_name": "Fn_simple_204", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_204\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Chicago\",\"meta\":\"Value\",\"detail\":true,\"historical\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_204_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve real-time air quality and pollution data for a specific location.\n  function_name: 'get_air_quality' or null,\n  // The city that you want to get the air quality data for.\n  location: string,\n  // If true, additional data like PM2.5, PM10, ozone levels, and pollution sources will be retrieved. Default is false.\n  detail: bool or null,\n  // Optional date (in 'YYYY-MM-DD' format) to retrieve historical data. (default: today)\n  historical: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you find me the latest information about air quality index and pollution data for Chicago?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_air_quality\",\n  \"location\": \"Chicago\",\n  \"detail\": true,\n  \"historical\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 41, "total_tokens": 209, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9c694791-79f5-4210-8087-2166e5955c3b", "event_id": "9c694791-79f5-4210-8087-2166e5955c3b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 192132, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_204", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e05a3bf6-e420-4999-b737-30a7444ac243", "event_id": "13f7f647-7130-4a27-b80e-1bf5800f69f0", "parent_event_id": "e05a3bf6-e420-4999-b737-30a7444ac243", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 712, "start_time": "2024-06-20T03:55:51.149Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_205", "variant_name": null}, {"function_name": "Fn_simple_205", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_205\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Seattle, WA\",\"cuisine\":\"Chinese\",\"meta\":\"Value\",\"max_distance\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_205_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby restaurants based on specific criteria like cuisine type.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Preferred type of cuisine in restaurant.\n  cuisine: string,\n  // Maximum distance (in miles) within which to search for restaurants. Default is 5.\n  max_distance: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find restaurants near me within 10 miles that offer Chinese cuisine in Seattle."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"restaurant.find_nearby\",\n  \"location\": \"Seattle, WA\",\n  \"cuisine\": \"Chinese\",\n  \"max_distance\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 58, "total_tokens": 194, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e05a3bf6-e420-4999-b737-30a7444ac243", "event_id": "e05a3bf6-e420-4999-b737-30a7444ac243", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 192845, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_205", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8389ed28-7c4e-47ac-ab3f-f3b2a7e23a4d", "event_id": "e2241a4c-09df-4056-b46a-87b517d77047", "parent_event_id": "8389ed28-7c4e-47ac-ab3f-f3b2a7e23a4d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 756, "start_time": "2024-06-20T03:55:51.863Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_206", "variant_name": null}, {"function_name": "Fn_simple_206", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_206\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Boston\",\"end_location\":\"New York\",\"meta\":\"Value\",\"mode\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_206_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve current traffic conditions for a specified route.\n  function_name: 'get_traffic_info' or null,\n  // The starting point of the route.\n  start_location: string,\n  // The destination of the route.\n  end_location: string,\n  // Preferred method of transportation, default to 'driving'.\n  mode: 'driving' or 'walking' or 'bicycling' or 'transit' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the current traffic situation from Boston driving to New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_traffic_info\",\n  \"start_location\": \"Boston\",\n  \"end_location\": \"New York\",\n  \"mode\": \"driving\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 59, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8389ed28-7c4e-47ac-ab3f-f3b2a7e23a4d", "event_id": "8389ed28-7c4e-47ac-ab3f-f3b2a7e23a4d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 193603, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_206", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "014ee4a7-1e47-41f9-8769-3cdfb6b52d21", "event_id": "934e375e-0fcb-408d-bcc1-5f0764216b04", "parent_event_id": "014ee4a7-1e47-41f9-8769-3cdfb6b52d21", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 611, "start_time": "2024-06-20T03:55:52.621Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_207", "variant_name": null}, {"function_name": "Fn_simple_207", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_207\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"London, UK\",\"amenities\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_207_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby parks based on specific criteria like tennis court availability.\n  function_name: 'parks.find_nearby' or null,\n  // The city and state, e.g. London, UK\n  location: string,\n  // Preferred amenities in park. Default is ['Running Track']\n  amenities: [\n    'Tennis Court' or 'Picnic Area' or 'Playground' or 'Running Track'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the nearest park with a tennis court in London."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"parks.find_nearby\",\n  \"location\": \"London, UK\",\n  \"amenities\": [\n    \"Tennis Court\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 56, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "014ee4a7-1e47-41f9-8769-3cdfb6b52d21", "event_id": "014ee4a7-1e47-41f9-8769-3cdfb6b52d21", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 194215, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_207", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b2568d48-cd65-42ee-b334-bc6bbcde55d8", "event_id": "c7ec17af-2a14-4834-bab9-c524e2bb5298", "parent_event_id": "b2568d48-cd65-42ee-b334-bc6bbcde55d8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 711, "start_time": "2024-06-20T03:55:53.233Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_208", "variant_name": null}, {"function_name": "Fn_simple_208", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_208\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"New York, USA\",\"end_location\":\"Miami, USA\",\"route_preference\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_208_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the shortest driving distance between two locations.\n  function_name: 'calculate_shortest_distance' or null,\n  // The starting location for the drive.\n  start_location: string,\n  // The destination location for the drive.\n  end_location: string,\n  // The preferred type of route.\n  route_preference: 'Shortest' or 'Scenic',\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the shortest driving distance between New York, USA and Miami, USA."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"calculate_shortest_distance\",\n  \"start_location\": \"New York, USA\",\n  \"end_location\": \"Miami, USA\",\n  \"route_preference\": \"Shortest\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 66, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b2568d48-cd65-42ee-b334-bc6bbcde55d8", "event_id": "b2568d48-cd65-42ee-b334-bc6bbcde55d8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 194927, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_208", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fdcde14b-3a78-4cff-ad75-51dd179de00d", "event_id": "9a31f45c-5277-4896-aa88-4665622e287d", "parent_event_id": "fdcde14b-3a78-4cff-ad75-51dd179de00d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 736, "start_time": "2024-06-20T03:55:53.945Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_209", "variant_name": null}, {"function_name": "Fn_simple_209", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_209\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start\":\"New York\",\"end\":\"Los Angeles\",\"avoid\":[\"Value1\",\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_209_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve directions from a starting location to an ending location, including options for route preferences.\n  function_name: 'map_service.get_directions' or null,\n  // Starting location for the route.\n  start: string,\n  // Ending location for the route.\n  end: string,\n  // Route features to avoid. Default is ['highways', 'ferries']\n  avoid: [\n    'tolls' or 'highways' or 'ferries'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the directions from New York to Los Angeles avoiding highways and toll roads."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"map_service.get_directions\",\n  \"start\": \"New York\",\n  \"end\": \"Los Angeles\",\n  \"avoid\": [\n    \"highways\",\n    \"tolls\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 70, "total_tokens": 218, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fdcde14b-3a78-4cff-ad75-51dd179de00d", "event_id": "fdcde14b-3a78-4cff-ad75-51dd179de00d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 195665, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_209", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d47490b0-61c1-42f1-9927-7d95ddca16c4", "event_id": "59edb2e0-2339-4773-9b1d-3be2fca494c6", "parent_event_id": "d47490b0-61c1-42f1-9927-7d95ddca16c4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 592, "start_time": "2024-06-20T03:55:54.682Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_210", "variant_name": null}, {"function_name": "Fn_simple_210", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_210\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Boston, MA\",\"facilities\":[\"Value2\",\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_210_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby public libraries based on specific criteria like English fiction availability and Wi-Fi.\n  function_name: 'public_library.find_nearby' or null,\n  // The city and state, e.g. Boston, MA\n  location: string,\n  // Facilities and sections in public library.\n  facilities: [\n    'Wi-Fi' or 'Reading Room' or 'Fiction' or 'Children Section' or 'Cafe'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Locate the nearest public library in Boston, Massachusetts with English fiction section and free Wi-Fi."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"public_library.find_nearby\",\n  \"location\": \"Boston, MA\",\n  \"facilities\": [\n    \"Fiction\",\n    \"Wi-Fi\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 53, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d47490b0-61c1-42f1-9927-7d95ddca16c4", "event_id": "d47490b0-61c1-42f1-9927-7d95ddca16c4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 196258, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_210", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "69671afc-44ea-413f-ad66-d7782a81d64f", "event_id": "38ea106b-9720-4e65-907c-d49e9c8047e6", "parent_event_id": "69671afc-44ea-413f-ad66-d7782a81d64f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 481, "start_time": "2024-06-20T03:55:55.276Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_211", "variant_name": null}, {"function_name": "Fn_simple_211", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_211\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"topic\":\"Bitcoin\",\"quantity\":5,\"meta\":\"Value\",\"region\":\"US\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_211_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the latest news on a specific topic.\n  function_name: 'get_news' or null,\n  // The subject for the news topic.\n  topic: string,\n  // Number of articles to fetch.\n  quantity: int,\n  // The geographical region for the news. Default is 'US'.\n  region: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get 5 latest news on Bitcoin in US"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_news\",\n  \"topic\": \"Bitcoin\",\n  \"quantity\": 5,\n  \"region\": \"US\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 112, "output_tokens": 42, "total_tokens": 154, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "69671afc-44ea-413f-ad66-d7782a81d64f", "event_id": "69671afc-44ea-413f-ad66-d7782a81d64f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 196740, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_211", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "41101ec3-7ba1-44f2-9547-ddd5ade8fb64", "event_id": "94f4a44a-0a2c-4bb7-ac41-1c6c83befe0f", "parent_event_id": "41101ec3-7ba1-44f2-9547-ddd5ade8fb64", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:55:55.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_212", "variant_name": null}, {"function_name": "Fn_simple_212", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_212\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"to\":\"john.doe@example.com\",\"subject\":\"Meeting\",\"body\":\"Let's meet at 10 AM tomorrow\",\"meta\":\"Value\",\"cc\":null,\"bcc\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_212_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Send an email to the specified email address.\n  function_name: 'send_email' or null,\n  // The email address to send to.\n  to: string,\n  // The subject of the email.\n  subject: string,\n  // The body content of the email.\n  body: string,\n  // The email address to carbon copy. Default is empty if not specified.\n  cc: string or null,\n  // The email address to blind carbon copy. Default is empty if not specified.\n  bcc: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Send an email to John Doe at john.doe@example.com with the subject 'Meeting' and body 'Let's meet at 10 AM tomorrow'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"send_email\",\n  \"to\": \"john.doe@example.com\",\n  \"subject\": \"Meeting\",\n  \"body\": \"Let's meet at 10 AM tomorrow\",\n  \"cc\": null,\n  \"bcc\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 180, "output_tokens": 70, "total_tokens": 250, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "41101ec3-7ba1-44f2-9547-ddd5ade8fb64", "event_id": "41101ec3-7ba1-44f2-9547-ddd5ade8fb64", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 197559, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_212", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ef4d01af-ee10-4536-af2c-a94ac6db4284", "event_id": "def7de00-f918-4751-884a-07d3e3751c11", "parent_event_id": "ef4d01af-ee10-4536-af2c-a94ac6db4284", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:55:56.577Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_213", "variant_name": null}, {"function_name": "Fn_simple_213", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_213\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Apple Inc.\",\"detail_level\":\"detailed\",\"meta\":\"Value\",\"market\":\"NASDAQ\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_213_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves information about a specific stock based on company's name.\n  function_name: 'get_stock_info' or null,\n  // The name of the company.\n  company_name: string,\n  // Level of detail for stock information. Can be 'summary' or 'detailed'.\n  detail_level: string,\n  // The stock market of interest. Default is 'NASDAQ'\n  market: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me detail information about stocks of Apple Inc."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_stock_info\",\n  \"company_name\": \"Apple Inc.\",\n  \"detail_level\": \"detailed\",\n  \"market\": \"NASDAQ\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 50, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ef4d01af-ee10-4536-af2c-a94ac6db4284", "event_id": "ef4d01af-ee10-4536-af2c-a94ac6db4284", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 198276, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_213", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "db05137a-94a5-4c79-a524-733e36c2ecfa", "event_id": "307ce106-511c-4b9c-9583-3938ff0cabec", "parent_event_id": "db05137a-94a5-4c79-a524-733e36c2ecfa", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 889, "start_time": "2024-06-20T03:55:57.294Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_214", "variant_name": null}, {"function_name": "Fn_simple_214", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_214\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"departure_location\":\"San Francisco\",\"destination_location\":\"London\",\"date\":\"2022-04-27\",\"meta\":\"Value\",\"time\":\"afternoon\",\"direct_flight\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_214_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a direct flight for a specific date and time from departure location to destination location.\n  function_name: 'flight.book' or null,\n  // The location you are departing from.\n  departure_location: string,\n  // The location you are flying to.\n  destination_location: string,\n  // The date of the flight. Accepts standard date format e.g., 2022-04-28.\n  date: string,\n  // Preferred time of flight. Default is 'morning'.\n  time: string or null,\n  // If set to true, only direct flights will be searched. Default is false.\n  direct_flight: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a direct flight from San Francisco to London for 2022-04-27 afternoon"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"flight.book\",\n  \"departure_location\": \"San Francisco\",\n  \"destination_location\": \"London\",\n  \"date\": \"2022-04-27\",\n  \"time\": \"afternoon\",\n  \"direct_flight\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 193, "output_tokens": 78, "total_tokens": 271, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "db05137a-94a5-4c79-a524-733e36c2ecfa", "event_id": "db05137a-94a5-4c79-a524-733e36c2ecfa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 199166, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_214", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3d0a7a07-8535-4494-bc12-c9668a783bbe", "event_id": "8eea40f7-63a5-4b07-ad1c-b1ee0d27eb3e", "parent_event_id": "3d0a7a07-8535-4494-bc12-c9668a783bbe", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 747, "start_time": "2024-06-20T03:55:58.184Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_215", "variant_name": null}, {"function_name": "Fn_simple_215", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_215\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York, NY\",\"genre\":\"rock\",\"meta\":\"Value\",\"days_ahead\":30}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_215_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find upcoming events of a specific genre in a given location.\n  function_name: 'event_finder.find_upcoming' or null,\n  // The city and state where the search will take place, e.g. New York, NY.\n  location: string,\n  // The genre of events.\n  genre: string,\n  // The number of days from now to include in the search. (default: 7)\n  days_ahead: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for upcoming month rock concerts in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"event_finder.find_upcoming\",\n  \"location\": \"New York, NY\",\n  \"genre\": \"rock\",\n  \"days_ahead\": 30\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 60, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3d0a7a07-8535-4494-bc12-c9668a783bbe", "event_id": "3d0a7a07-8535-4494-bc12-c9668a783bbe", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 199914, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_215", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "11bc92b2-1ec3-4357-b352-a6cce8d561b5", "event_id": "b9030dc3-950b-4ec5-b85a-7b0ac171e024", "parent_event_id": "11bc92b2-1ec3-4357-b352-a6cce8d561b5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:55:58.932Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_216", "variant_name": null}, {"function_name": "Fn_simple_216", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_216\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"title\":\"Interstellar\",\"meta\":\"Value\",\"extra_info\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_216_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // This function retrieves a brief about a specified movie.\n  function_name: 'movie_details.brief' or null,\n  // Title of the movie\n  title: string,\n  // Option to get additional information like Director, Cast, Awards etc. (default: false)\n  extra_info: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me a brief on movie 'Interstellar'"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"movie_details.brief\",\n  \"title\": \"Interstellar\",\n  \"extra_info\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 106, "output_tokens": 39, "total_tokens": 145, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "11bc92b2-1ec3-4357-b352-a6cce8d561b5", "event_id": "11bc92b2-1ec3-4357-b352-a6cce8d561b5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 200528, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_216", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0bdbb01a-0fed-4d79-8e90-8d7acf0edbd4", "event_id": "a8532ffc-457f-4dcf-9b60-95edca62f215", "parent_event_id": "0bdbb01a-0fed-4d79-8e90-8d7acf0edbd4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 790, "start_time": "2024-06-20T03:55:59.546Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_217", "variant_name": null}, {"function_name": "Fn_simple_217", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_217\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"text\":\"I love the food here! It's always fresh and delicious.\",\"language\":\"en\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_217_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Perform sentiment analysis on a given piece of text.\n  function_name: 'sentiment_analysis' or null,\n  // The text on which to perform sentiment analysis.\n  text: string,\n  // The language in which the text is written.\n  language: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Analyze the sentiment of a customer review 'I love the food here! It's always fresh and delicious.'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the analysis in the requested schema:\n\n{\n  \"function_name\": \"sentiment_analysis\",\n  \"text\": \"I love the food here! It's always fresh and delicious.\",\n  \"language\": \"en\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 108, "output_tokens": 56, "total_tokens": 164, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0bdbb01a-0fed-4d79-8e90-8d7acf0edbd4", "event_id": "0bdbb01a-0fed-4d79-8e90-8d7acf0edbd4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 201320, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_217", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f1e595bd-6a04-46ee-bc57-ec6912aa805f", "event_id": "92f36bf1-d68b-427c-b068-346048cab283", "parent_event_id": "f1e595bd-6a04-46ee-bc57-ec6912aa805f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 798, "start_time": "2024-06-20T03:56:00.337Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_218", "variant_name": null}, {"function_name": "Fn_simple_218", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_218\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"data_source\":\"~/data/myfMRI.nii\",\"sequence_type\":\"multi-band\",\"smooth\":6,\"meta\":\"Value\",\"voxel_size\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_218_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // This function takes in fMRI data to output analyzed data.\n  function_name: 'fMRI.analyze' or null,\n  // The path where the data is stored.\n  data_source: string,\n  // Type of fMRI sequence\n  sequence_type: string,\n  // Spatial smoothing FWHM. In mm.\n  smooth: int,\n  // Size of isotropic voxels in mm. (default: 3)\n  voxel_size: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Analyze my fMRI data in ~/data/myfMRI.nii from a multi-band sequence, that is smoothed at 6mm with an isotropic voxel size of 2mm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema for your request:\n\n{\n  \"function_name\": \"fMRI.analyze\",\n  \"data_source\": \"~/data/myfMRI.nii\",\n  \"sequence_type\": \"multi-band\",\n  \"smooth\": 6,\n  \"voxel_size\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 187, "output_tokens": 79, "total_tokens": 266, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f1e595bd-6a04-46ee-bc57-ec6912aa805f", "event_id": "f1e595bd-6a04-46ee-bc57-ec6912aa805f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 202119, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_218", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "69e94618-30b2-4b70-9add-17e5a9fcdd4d", "event_id": "446bf1ae-00f6-4055-9e2b-6548b5ae1b50", "parent_event_id": "69e94618-30b2-4b70-9add-17e5a9fcdd4d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 812, "start_time": "2024-06-20T03:56:01.137Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_219", "variant_name": null}, {"function_name": "Fn_simple_219", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_219\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"patient_id\":\"546382\",\"status\":\"Value1\",\"meta\":\"Value\",\"mri_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_219_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch the brain MRI report of the patient for a given status.\n  function_name: 'patient.get_mri_report' or null,\n  // The patient identifier.\n  patient_id: string,\n  // Type of the MRI. Default to be 'brain'.\n  mri_type: 'brain' or 'spinal' or 'chest' or 'abdominal' or null,\n  // Status of the report, could be 'in progress', 'concluded' or 'draft'.\n  status: 'in progress' or 'concluded' or 'draft',\n}"}]}, {"role": "user", "content": [{"text": "Question: Given patient with id 546382, retrieve their brain MRI report with the status 'concluded'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"patient.get_mri_report\",\n  \"patient_id\": \"546382\",\n  \"mri_type\": \"brain\",\n  \"status\": \"concluded\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 183, "output_tokens": 63, "total_tokens": 246, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "69e94618-30b2-4b70-9add-17e5a9fcdd4d", "event_id": "69e94618-30b2-4b70-9add-17e5a9fcdd4d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 202932, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_219", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cc0b3670-bcfe-4b66-8175-c897923fed40", "event_id": "34ec4389-0427-42fc-bd56-d737e4debf2b", "parent_event_id": "cc0b3670-bcfe-4b66-8175-c897923fed40", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 763, "start_time": "2024-06-20T03:56:01.950Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_220", "variant_name": null}, {"function_name": "Fn_simple_220", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_220\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"neuron_type\":\"GABA\",\"brain_region\":\"All\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_220_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the coordinates of the specified neuron in the rat's brain.\n  function_name: 'get_neuron_coordinates' or null,\n  // Type of neuron to find. For instance, GABA, Glutamate, etc.\n  neuron_type: string,\n  // The region of the brain to consider. (default: All)\n  brain_region: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the coordinates of the neuron in a rat's all part of the brain that produces GABA neurotransmitters?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_neuron_coordinates\",\n  \"neuron_type\": \"GABA\",\n  \"brain_region\": \"All\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 54, "total_tokens": 193, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cc0b3670-bcfe-4b66-8175-c897923fed40", "event_id": "cc0b3670-bcfe-4b66-8175-c897923fed40", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 203699, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_220", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a2b5e359-55ee-4167-963b-aefcc62ff65c", "event_id": "94f0e141-1f1e-42d3-9c5b-99b9a9f461bf", "parent_event_id": "a2b5e359-55ee-4167-963b-aefcc62ff65c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1428, "start_time": "2024-06-20T03:56:02.725Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_221", "variant_name": null}, {"function_name": "Fn_simple_221", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_221\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"input_synaptic_rate\":200,\"decay_rate\":0.1,\"meta\":\"Value\",\"weight\":0.5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_221_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the neuronal activity (rate of firing) based on a given input synaptic rate, weight of inputs, and decay rate. Higher input or weight increases firing rate and higher decay rate decreases it.\n  function_name: 'calculate_neuronal_activity' or null,\n  // The synaptic input rate, usually represented as number of inputs per second.\n  input_synaptic_rate: int,\n  // The weight of the input, denoting its influence on the neuron's state. Default is 1.0.\n  weight: float or null,\n  // The rate at which the neuron's potential decays in the absence of inputs.\n  decay_rate: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the neuronal activity based on synaptic input rate of 200 and weight 0.5 and decay rate of 0.1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_neuronal_activity\",\n  \"input_synaptic_rate\": 200,\n  \"weight\": 0.5,\n  \"decay_rate\": 0.1\n}\n\nTo calculate the neuronal activity based on the given input synaptic rate, weight, and decay rate, we can use the following formula:\n\nNeuronal activity = (Input synaptic rate * Weight) / (Decay rate)\n\nPlugging in the values:\nNeuronal activity = (200 * 0.5) / 0.1\nNeuronal activity = 100 / 0.1\nNeuronal activity = 1000\n\nSo, the neuronal activity based on the given input synaptic rate of 200, weight of 0.5, and decay rate of 0.1 is 1000.", "metadata": {"logprobs": null, "prompt_tokens": 208, "output_tokens": 199, "total_tokens": 407, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a2b5e359-55ee-4167-963b-aefcc62ff65c", "event_id": "a2b5e359-55ee-4167-963b-aefcc62ff65c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 205136, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_221", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c963ca74-018c-4e5f-a770-90a08fd0b600", "event_id": "91c09c35-158a-44a6-ae62-710ff380ea11", "parent_event_id": "c963ca74-018c-4e5f-a770-90a08fd0b600", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 679, "start_time": "2024-06-20T03:56:04.154Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_222", "variant_name": null}, {"function_name": "Fn_simple_222", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_222\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"London\",\"years\":5,\"meta\":\"Value\",\"rate\":1.2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_222_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Estimate the future population growth of a specific location over a specified time period.\n  function_name: 'population_growth_estimate' or null,\n  // The city that you want to estimate the population growth for.\n  location: string,\n  // Number of years into the future for the estimate.\n  years: int,\n  // Expected annual growth rate in percentage. Default is 1.2.\n  rate: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What will be the population growth in London over the next five years?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"population_growth_estimate\",\n  \"location\": \"London\",\n  \"years\": 5,\n  \"rate\": 1.2\n}", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 45, "total_tokens": 178, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c963ca74-018c-4e5f-a770-90a08fd0b600", "event_id": "c963ca74-018c-4e5f-a770-90a08fd0b600", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 205816, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_222", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a8eac778-661e-4a15-a0b8-f0004dfedc45", "event_id": "f4668350-ec4e-445e-b16f-9bfaff1fb28e", "parent_event_id": "a8eac778-661e-4a15-a0b8-f0004dfedc45", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 682, "start_time": "2024-06-20T03:56:04.834Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_223", "variant_name": null}, {"function_name": "Fn_simple_223", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_223\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":70,\"height\":180,\"meta\":\"Value\",\"unit\":\"metric\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_223_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the Body Mass Index based on given weight and height.\n  function_name: 'calculate_bmi' or null,\n  // The weight of a person in kilograms.\n  weight: int,\n  // The height of a person in centimeters.\n  height: int,\n  // Optional. The measurement system to be used for the result. The default is 'metric'.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you calculate my Body Mass Index (BMI) given my weight is 70 kg and height is 180 cm?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"calculate_bmi\",\n  \"weight\": 70,\n  \"height\": 180,\n  \"unit\": \"metric\"\n}\n\nThe calculated BMI is 21.6, which falls within the normal weight range.", "metadata": {"logprobs": null, "prompt_tokens": 144, "output_tokens": 72, "total_tokens": 216, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a8eac778-661e-4a15-a0b8-f0004dfedc45", "event_id": "a8eac778-661e-4a15-a0b8-f0004dfedc45", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 206500, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_223", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "634db55d-d0ff-4554-beb9-048ef57184c6", "event_id": "407e2eea-3550-4555-8e59-c734634cd1a5", "parent_event_id": "634db55d-d0ff-4554-beb9-048ef57184c6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 3345, "start_time": "2024-06-20T03:56:05.518Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_224", "variant_name": null}, {"function_name": "Fn_simple_224", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_224\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total\":50,\"extroverts\":15,\"introverts\":35,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_224_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Examine the social dynamics and interactions within a group based on the personality traits and group size.\n  function_name: 'group_dynamics.pattern' or null,\n  // The total group size.\n  total: int,\n  // The number of extroverted members in the group.\n  extroverts: int,\n  // The number of introverted members in the group.\n  introverts: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find social behaviors and patterns in a group size of 50 with extroverted members being 15 and introverted members being 35."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"group_dynamics.pattern\",\n  \"total\": 50,\n  \"extroverts\": 15,\n  \"introverts\": 35\n}\n\nIn this group composition, with 15 extroverts and 35 introverts in a total group size of 50, the following social behaviors and patterns are likely to emerge:\n\n1. Dominant Extroverts: The 15 extroverted members are likely to take on leadership roles and be the most vocal within the group. They may tend to dominate conversations and decision-making processes.\n\n2. Passive Introverts: The 35 introverted members may tend to be more reserved and less assertive in group settings. They may prefer to listen and observe rather than actively participate.\n\n3. Potential Conflict: The differing communication styles and preferences of the extroverts and introverts may lead to occasional conflicts or misunderstandings within the group. The extroverts may feel frustrated by the perceived lack of participation from the introverts, while the introverts may feel overwhelmed or intimidated by the extroverts' dominance.\n\n4. Subgroups and Cliques: The group may naturally divide into smaller subgroups or cliques, with the extroverts and introverts gravitating towards their respective comfort zones. This could potentially lead to a lack of cohesion and collaboration within the larger group.\n\n5. Facilitation Needs: The group may benefit from active facilitation or mediation to ensure that the introverted members have opportunities to voice their ideas and opinions, and that the extroverted members learn to create a more balanced and inclusive environment.\n\n6. Potential for Complementary Strengths: If the group dynamic is managed effectively, the diverse personalities and communication styles could potentially complement each other and lead to more well-rounded group dynamics and decision-making.\n\nOverall, the social behaviors and patterns in this group are likely to be characterized by a mix of extroverted dominance, introverted passivity, and the potential for both conflict and complementary strengths, depending on how the group dynamics are navigated and managed.", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 473, "total_tokens": 619, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "634db55d-d0ff-4554-beb9-048ef57184c6", "event_id": "634db55d-d0ff-4554-beb9-048ef57184c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 209846, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_224", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d2805c7e-0369-40b6-b3a6-5cce1d5796ff", "event_id": "6c310d59-a38c-4b40-b82f-097cddbd4d2c", "parent_event_id": "d2805c7e-0369-40b6-b3a6-5cce1d5796ff", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 864, "start_time": "2024-06-20T03:56:08.864Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_225", "variant_name": null}, {"function_name": "Fn_simple_225", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_225\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"topic\":\"psychology\",\"sub_topics\":[\"behaviour\",\"group dynamics\"],\"meta\":\"Value\",\"region\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_225_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the most followed Twitter user related to certain topics.\n  function_name: 'social_media_analytics.most_followed' or null,\n  // The main topic of interest.\n  topic: string,\n  // Sub-topics related to main topic. Default is empty.\n  sub_topics: string[],\n  // Region of interest for twitter search. Default is 'all'.\n  region: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the most followed person on twitter who tweets about psychology related to behaviour and group dynamics."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"social_media_analytics.most_followed\",\n  \"topic\": \"psychology\",\n  \"sub_topics\": [\"behaviour\", \"group dynamics\"],\n  \"region\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 64, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d2805c7e-0369-40b6-b3a6-5cce1d5796ff", "event_id": "d2805c7e-0369-40b6-b3a6-5cce1d5796ff", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 210712, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_225", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bd57a1af-00a8-44c8-a822-6bc3d8189718", "event_id": "1e78b97e-47f3-4027-b37d-c13644bac99c", "parent_event_id": "bd57a1af-00a8-44c8-a822-6bc3d8189718", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 772, "start_time": "2024-06-20T03:56:09.730Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_226", "variant_name": null}, {"function_name": "Fn_simple_226", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_226\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"category\":\"reading\",\"option_one\":\"digital reading\",\"option_two\":\"physical books\",\"meta\":\"Value\",\"demographic\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_226_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Gathers research data on public preference between two options, based on societal category.\n  function_name: 'psych_research.get_preference' or null,\n  // The societal category the preference data is about. E.g. reading, transportation, food\n  category: string,\n  // The first option people could prefer.\n  option_one: string,\n  // The second option people could prefer.\n  option_two: string,\n  // Specific demographic of society to narrow down the research. (default: all)\n  demographic: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the percentage of population preferring digital reading over physical books?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"psych_research.get_preference\",\n  \"category\": \"reading\",\n  \"option_one\": \"digital reading\",\n  \"option_two\": \"physical books\",\n  \"demographic\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 164, "output_tokens": 69, "total_tokens": 233, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bd57a1af-00a8-44c8-a822-6bc3d8189718", "event_id": "bd57a1af-00a8-44c8-a822-6bc3d8189718", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 211485, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_226", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3c658900-0507-4c2c-b8cf-cd97d61d8ed2", "event_id": "a936ee1a-0b02-4621-8690-f9cce7a0cbfc", "parent_event_id": "3c658900-0507-4c2c-b8cf-cd97d61d8ed2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:56:10.503Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_227", "variant_name": null}, {"function_name": "Fn_simple_227", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_227\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sign1\":\"Aries\",\"sign2\":\"Gemini\",\"meta\":\"Value\",\"scale\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_227_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the compatibility score between two Zodiac signs.\n  function_name: 'get_zodiac_compatibility' or null,\n  // The first Zodiac sign.\n  sign1: string,\n  // The second Zodiac sign.\n  sign2: string,\n  // The scale on which compatibility should be shown. Default is 'percentage'.\n  scale: 'percentage' or '0-10 scale' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the compatibility score in percentage of Aries with Gemini."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_zodiac_compatibility\",\n  \"sign1\": \"Aries\",\n  \"sign2\": \"Gemini\",\n  \"scale\": \"percentage\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 51, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3c658900-0507-4c2c-b8cf-cd97d61d8ed2", "event_id": "3c658900-0507-4c2c-b8cf-cd97d61d8ed2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 212202, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_227", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b3a36d1a-7d92-4c02-a9f8-dabba9b462aa", "event_id": "0bd4e967-cd02-4d96-8f5a-b4b4f650a02b", "parent_event_id": "b3a36d1a-7d92-4c02-a9f8-dabba9b462aa", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 569, "start_time": "2024-06-20T03:56:11.220Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_228", "variant_name": null}, {"function_name": "Fn_simple_228", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_228\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"type\":\"ENFJ\",\"traits\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_228_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the personality traits for a specific personality type, including their strengths and weaknesses.\n  function_name: 'get_personality_traits' or null,\n  // The personality type.\n  type: string,\n  // List of traits to be retrieved, default is ['strengths'].\n  traits: [\n    'strengths' or 'weaknesses'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me strength and weakness traits for ENFJ personality type."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_personality_traits\",\n  \"type\": \"ENFJ\",\n  \"traits\": [\n    \"strengths\",\n    \"weaknesses\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 119, "output_tokens": 51, "total_tokens": 170, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b3a36d1a-7d92-4c02-a9f8-dabba9b462aa", "event_id": "b3a36d1a-7d92-4c02-a9f8-dabba9b462aa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 212773, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_228", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4ff73c72-2eac-42cb-b4f5-76e7d9c07de5", "event_id": "0000cc62-2047-4f31-a1cd-25e2ba7a8a77", "parent_event_id": "4ff73c72-2eac-42cb-b4f5-76e7d9c07de5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 555, "start_time": "2024-06-20T03:56:11.791Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_229", "variant_name": null}, {"function_name": "Fn_simple_229", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_229\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hobby\":\"jogging\",\"meta\":\"Value\",\"trait_count\":3}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_229_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the common personality traits of people based on their hobbies or activities.\n  function_name: 'get_personality_traits' or null,\n  // The hobby or activity of interest.\n  hobby: string,\n  // The number of top traits to return, default is 5\n  trait_count: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find three personality traits of people who like jogging."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_personality_traits\",\n  \"hobby\": \"jogging\",\n  \"trait_count\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 107, "output_tokens": 38, "total_tokens": 145, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4ff73c72-2eac-42cb-b4f5-76e7d9c07de5", "event_id": "4ff73c72-2eac-42cb-b4f5-76e7d9c07de5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 213329, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_229", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "df1311b6-d873-4224-8cd1-867243e2982a", "event_id": "91510f99-6639-47b1-ac87-f0f434ae018d", "parent_event_id": "df1311b6-d873-4224-8cd1-867243e2982a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1433, "start_time": "2024-06-20T03:56:12.347Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_230", "variant_name": null}, {"function_name": "Fn_simple_230", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_230\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"characteristics\":[\"efficient\",\"organized\",\"easy going\",\"compassionate\"],\"meta\":\"Value\",\"scale\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_230_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve Big Five Personality trait scores based on individual's behavioural characteristics.\n  function_name: 'get_bigfive_scores' or null,\n  // List of user's behavioural characteristics.\n  characteristics: string[],\n  // The scoring scale of traits (default is medium).\n  scale: 'high' or 'medium' or 'low' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's my Big Five Personality trait scores given that I am efficient, organized, easy going and compassionate?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_bigfive_scores\",\n  \"characteristics\": [\"efficient\", \"organized\", \"easy going\", \"compassionate\"],\n  \"scale\": \"medium\"\n}\n\nBased on the provided behavioral characteristics of being efficient, organized, easy going, and compassionate, the likely Big Five Personality trait scores in the medium range would be:\n\n- Conscientiousness: High\n- Agreeableness: High\n- Neuroticism: Low\n- Extraversion: Medium\n- Openness: Medium\n\nThe efficient and organized traits suggest a high level of Conscientiousness, while the easy going and compassionate traits indicate a high level of Agreeableness. The medium levels for Extraversion and Openness are also plausible based on the given characteristics.", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 180, "total_tokens": 313, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "df1311b6-d873-4224-8cd1-867243e2982a", "event_id": "df1311b6-d873-4224-8cd1-867243e2982a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 214763, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_230", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "84320bc4-86ab-4ee4-9d78-e71a6a51a53b", "event_id": "afea9a80-a78b-4572-84ab-33af7ec975a9", "parent_event_id": "84320bc4-86ab-4ee4-9d78-e71a6a51a53b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 585, "start_time": "2024-06-20T03:56:13.781Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_231", "variant_name": null}, {"function_name": "Fn_simple_231", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_231\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"France\",\"date\":1510,\"meta\":\"Value\",\"title\":\"King\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_231_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve information about a historical leader given a location and date.\n  function_name: 'historic_leader_search' or null,\n  // The country or region in question.\n  location: string,\n  // The year being queried.\n  date: int,\n  // The official title of the position. Default is 'King'.\n  title: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the King of France in 1510?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"historic_leader_search\",\n  \"location\": \"France\",\n  \"date\": 1510,\n  \"title\": \"King\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 117, "output_tokens": 45, "total_tokens": 162, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "84320bc4-86ab-4ee4-9d78-e71a6a51a53b", "event_id": "84320bc4-86ab-4ee4-9d78-e71a6a51a53b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 215349, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_231", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3283f950-65a8-4245-92d6-75d47887d25d", "event_id": "e30c00ad-b6cb-4b1e-8157-b6850ec9f862", "parent_event_id": "3283f950-65a8-4245-92d6-75d47887d25d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1770, "start_time": "2024-06-20T03:56:14.367Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_232", "variant_name": null}, {"function_name": "Fn_simple_232", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_232\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"Germany\",\"start_year\":1871,\"end_year\":1945,\"event_type\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_232_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve key historical events within a specific period for a certain country.\n  function_name: 'history.get_key_events' or null,\n  // The name of the country for which history is queried.\n  country: string,\n  // Start year of the period for which history is queried.\n  start_year: int,\n  // End year of the period for which history is queried.\n  end_year: int,\n  // Types of event. Default to 'all', which all types will be considered.\n  event_type: [\n    'War' or 'Revolutions' or 'Diplomacy' or 'Economy'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Provide key war events in German history from 1871 to 1945."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"history.get_key_events\",\n  \"country\": \"Germany\",\n  \"start_year\": 1871,\n  \"end_year\": 1945,\n  \"event_type\": [\"War\"]\n}\n\nSome key war events in German history from 1871 to 1945:\n\n- Franco-Prussian War (1870-1871)\n- World War I (1914-1918)\n- World War II (1939-1945)\n- Annexation of Austria (1938)\n- Invasion of Poland (1939)\n- Battle of France (1940)\n- Battle of Britain (1940)\n- Operation Barbarossa (1941)\n- Battle of Stalingrad (1942-1943)\n- D-Day Invasion (1944)\n- Battle of the Bulge (1944-1945)\n- Fall of Berlin (1945)", "metadata": {"logprobs": null, "prompt_tokens": 193, "output_tokens": 228, "total_tokens": 421, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3283f950-65a8-4245-92d6-75d47887d25d", "event_id": "3283f950-65a8-4245-92d6-75d47887d25d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 217121, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_232", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "276fbbf1-5894-411b-a753-0759e6b1b544", "event_id": "274990ee-239b-4c47-a1e2-2c69f1ab27ea", "parent_event_id": "276fbbf1-5894-411b-a753-0759e6b1b544", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 609, "start_time": "2024-06-20T03:56:16.139Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_233", "variant_name": null}, {"function_name": "Fn_simple_233", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_233\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"England\",\"year\":1800,\"meta\":\"Value\",\"fullName\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_233_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the monarch of a specific location during a specified year.\n  function_name: 'monarch.getMonarchOfYear' or null,\n  // The location (e.g., country) whose monarch needs to be found.\n  location: string,\n  // The year to search the monarch.\n  year: int,\n  // If true, returns the full name and title of the monarch.\n  fullName: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What was the full name king of England in 1800?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"monarch.getMonarchOfYear\",\n  \"location\": \"England\",\n  \"year\": 1800,\n  \"fullName\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 46, "total_tokens": 178, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "276fbbf1-5894-411b-a753-0759e6b1b544", "event_id": "276fbbf1-5894-411b-a753-0759e6b1b544", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 217731, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_233", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f2b05faa-d2a7-46ef-82ba-c76f2449a13c", "event_id": "b74d651e-3851-44f9-8f2b-e5692210df24", "parent_event_id": "f2b05faa-d2a7-46ef-82ba-c76f2449a13c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 681, "start_time": "2024-06-20T03:56:16.749Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_234", "variant_name": null}, {"function_name": "Fn_simple_234", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_234\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event_name\":\"Treaty of Tordesillas\",\"meta\":\"Value\",\"format\":\"YYYY\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_234_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the date of a specific event in European history.\n  function_name: 'european_history.get_event_date' or null,\n  // The name of the event.\n  event_name: string,\n  // Optional format of the returned date. Default is 'MM-DD-YYYY'.\n  format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: When did the Treaty of Tordesillas take place? Put it in the format of YYYY."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"european_history.get_event_date\",\n  \"event_name\": \"Treaty of Tordesillas\",\n  \"format\": \"YYYY\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 121, "output_tokens": 48, "total_tokens": 169, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f2b05faa-d2a7-46ef-82ba-c76f2449a13c", "event_id": "f2b05faa-d2a7-46ef-82ba-c76f2449a13c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 218413, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_234", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cc068e99-8103-4509-83f0-58134215380f", "event_id": "236a2507-11fc-4d1d-b032-aa58edb1aca6", "parent_event_id": "cc068e99-8103-4509-83f0-58134215380f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 853, "start_time": "2024-06-20T03:56:17.431Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_235", "variant_name": null}, {"function_name": "Fn_simple_235", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_235\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": null}, "error": {"code": 2, "message": "Failed to coerce value: Error parsing '<root>': Unparsed field: region\n  Error parsing 'region': Expected Enum_Fn_simple_235_Enum0, got Europe.\n  String(\n      \"Europe\",\n  )", "traceback": null, "override": null}, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches significant historical events within a specific time period in European history.\n  function_name: 'history_eu.fetch_events' or null,\n  // The century you are interested in.\n  century: int,\n  // The region of Europe you are interested in.\n  region: 'Northern' or 'Southern' or 'Eastern' or 'Western',\n  // Category of the historical events. Default is 'Culture'.\n  category: 'Wars' or 'Culture' or 'Politics' or 'Scientific' or 'Others' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find important Wars in European history during the 19th century."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"history_eu.fetch_events\",\n  \"century\": 19,\n  \"region\": \"Europe\",\n  \"category\": \"Wars\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 165, "output_tokens": 56, "total_tokens": 221, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cc068e99-8103-4509-83f0-58134215380f", "event_id": "cc068e99-8103-4509-83f0-58134215380f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 219275, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_235", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"<class 'baml_py.BamlError'>: \\u001b[33mClient: ClaudeHaiku (claude-3-haiku-20240307) - 853ms\\u001b[0m\\n\\u001b[34m---PROMPT---\\u001b[0m\\n\\u001b[2m[\\u001b[2mchat\\u001b[0m\\u001b[2m] \\u001b[43msystem: \\u001b[0m\\u001b[2mAnswer in this schema:\\n\\n{\\n  // Fetches significant historical events within a specific time period in European history.\\n  function_name: 'history_eu.fetch_events' or null,\\n  // The century you are interested in.\\n  century: int,\\n  // The region of Europe you are interested in.\\n  region: 'Northern' or 'Southern' or 'Eastern' or 'Western',\\n  // Category of the historical events. Default is 'Culture'.\\n  category: 'Wars' or 'Culture' or 'Politics' or 'Scientific' or 'Others' or null,\\n}\\n\\u001b[43muser: \\u001b[0m\\u001b[2mQuestion: Find important Wars in European history during the 19th century.\\n\\u001b[0m\\n\\u001b[34m---LLM REPLY---\\u001b[0m\\n\\u001b[2mHere is the answer in the requested schema:\\n\\n{\\n  \\\"function_name\\\": \\\"history_eu.fetch_events\\\",\\n  \\\"century\\\": 19,\\n  \\\"region\\\": \\\"Europe\\\",\\n  \\\"category\\\": \\\"Wars\\\"\\n}\\u001b[0m\\n\\u001b[34m---Parsed Response---\\u001b[0m\\n\\u001b[31mFailed to coerce value: Error parsing '<root>': Unparsed field: region\\n  Error parsing 'region': Expected Enum_Fn_simple_235_Enum0, got Europe.\\n  String(\\n      \\\"Europe\\\",\\n  )\\u001b[0m\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0ab9c368-bd95-46aa-9108-e55bbc67ea26", "event_id": "4aa7e5e4-fafe-4080-93ad-a18dcfcd00df", "parent_event_id": "0ab9c368-bd95-46aa-9108-e55bbc67ea26", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 607, "start_time": "2024-06-20T03:56:18.293Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_236", "variant_name": null}, {"function_name": "Fn_simple_236", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_236\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event\":\"Treaty of Lisbon\",\"meta\":\"Value\",\"location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_236_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the date of a historical event.\n  function_name: 'get_event_date' or null,\n  // The name of the historical event.\n  event: string,\n  // Location where the event took place. Default to global if not specified.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: When was the signing of the Treaty of Lisbon?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_event_date\",\n  \"event\": \"Treaty of Lisbon\",\n  \"location\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 100, "output_tokens": 38, "total_tokens": 138, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0ab9c368-bd95-46aa-9108-e55bbc67ea26", "event_id": "0ab9c368-bd95-46aa-9108-e55bbc67ea26", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 219884, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_236", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "12e2d093-34f3-423a-90cd-6252c2968735", "event_id": "a42a18ca-528d-4827-90f0-176d15524623", "parent_event_id": "12e2d093-34f3-423a-90cd-6252c2968735", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 688, "start_time": "2024-06-20T03:56:18.902Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_237", "variant_name": null}, {"function_name": "Fn_simple_237", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_237\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event_name\":\"American Civil War\",\"specific_info\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_237_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve detailed information about a significant event in U.S. history.\n  function_name: 'us_history.get_event_info' or null,\n  // The name of the event.\n  event_name: string,\n  // Specific aspect of information related to event.\n  specific_info: 'Start Date' or 'End Date' or 'Participants' or 'Result' or 'Notable Figures' or 'Importance in History',\n}"}]}, {"role": "user", "content": [{"text": "Question: Get start date on the American Civil War."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"us_history.get_event_info\",\n  \"event_name\": \"American Civil War\",\n  \"specific_info\": \"Start Date\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 47, "total_tokens": 185, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "12e2d093-34f3-423a-90cd-6252c2968735", "event_id": "12e2d093-34f3-423a-90cd-6252c2968735", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 220573, "start_time": "2024-06-20T03:52:39.017Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_237", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "75881621-c889-4ef3-9b1a-33a3fe42d352", "event_id": "a227923b-70a0-44ea-b1cd-68e2a0816578", "parent_event_id": "75881621-c889-4ef3-9b1a-33a3fe42d352", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 612, "start_time": "2024-06-20T03:56:19.591Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_238", "variant_name": null}, {"function_name": "Fn_simple_238", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_238\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"United States\",\"start_year\":1960,\"end_year\":2000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_238_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve historical GDP data for a specific country and time range.\n  function_name: 'get_historical_GDP' or null,\n  // The country for which the historical GDP data is required.\n  country: string,\n  // Starting year of the period for which GDP data is required.\n  start_year: int,\n  // Ending year of the period for which GDP data is required.\n  end_year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get historical GDP data for United States from 1960 to 2000."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_historical_GDP\",\n  \"country\": \"United States\",\n  \"start_year\": 1960,\n  \"end_year\": 2000\n}", "metadata": {"logprobs": null, "prompt_tokens": 135, "output_tokens": 50, "total_tokens": 185, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "75881621-c889-4ef3-9b1a-33a3fe42d352", "event_id": "75881621-c889-4ef3-9b1a-33a3fe42d352", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 221187, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_238", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7ff91c87-6023-4d15-b4d9-90aed3350928", "event_id": "5d1d4d52-5e93-414c-a61e-ef81e9e45fda", "parent_event_id": "7ff91c87-6023-4d15-b4d9-90aed3350928", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 589, "start_time": "2024-06-20T03:56:20.205Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_239", "variant_name": null}, {"function_name": "Fn_simple_239", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_239\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event\":\"American Civil War\",\"year\":1861,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_239_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the U.S. president during a specific event in American history.\n  function_name: 'us_history.get_president' or null,\n  // The event in U.S. history.\n  event: string,\n  // The specific year of the event.\n  year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the president of the United States during the American Civil War?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"us_history.get_president\",\n  \"event\": \"American Civil War\",\n  \"year\": 1861\n}", "metadata": {"logprobs": null, "prompt_tokens": 104, "output_tokens": 40, "total_tokens": 144, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7ff91c87-6023-4d15-b4d9-90aed3350928", "event_id": "7ff91c87-6023-4d15-b4d9-90aed3350928", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 221778, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_239", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f4939707-f6d6-477f-a29f-eaac7b89d6af", "event_id": "730d1174-46c1-436f-850c-38c1801593c3", "parent_event_id": "f4939707-f6d6-477f-a29f-eaac7b89d6af", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 580, "start_time": "2024-06-20T03:56:20.796Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_240", "variant_name": null}, {"function_name": "Fn_simple_240", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_240\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"year\":1861,\"meta\":\"Value\",\"full_name\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_240_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the name of the U.S. president in a given year.\n  function_name: 'US_president.in_year' or null,\n  // The year in question.\n  year: int,\n  // Option to return full name with middle initial, if applicable. (default: True)\n  full_name: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the full name of the president of the United States in 1861?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"US_president.in_year\",\n  \"year\": 1861,\n  \"full_name\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 117, "output_tokens": 39, "total_tokens": 156, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f4939707-f6d6-477f-a29f-eaac7b89d6af", "event_id": "f4939707-f6d6-477f-a29f-eaac7b89d6af", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 222359, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_240", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "319312cc-bde7-4c94-b1bb-d9a191b73533", "event_id": "f76e158d-eef3-43d9-b055-c5f88358c137", "parent_event_id": "319312cc-bde7-4c94-b1bb-d9a191b73533", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 799, "start_time": "2024-06-20T03:56:21.377Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_241", "variant_name": null}, {"function_name": "Fn_simple_241", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_241\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"year\":1940,\"meta\":\"Value\",\"full_term_only\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_241_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the name of the U.S. President for a specified year.\n  function_name: 'history_api.get_president_by_year' or null,\n  // The year you want to know the U.S. president of.\n  year: int,\n  // Flag to determine if we should only return presidents that served a full term for the specified year.\n  full_term_only: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the President of the United States in 1940?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"history_api.get_president_by_year\",\n  \"year\": 1940,\n  \"full_term_only\": false\n}\n\nThe president of the United States in 1940 was Franklin D. Roosevelt.", "metadata": {"logprobs": null, "prompt_tokens": 129, "output_tokens": 73, "total_tokens": 202, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "319312cc-bde7-4c94-b1bb-d9a191b73533", "event_id": "319312cc-bde7-4c94-b1bb-d9a191b73533", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 223159, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_241", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "539b7b23-2985-4421-9654-279f6dd4167c", "event_id": "f426fd69-5686-4458-8138-f197295f461c", "parent_event_id": "539b7b23-2985-4421-9654-279f6dd4167c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 657, "start_time": "2024-06-20T03:56:22.177Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_242", "variant_name": null}, {"function_name": "Fn_simple_242", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_242\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event\":\"Civil War\",\"meta\":\"Value\",\"country\":\"USA\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_242_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Returns the U.S. president during a specified historical event.\n  function_name: 'US_President_During_Event' or null,\n  // The historical event.\n  event: string,\n  // The country the president leads (optional parameter, defaults to 'USA' if not specified).\n  country: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the U.S. president during the Civil War?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"US_President_During_Event\",\n  \"event\": \"Civil War\",\n  \"country\": \"USA\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 39, "total_tokens": 148, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "539b7b23-2985-4421-9654-279f6dd4167c", "event_id": "539b7b23-2985-4421-9654-279f6dd4167c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 223817, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_242", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "69bfac7d-5aaf-4176-adec-915d1c4c00eb", "event_id": "7ee34855-e657-435e-85d0-045be77d7fbd", "parent_event_id": "69bfac7d-5aaf-4176-adec-915d1c4c00eb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 571, "start_time": "2024-06-20T03:56:22.835Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_243", "variant_name": null}, {"function_name": "Fn_simple_243", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_243\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"discovery\":\"theory of evolution\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_243_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the scientist's name who is credited for a specific scientific discovery or theory.\n  function_name: 'get_scientist_for_discovery' or null,\n  // The scientific discovery or theory.\n  discovery: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who is the scientist that first proposed the theory of evolution?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  function_name: 'get_scientist_for_discovery',\n  discovery: 'theory of evolution'\n}", "metadata": {"logprobs": null, "prompt_tokens": 84, "output_tokens": 32, "total_tokens": 116, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "69bfac7d-5aaf-4176-adec-915d1c4c00eb", "event_id": "69bfac7d-5aaf-4176-adec-915d1c4c00eb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 224391, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_243", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "86811e0d-9e68-40ae-b093-75325e442f1a", "event_id": "0395dc36-be2a-49d0-9be7-cf41ab9a0373", "parent_event_id": "86811e0d-9e68-40ae-b093-75325e442f1a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 638, "start_time": "2024-06-20T03:56:23.409Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_244", "variant_name": null}, {"function_name": "Fn_simple_244", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_244\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"discovery\":\"neutron\",\"detail\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_244_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the person or team who made a particular scientific discovery\n  function_name: 'get_discoverer' or null,\n  // The discovery for which the discoverer's information is needed.\n  discovery: string,\n  // Optional flag to get additional details about the discoverer, such as birth date and nationality. Defaults to false.\n  detail: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who discovered the neutron? Give me detail information."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_discoverer\",\n  \"discovery\": \"neutron\",\n  \"detail\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 112, "output_tokens": 34, "total_tokens": 146, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "86811e0d-9e68-40ae-b093-75325e442f1a", "event_id": "86811e0d-9e68-40ae-b093-75325e442f1a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 225030, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_244", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "151175a4-6dad-4689-a971-5c73021fd8b8", "event_id": "9ffaca25-5f10-493f-a2c3-4b8a79898ab1", "parent_event_id": "151175a4-6dad-4689-a971-5c73021fd8b8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1297, "start_time": "2024-06-20T03:56:24.048Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_245", "variant_name": null}, {"function_name": "Fn_simple_245", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_245\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"author\":\"Isaac Newton\",\"work_title\":\"Philosophi\u00e6 Naturalis Principia Mathematica (Mathematical Principles of Natural Philosophy)\",\"meta\":\"Value\",\"location\":\"London\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_245_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the year a particular scientific work was published.\n  function_name: 'publication_year.find' or null,\n  // Name of the author of the work.\n  author: string,\n  // Title of the scientific work.\n  work_title: string,\n  // Place of the publication, if known. Default to 'all'.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What year was the law of universal gravitation published by Isaac Newton?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"publication_year.find\",\n  \"author\": \"Isaac Newton\",\n  \"work_title\": \"Philosophi\u00e6 Naturalis Principia Mathematica (Mathematical Principles of Natural Philosophy)\",\n  \"location\": \"London\"\n}\n\nThe law of universal gravitation was published by Isaac Newton in his work \"Philosophi\u00e6 Naturalis Principia Mathematica\" in 1687, in London.", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 106, "total_tokens": 229, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "151175a4-6dad-4689-a971-5c73021fd8b8", "event_id": "151175a4-6dad-4689-a971-5c73021fd8b8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 226329, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_245", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b26643c3-3b9a-450c-9552-27b3da253e24", "event_id": "a187741a-be2e-4476-93f4-fc81f1c6269c", "parent_event_id": "b26643c3-3b9a-450c-9552-27b3da253e24", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 603, "start_time": "2024-06-20T03:56:25.349Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_246", "variant_name": null}, {"function_name": "Fn_simple_246", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_246\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"element_name\":\"radium\",\"meta\":\"Value\",\"year\":null,\"first\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_246_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the name of the discoverer of an element based on its name.\n  function_name: 'discoverer.get' or null,\n  // The name of the element.\n  element_name: string,\n  // Optional parameter that refers to the year of discovery. It could be helpful in case an element was discovered more than once. Default to 0, which means not use it.\n  year: int or null,\n  // Optional parameter indicating if the first discoverer's name should be retrieved. (default: True)\n  first: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who discovered radium?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"discoverer.get\",\n  \"element_name\": \"radium\",\n  \"year\": null,\n  \"first\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 43, "total_tokens": 194, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b26643c3-3b9a-450c-9552-27b3da253e24", "event_id": "b26643c3-3b9a-450c-9552-27b3da253e24", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 226935, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_246", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "84f746cf-325d-4bf4-bbea-0c27558921ed", "event_id": "8f4fa4d5-1547-4e55-a29f-e83ef3a30b7f", "parent_event_id": "84f746cf-325d-4bf4-bbea-0c27558921ed", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 831, "start_time": "2024-06-20T03:56:25.953Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_247", "variant_name": null}, {"function_name": "Fn_simple_247", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_247\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"discovery\":\"Gravity\",\"meta\":\"Value\",\"method_used\":\"Experimental and Theoretical\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_247_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the details of a scientific discovery based on the discovery name.\n  function_name: 'science_history.get_discovery_details' or null,\n  // The name of the discovery, e.g. Gravity\n  discovery: string,\n  // The method used for the discovery, default value is 'default' which gives the most accepted method.\n  method_used: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who discovered Gravity and what was the method used?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"science_history.get_discovery_details\",\n  \"discovery\": \"Gravity\",\n  \"method_used\": \"Experimental and Theoretical\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 122, "output_tokens": 47, "total_tokens": 169, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "84f746cf-325d-4bf4-bbea-0c27558921ed", "event_id": "84f746cf-325d-4bf4-bbea-0c27558921ed", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 227767, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_247", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ead2c6cc-523b-4faf-b7e9-b4abcd80101f", "event_id": "9349dc9c-3566-47c1-a6b7-dc5ebcf5f597", "parent_event_id": "ead2c6cc-523b-4faf-b7e9-b4abcd80101f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1743, "start_time": "2024-06-20T03:56:26.785Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_248", "variant_name": null}, {"function_name": "Fn_simple_248", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_248\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"scientist\":\"Albert Einstein\",\"date\":\"1915-03-17\",\"meta\":\"Value\",\"category\":\"Physics\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_248_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve historical contribution made by a scientist on a specific date.\n  function_name: 'historical_contrib.get_contrib' or null,\n  // The scientist whose contributions need to be searched.\n  scientist: string,\n  // The date when the contribution was made in yyyy-mm-dd format.\n  date: string,\n  // The field of the contribution, such as 'Physics' or 'Chemistry'. Default is 'all'.\n  category: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What was Albert Einstein's contribution to science on March 17, 1915?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"historical_contrib.get_contrib\",\n  \"scientist\": \"Albert Einstein\",\n  \"date\": \"1915-03-17\",\n  \"category\": \"Physics\"\n}\n\nOn March 17, 1915, Albert Einstein presented his field equations of general relativity to the Prussian Academy of Sciences. This represented a major breakthrough in Einstein's development of the general theory of relativity, which fundamentally changed our understanding of gravity, space, and time.\n\nThe field equations Einstein presented on this date provided the mathematical foundation for general relativity, describing how the curvature of spacetime is related to the distribution of matter and energy in the universe. This laid the groundwork for many important predictions of general relativity, such as the existence of black holes, gravitational waves, and the overall structure and evolution of the universe.", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 198, "total_tokens": 344, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ead2c6cc-523b-4faf-b7e9-b4abcd80101f", "event_id": "ead2c6cc-523b-4faf-b7e9-b4abcd80101f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 229511, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_248", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ab1c1ab4-f345-4e77-8606-c396b280511e", "event_id": "258ff388-ef7d-43d3-8306-08a317347509", "parent_event_id": "ab1c1ab4-f345-4e77-8606-c396b280511e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 712, "start_time": "2024-06-20T03:56:28.529Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_249", "variant_name": null}, {"function_name": "Fn_simple_249", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_249\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"invention_name\":\"theory of relativity\",\"want_year\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_249_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the inventor and year of invention based on the invention's name.\n  function_name: 'science_history.get_invention' or null,\n  // The name of the invention.\n  invention_name: string,\n  // Return the year of invention if set to true.\n  want_year: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who invented the theory of relativity and in which year?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"science_history.get_invention\",\n  \"invention_name\": \"theory of relativity\",\n  \"want_year\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 105, "output_tokens": 43, "total_tokens": 148, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ab1c1ab4-f345-4e77-8606-c396b280511e", "event_id": "ab1c1ab4-f345-4e77-8606-c396b280511e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 230225, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_249", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "55045f97-4842-4ae0-bef6-b00f0df0ddfc", "event_id": "fb2bb2c6-9441-4ee0-973c-deb19fe1d1c8", "parent_event_id": "55045f97-4842-4ae0-bef6-b00f0df0ddfc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 682, "start_time": "2024-06-20T03:56:29.243Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_250", "variant_name": null}, {"function_name": "Fn_simple_250", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_250\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion\":\"Christianity\",\"till_century\":14,\"meta\":\"Value\",\"include_people\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_250_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Provides comprehensive historical details about a specified religion till a specified century.\n  function_name: 'religion.history_info' or null,\n  // The name of the religion for which historical details are needed.\n  religion: string,\n  // The century till which historical details are needed.\n  till_century: int,\n  // To include influential people related to the religion during that time period, default is False\n  include_people: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Tell me more about Christianity and its history till the 14th century"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"religion.history_info\",\n  \"religion\": \"Christianity\",\n  \"till_century\": 14,\n  \"include_people\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 46, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "55045f97-4842-4ae0-bef6-b00f0df0ddfc", "event_id": "55045f97-4842-4ae0-bef6-b00f0df0ddfc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 230908, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_250", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b8daeeb9-f568-4fb2-8b1a-0ab05e5a5cd6", "event_id": "d2752c02-4e72-4830-8b17-0138e9483776", "parent_event_id": "b8daeeb9-f568-4fb2-8b1a-0ab05e5a5cd6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 559, "start_time": "2024-06-20T03:56:29.926Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_251", "variant_name": null}, {"function_name": "Fn_simple_251", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_251\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"place1\":\"San Francisco\",\"place2\":\"Sydney\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_251_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the time difference between two places.\n  function_name: 'get_time_difference' or null,\n  // The first place for time difference.\n  place1: string,\n  // The second place for time difference.\n  place2: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the time difference between San Francisco and Sydney?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_time_difference\",\n  \"place1\": \"San Francisco\",\n  \"place2\": \"Sydney\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 91, "output_tokens": 39, "total_tokens": 130, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b8daeeb9-f568-4fb2-8b1a-0ab05e5a5cd6", "event_id": "b8daeeb9-f568-4fb2-8b1a-0ab05e5a5cd6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 231468, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_251", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "16a67a46-eb57-4849-b7a4-0bd905ee1576", "event_id": "4b62a4ae-9994-45f8-9ec0-d03c186dc6f5", "parent_event_id": "16a67a46-eb57-4849-b7a4-0bd905ee1576", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1760, "start_time": "2024-06-20T03:56:30.486Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_252", "variant_name": null}, {"function_name": "Fn_simple_252", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_252\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Jesus Christ\",\"meta\":\"Value\",\"source\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_252_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the earliest historical reference of a person.\n  function_name: 'get_earliest_reference' or null,\n  // The name of the person.\n  name: string,\n  // Source to fetch the reference. Default is 'scriptures'\n  source: 'scriptures' or 'historical records' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the earliest reference of Jesus Christ in history from historical record?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_earliest_reference\",\n  \"name\": \"Jesus Christ\",\n  \"source\": \"historical records\"\n}\n\nThe earliest historical reference to Jesus Christ is found in the writings of the Roman historian Tacitus. In his work \"Annals\", written around 116 AD, Tacitus briefly mentions Jesus and the persecution of Christians under the Roman emperor Nero.\n\nSpecifically, Tacitus writes:\n\n\"Consequently, to get rid of the report, Nero fastened the guilt and inflicted the most exquisite tortures on a class hated for their abominations, called Christians by the populace. Christus, from whom the name had its origin, suffered the extreme penalty during the reign of Tiberius at the hands of one of our procurators, Pontius Pilatus...\"\n\nThis is considered the earliest non-Christian historical reference to Jesus Christ, predating the earliest Christian sources by several decades.", "metadata": {"logprobs": null, "prompt_tokens": 111, "output_tokens": 224, "total_tokens": 335, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "16a67a46-eb57-4849-b7a4-0bd905ee1576", "event_id": "16a67a46-eb57-4849-b7a4-0bd905ee1576", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 233229, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_252", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "79ac66c8-0402-4bbd-98fe-71acce8faaeb", "event_id": "6e7ce1b5-936b-44a4-8fb0-8458f78b0861", "parent_event_id": "79ac66c8-0402-4bbd-98fe-71acce8faaeb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 623, "start_time": "2024-06-20T03:56:32.247Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_253", "variant_name": null}, {"function_name": "Fn_simple_253", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_253\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion\":\"Christianity\",\"century\":16,\"meta\":\"Value\",\"sort_by\":\"Value0\",\"count\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_253_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves significant religious events, including the details of the event, its historical context, and its impacts.\n  function_name: 'get_religion_history' or null,\n  // Name of the religion to be queried.\n  religion: string,\n  // The century in which the event(s) took place.\n  century: int,\n  // Order of sorting the events. Default is chronological. (default: chronological)\n  sort_by: 'importance' or 'chronological' or null,\n  // Number of events to return. Default is 5. (default: 5)\n  count: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find ten major historical events related to Christianity in the 16th century sort by importance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_religion_history\",\n  \"religion\": \"Christianity\",\n  \"century\": 16,\n  \"sort_by\": \"importance\",\n  \"count\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 184, "output_tokens": 53, "total_tokens": 237, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "79ac66c8-0402-4bbd-98fe-71acce8faaeb", "event_id": "79ac66c8-0402-4bbd-98fe-71acce8faaeb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 233853, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_253", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "87d8b194-b7f6-41d4-b87b-b2b4be32fa39", "event_id": "cdf9a6e4-08da-41dd-a537-9803bff933bc", "parent_event_id": "87d8b194-b7f6-41d4-b87b-b2b4be32fa39", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 671, "start_time": "2024-06-20T03:56:32.871Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_254", "variant_name": null}, {"function_name": "Fn_simple_254", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_254\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion_name\":\"Buddhism\",\"detail_level\":\"full\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_254_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the history and main beliefs of a religion.\n  function_name: 'retrieve_religion_info' or null,\n  // The name of the religion.\n  religion_name: string,\n  // Level of detail for the returned information, either 'summary' or 'full'. (default: summary)\n  detail_level: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve the full historyof Buddhism"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"retrieve_religion_info\",\n  \"religion_name\": \"Buddhism\",\n  \"detail_level\": \"full\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 108, "output_tokens": 40, "total_tokens": 148, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "87d8b194-b7f6-41d4-b87b-b2b4be32fa39", "event_id": "87d8b194-b7f6-41d4-b87b-b2b4be32fa39", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 234525, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_254", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "aebae24c-d0f5-4143-b2eb-1eaced222994", "event_id": "bbce2ba5-bbee-4211-ab15-55c0925559dc", "parent_event_id": "aebae24c-d0f5-4143-b2eb-1eaced222994", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1317, "start_time": "2024-06-20T03:56:33.543Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_255", "variant_name": null}, {"function_name": "Fn_simple_255", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_255\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion\":\"Christianity\",\"start_year\":300,\"end_year\":400,\"meta\":\"Value\",\"event_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_255_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves historic events and facts related to a specified religion for a given period.\n  function_name: 'get_religion_history' or null,\n  // The name of the religion.\n  religion: string,\n  // The starting year of the period.\n  start_year: int,\n  // The end year of the period.\n  end_year: int,\n  // Optional parameter specifying the type of event. Default is 'all'.\n  event_type: 'all' or 'crusade' or 'schism' or 'reform' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Retrieve the historic dates and facts related to Christianity between year 300 and 400."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_religion_history\",\n  \"religion\": \"Christianity\",\n  \"start_year\": 300,\n  \"end_year\": 400,\n  \"event_type\": \"all\"\n}\n\nThe key details are:\n- The function to call is \"get_religion_history\"\n- The religion is \"Christianity\"\n- The start year is 300 and the end year is 400\n- The event type is set to \"all\" to retrieve all relevant events and facts during that period.", "metadata": {"logprobs": null, "prompt_tokens": 173, "output_tokens": 134, "total_tokens": 307, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "aebae24c-d0f5-4143-b2eb-1eaced222994", "event_id": "aebae24c-d0f5-4143-b2eb-1eaced222994", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 235843, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_255", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c1490d61-1e12-4333-8227-4bfb6022e005", "event_id": "f7aa04a3-28bb-4474-a47a-ea266835f9c2", "parent_event_id": "c1490d61-1e12-4333-8227-4bfb6022e005", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 496, "start_time": "2024-06-20T03:56:34.861Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_256", "variant_name": null}, {"function_name": "Fn_simple_256", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_256\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"papal_name\":\"Innocent III\",\"include_contributions\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_256_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the biography and main religious and historical contributions of a Pope based on his papal name.\n  function_name: 'religious_history.get_papal_biography' or null,\n  // The papal name of the Pope.\n  papal_name: string,\n  // Include main contributions of the Pope in the response if true.\n  include_contributions: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the biography and main contributions of Pope Innocent III."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"religious_history.get_papal_biography\",\n  \"papal_name\": \"Innocent III\",\n  \"include_contributions\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 44, "total_tokens": 158, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c1490d61-1e12-4333-8227-4bfb6022e005", "event_id": "c1490d61-1e12-4333-8227-4bfb6022e005", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 236341, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_256", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3b57a823-5e63-4c0f-92c8-c5a60a1ace47", "event_id": "73a1e506-afda-445e-9abb-596a58484d7a", "parent_event_id": "3b57a823-5e63-4c0f-92c8-c5a60a1ace47", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 641, "start_time": "2024-06-20T03:56:35.359Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_257", "variant_name": null}, {"function_name": "Fn_simple_257", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_257\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":50,\"color\":\"Red\",\"meta\":\"Value\",\"background\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_257_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generates a circle image based on the given radius and color\n  function_name: 'generate_circle_image' or null,\n  // The radius of the circle in pixels.\n  radius: int,\n  // The color of the circle.\n  color: string,\n  // Optional: The color of the background, default is white.\n  background: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate an image of a circle with a radius of 50 pixels and color 'Red'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"generate_circle_image\",\n  \"radius\": 50,\n  \"color\": \"Red\",\n  \"background\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 125, "output_tokens": 42, "total_tokens": 167, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3b57a823-5e63-4c0f-92c8-c5a60a1ace47", "event_id": "3b57a823-5e63-4c0f-92c8-c5a60a1ace47", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 236982, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_257", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6ea5768f-df55-44e3-8778-dc2c84dbf1fb", "event_id": "a1ee9e8d-7fd8-4a57-9525-1bf60c88dbe6", "parent_event_id": "6ea5768f-df55-44e3-8778-dc2c84dbf1fb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 878, "start_time": "2024-06-20T03:56:36.001Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_258", "variant_name": null}, {"function_name": "Fn_simple_258", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_258\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"color_name\":\"Sea Green\",\"meta\":\"Value\",\"standard\":\"basic\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_258_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // This function identifies the RGB values of a named color.\n  function_name: 'identify_color_rgb' or null,\n  // Name of the color.\n  color_name: string,\n  // The color standard (e.g. basic, pantone). Default is 'basic'\n  standard: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you help me identify the basic RGB value of Sea Green color?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the requested information in the specified schema:\n\n{\n  \"function_name\": \"identify_color_rgb\",\n  \"color_name\": \"Sea Green\",\n  \"standard\": \"basic\"\n}\n\nThe basic RGB value for the color Sea Green is:\nR: 46\nG: 139\nB: 87", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 77, "total_tokens": 186, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6ea5768f-df55-44e3-8778-dc2c84dbf1fb", "event_id": "6ea5768f-df55-44e3-8778-dc2c84dbf1fb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 237862, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_258", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ed76530d-e8bb-4360-af1e-3f3524dfe68b", "event_id": "c43717c8-8810-4c45-a549-72dda9d45ff5", "parent_event_id": "ed76530d-e8bb-4360-af1e-3f3524dfe68b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 743, "start_time": "2024-06-20T03:56:36.880Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_259", "variant_name": null}, {"function_name": "Fn_simple_259", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_259\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"color1\":\"yellow\",\"color2\":\"blue\",\"meta\":\"Value\",\"lightness\":60}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_259_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Combine two primary paint colors and adjust the resulting color's lightness level.\n  function_name: 'mix_paint_color' or null,\n  // The first primary color to be mixed.\n  color1: string,\n  // The second primary color to be mixed.\n  color2: string,\n  // The desired lightness level of the resulting color in percentage. The default level is set to 50.\n  lightness: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Mix yellow and blue colors and adjust the lightness level to 60 percent."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"mix_paint_color\",\n  \"color1\": \"yellow\",\n  \"color2\": \"blue\",\n  \"lightness\": 60\n}", "metadata": {"logprobs": null, "prompt_tokens": 140, "output_tokens": 46, "total_tokens": 186, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ed76530d-e8bb-4360-af1e-3f3524dfe68b", "event_id": "ed76530d-e8bb-4360-af1e-3f3524dfe68b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 238607, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_259", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fa6de372-2d61-499e-8f19-33a3e121d674", "event_id": "bfd1414c-5130-4c8e-873b-6e8743b54dba", "parent_event_id": "fa6de372-2d61-499e-8f19-33a3e121d674", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1641, "start_time": "2024-06-20T03:56:37.625Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_260", "variant_name": null}, {"function_name": "Fn_simple_260", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_260\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coverage_rate\":400,\"length\":30,\"height\":12,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_260_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the amount of paint needed to cover a surface area based on the coverage rate of a specific paint brand.\n  function_name: 'calculate_paint_needed' or null,\n  // The area in square feet that one gallon of paint can cover.\n  coverage_rate: int,\n  // Length of the wall to be painted in feet.\n  length: int,\n  // Height of the wall to be painted in feet.\n  height: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the total quantity of paint needed to cover a wall of 30 feet by 12 feet using a specific brand that covers 400 square feet per gallon."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_paint_needed\",\n  \"coverage_rate\": 400,\n  \"length\": 30,\n  \"height\": 12\n}\n\nTo calculate the total quantity of paint needed, we need to:\n1. Calculate the total surface area of the wall:\n   Surface area = length x height\n   Surface area = 30 feet x 12 feet = 360 square feet\n2. Calculate the number of gallons of paint needed:\n   Gallons of paint = Surface area / Coverage rate\n   Gallons of paint = 360 square feet / 400 square feet per gallon = 0.9 gallons\n3. Round up the result to the nearest whole number to ensure complete coverage:\n   Total paint needed = 1 gallon\n\nTherefore, the total quantity of paint needed to cover the wall of 30 feet by 12 feet using a specific brand that covers 400 square feet per gallon is 1 gallon.", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 227, "total_tokens": 386, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fa6de372-2d61-499e-8f19-33a3e121d674", "event_id": "fa6de372-2d61-499e-8f19-33a3e121d674", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 240249, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_260", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f1f6e26e-84b7-4b5c-a04e-8cb2eea9bc0b", "event_id": "ba3112d4-4a46-4ded-93d0-74dd3190dc0b", "parent_event_id": "f1f6e26e-84b7-4b5c-a04e-8cb2eea9bc0b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2315, "start_time": "2024-06-20T03:56:39.267Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_261", "variant_name": null}, {"function_name": "Fn_simple_261", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_261\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"area\":{\"width\":20,\"height\":12},\"paint_coverage\":350,\"meta\":\"Value\",\"exclusion\":{\"type\":\"window\",\"area\":15}}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_261_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the amount of paint required to paint a given area. Account for coverage efficiency of the paint and exclusions (like windows).\n  function_name: 'paint_requirement.calculate' or null,\n  // The area to be painted.\n  area: {\n    // The width of the area to be painted in feet.\n    width: int or null,\n    // The height of the area to be painted in feet.\n    height: int or null,\n  },\n  // Coverage area per gallon of the paint in square feet. (default: 350)\n  paint_coverage: int,\n  // Area not to be painted. Default to not use any exclusion if not specified.\n  exclusion: {\n    // The type of the exclusion e.g window, door etc.\n    type: string or null,\n    // The area of the exclusion in square feet.\n    area: int or null,\n  } or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate how many gallons of paint is required to paint a wall with width of 20ft and height of 12ft, assuming 1 gallon covers approximately 350 sq.ft. Don't include window area of 15 sq.ft."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the solution based on the provided schema:\n\n{\n  \"function_name\": \"paint_requirement.calculate\",\n  \"area\": {\n    \"width\": 20,\n    \"height\": 12\n  },\n  \"paint_coverage\": 350,\n  \"exclusion\": {\n    \"type\": \"window\",\n    \"area\": 15\n  }\n}\n\nThe calculation is as follows:\n\n1. Total area to be painted:\n   - Width: 20 ft\n   - Height: 12 ft\n   - Total area = 20 ft x 12 ft = 240 sq.ft.\n\n2. Exclusion area:\n   - Window area: 15 sq.ft.\n\n3. Net area to be painted:\n   - Net area = Total area - Exclusion area\n   - Net area = 240 sq.ft. - 15 sq.ft. = 225 sq.ft.\n\n4. Paint required:\n   - Paint coverage per gallon: 350 sq.ft.\n   - Paint required = Net area / Paint coverage per gallon\n   - Paint required = 225 sq.ft. / 350 sq.ft. per gallon = 0.64 gallons\n\nTherefore, the amount of paint required to paint the wall with a width of 20 ft and a height of 12 ft, excluding a window area of 15 sq.ft., is approximately 0.64 gallons.", "metadata": {"logprobs": null, "prompt_tokens": 286, "output_tokens": 338, "total_tokens": 624, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f1f6e26e-84b7-4b5c-a04e-8cb2eea9bc0b", "event_id": "f1f6e26e-84b7-4b5c-a04e-8cb2eea9bc0b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 242566, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_261", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d3008b85-903e-4890-bc5e-d1a5a103475e", "event_id": "8a43e8e6-26aa-4bdb-8b42-e443e5da9cc2", "parent_event_id": "d3008b85-903e-4890-bc5e-d1a5a103475e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 559, "start_time": "2024-06-20T03:56:41.585Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_262", "variant_name": null}, {"function_name": "Fn_simple_262", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_262\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"width\":20,\"height\":10,\"meta\":\"Value\",\"color\":\"red\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_262_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Draw a rectangle given its width and height.\n  function_name: 'draw_rectangle' or null,\n  // The width of the rectangle.\n  width: int,\n  // The height of the rectangle.\n  height: int,\n  // The color of the rectangle. Default is 'black'.\n  color: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Draw a rectangle with a width of 20 units and height of 10 units in red."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"draw_rectangle\",\n  \"width\": 20,\n  \"height\": 10,\n  \"color\": \"red\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 119, "output_tokens": 52, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d3008b85-903e-4890-bc5e-d1a5a103475e", "event_id": "d3008b85-903e-4890-bc5e-d1a5a103475e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 243127, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_262", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9041654d-9ab2-4f94-8b8b-73ea6cd3964f", "event_id": "62382f5a-b7a5-4fa5-8404-04b1096e2630", "parent_event_id": "9041654d-9ab2-4f94-8b8b-73ea6cd3964f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:56:42.145Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_263", "variant_name": null}, {"function_name": "Fn_simple_263", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_263\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"size\":\"12x18\",\"medium\":\"oil\",\"meta\":\"Value\",\"dominant_color\":\"red\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_263_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Modify an existing painting's attributes such as size, medium, and color.\n  function_name: 'modify_painting' or null,\n  // The size of the painting in inches, width by height.\n  size: string,\n  // The medium of the painting, such as oil, acrylic, etc.\n  medium: string,\n  // The dominant color of the painting. Default to 'black'.\n  dominant_color: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Change my painting's medium to oil and change size to 12x18 with red dominant color."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"modify_painting\",\n  \"size\": \"12x18\",\n  \"medium\": \"oil\",\n  \"dominant_color\": \"red\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 56, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9041654d-9ab2-4f94-8b8b-73ea6cd3964f", "event_id": "9041654d-9ab2-4f94-8b8b-73ea6cd3964f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 243844, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_263", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "626b5cde-4963-4742-b7ed-33820aabd406", "event_id": "4ddd05ba-e4db-4f7c-b537-514367a8c01c", "parent_event_id": "626b5cde-4963-4742-b7ed-33820aabd406", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 682, "start_time": "2024-06-20T03:56:42.862Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_264", "variant_name": null}, {"function_name": "Fn_simple_264", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_264\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist_name\":\"James Plensa\",\"meta\":\"Value\",\"year\":null,\"detail\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_264_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves the most recent artwork by a specified artist with its detailed description.\n  function_name: 'get_sculpture_info' or null,\n  // The name of the artist.\n  artist_name: string,\n  // Year of the sculpture. This is optional. Default is the most recent year.\n  year: int or null,\n  // If True, it provides detailed description of the sculpture. Defaults to False.\n  detail: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the most recent art sculpture by James Plensa with detailed description."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_sculpture_info\",\n  \"artist_name\": \"James Plensa\",\n  \"year\": null,\n  \"detail\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 141, "output_tokens": 46, "total_tokens": 187, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "626b5cde-4963-4742-b7ed-33820aabd406", "event_id": "626b5cde-4963-4742-b7ed-33820aabd406", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 244528, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_264", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d2d1fe70-062d-44da-8ff9-bbe1359450e5", "event_id": "7f2aa1d7-54be-458c-a878-14c088ee82ad", "parent_event_id": "d2d1fe70-062d-44da-8ff9-bbe1359450e5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 647, "start_time": "2024-06-20T03:56:43.546Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_265", "variant_name": null}, {"function_name": "Fn_simple_265", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_265\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"Michelangelo\",\"title\":\"David\",\"meta\":\"Value\",\"detail\":\"size\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_265_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve details of a sculpture based on the artist and the title of the sculpture.\n  function_name: 'sculpture.get_details' or null,\n  // The artist who made the sculpture.\n  artist: string,\n  // The title of the sculpture.\n  title: string,\n  // The specific detail wanted about the sculpture. Default is 'general information'.\n  detail: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the size of the sculpture with title 'David' by Michelangelo."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sculpture.get_details\",\n  \"artist\": \"Michelangelo\",\n  \"title\": \"David\",\n  \"detail\": \"size\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 131, "output_tokens": 48, "total_tokens": 179, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d2d1fe70-062d-44da-8ff9-bbe1359450e5", "event_id": "d2d1fe70-062d-44da-8ff9-bbe1359450e5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 245176, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_265", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "944122d8-145b-44d4-bc72-16d17adb2b54", "event_id": "dfd75d9d-075a-472b-9248-7bdd87792386", "parent_event_id": "944122d8-145b-44d4-bc72-16d17adb2b54", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 680, "start_time": "2024-06-20T03:56:44.194Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_266", "variant_name": null}, {"function_name": "Fn_simple_266", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_266\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Chicago\",\"time_frame\":\"19th century\",\"meta\":\"Value\",\"material\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_266_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find sculptures based on location and a specific time frame.\n  function_name: 'sculpture_search' or null,\n  // The city where the sculptures are located.\n  location: string,\n  // The time frame during which the sculptures were made.\n  time_frame: string,\n  // Optional material of the sculptures. Default is 'all'\n  material: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me sculptures near Chicago that were made in the 19th century."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"sculpture_search\",\n  \"location\": \"Chicago\",\n  \"time_frame\": \"19th century\",\n  \"material\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 54, "total_tokens": 177, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "944122d8-145b-44d4-bc72-16d17adb2b54", "event_id": "944122d8-145b-44d4-bc72-16d17adb2b54", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 245857, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_266", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a859bb84-d070-4c63-b86a-22a49a60a7c1", "event_id": "79097670-2be6-44d9-bd6f-5d28f2ef380b", "parent_event_id": "a859bb84-d070-4c63-b86a-22a49a60a7c1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 774, "start_time": "2024-06-20T03:56:44.876Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_267", "variant_name": null}, {"function_name": "Fn_simple_267", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_267\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sculpture\":\"The Thinker\",\"artist\":\"Rodin\",\"meta\":\"Value\",\"year\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_267_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current market value of a particular sculpture by a specific artist.\n  function_name: 'get_sculpture_value' or null,\n  // The name of the sculpture.\n  sculpture: string,\n  // The name of the artist who created the sculpture.\n  artist: string,\n  // The year the sculpture was created. This is optional and is not required for all sculptures. Default is the most recent year.\n  year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the value of the sculpture 'The Thinker' by Rodin?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_sculpture_value\",\n  \"sculpture\": \"The Thinker\",\n  \"artist\": \"Rodin\",\n  \"year\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 58, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a859bb84-d070-4c63-b86a-22a49a60a7c1", "event_id": "a859bb84-d070-4c63-b86a-22a49a60a7c1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 246633, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_267", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "23467235-1264-429d-a639-fd9a7f844482", "event_id": "8cf7c6c5-1e97-423d-8415-53ccc1cff4d4", "parent_event_id": "23467235-1264-429d-a639-fd9a7f844482", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 802, "start_time": "2024-06-20T03:56:45.651Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_268", "variant_name": null}, {"function_name": "Fn_simple_268", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_268\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York City, NY\",\"art_form\":\"sculpture\",\"meta\":\"Value\",\"month\":null,\"user_ratings\":\"Value2\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_268_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate the most popular exhibitions based on criteria like location, time, art form, and user ratings.\n  function_name: 'find_exhibition' or null,\n  // The city where the exhibition is held, e.g., New York City, NY.\n  location: string,\n  // The form of art the exhibition is displaying e.g., sculpture.\n  art_form: string,\n  // The month of exhibition. Default value will return upcoming events if not specified.\n  month: string or null,\n  // Select exhibitions with user rating threshold. Default is 'low'\n  user_ratings: 'low' or 'average' or 'high' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the top rated modern sculpture exhibition happening in New York in the upcoming month."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"find_exhibition\",\n  \"location\": \"New York City, NY\",\n  \"art_form\": \"sculpture\",\n  \"month\": null,\n  \"user_ratings\": \"high\"\n}\n\nThis will return the top-rated modern sculpture exhibition happening in New York City in the upcoming month, based on high user ratings.", "metadata": {"logprobs": null, "prompt_tokens": 190, "output_tokens": 94, "total_tokens": 284, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "23467235-1264-429d-a639-fd9a7f844482", "event_id": "23467235-1264-429d-a639-fd9a7f844482", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 247436, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_268", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "da60d854-8fd4-4178-987a-35e8171fd859", "event_id": "16f55fab-45bf-4e88-8fe7-97e7986c7eea", "parent_event_id": "da60d854-8fd4-4178-987a-35e8171fd859", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 592, "start_time": "2024-06-20T03:56:46.454Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_269", "variant_name": null}, {"function_name": "Fn_simple_269", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_269\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"Michelangelo\",\"material\":\"Marble\",\"meta\":\"Value\",\"location\":\"Rome, Italy\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_269_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate the sculptures of specific artist by material and location\n  function_name: 'sculpture_locator.find_by_artist' or null,\n  // Name of the Artist of the sculpture\n  artist: string,\n  // Material of the sculpture.\n  material: string,\n  // The location where you want to find the sculpture. Default is 'all' if not specified.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the sculptures of Michelangelo with material Marble in Rome, Italy."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sculpture_locator.find_by_artist\",\n  \"artist\": \"Michelangelo\",\n  \"material\": \"Marble\",\n  \"location\": \"Rome, Italy\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 56, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "da60d854-8fd4-4178-987a-35e8171fd859", "event_id": "da60d854-8fd4-4178-987a-35e8171fd859", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 248030, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_269", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "de839174-a7a8-4c95-80ed-c4c2cf6f3bda", "event_id": "1c4b423f-108d-4ff0-b70b-6ac1dd7d6993", "parent_event_id": "de839174-a7a8-4c95-80ed-c4c2cf6f3bda", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1904, "start_time": "2024-06-20T03:56:47.048Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_270", "variant_name": null}, {"function_name": "Fn_simple_270", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_270\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principle\":10000,\"interest_rate\":0.05,\"time\":10,\"meta\":\"Value\",\"compounds_per_year\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_270_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the compound interest of an investment over a given time period.\n  function_name: 'calculate_compound_interest' or null,\n  // The initial amount of the investment.\n  principle: int,\n  // The yearly interest rate of the investment.\n  interest_rate: float,\n  // The time, in years, the money is invested or borrowed for.\n  time: int,\n  // The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly).\n  compounds_per_year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the compound interest of an investment of $10,000 at an interest rate of 5% compounded yearly for 10 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_compound_interest\",\n  \"principle\": 10000,\n  \"interest_rate\": 0.05,\n  \"time\": 10,\n  \"compounds_per_year\": 1\n}\n\nTo calculate the compound interest, we can use the formula:\n\nA = P(1 + r/n)^(nt)\n\nWhere:\nA = the final amount (principle + interest)\nP = the initial principle (investment)\nr = the annual interest rate\nn = the number of times the interest is compounded per year\nt = the time (in years) the money is invested\n\nPlugging in the values:\nP = $10,000\nr = 5% = 0.05\nn = 1 (compounded yearly)\nt = 10 years\n\nA = 10000 * (1 + 0.05/1)^(1*10)\nA = 10000 * (1.05)^10\nA = 10000 * 1.6289\nA = $16,289\n\nThe final amount after 10 years of compound interest at 5% compounded yearly is $16,289.", "metadata": {"logprobs": null, "prompt_tokens": 180, "output_tokens": 276, "total_tokens": 456, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "de839174-a7a8-4c95-80ed-c4c2cf6f3bda", "event_id": "de839174-a7a8-4c95-80ed-c4c2cf6f3bda", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 249935, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_270", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5d5c7955-07cb-4aaa-81cf-4a8c934fb2c8", "event_id": "69906c2a-45a2-45c7-b8cf-81b879cba036", "parent_event_id": "5d5c7955-07cb-4aaa-81cf-4a8c934fb2c8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 768, "start_time": "2024-06-20T03:56:48.953Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_271", "variant_name": null}, {"function_name": "Fn_simple_271", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_271\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"building_name\":\"Empire State Building\",\"unit\":\"Value1\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_271_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the dimensions of a specific building based on its name.\n  function_name: 'building.get_dimensions' or null,\n  // The name of the building.\n  building_name: string,\n  // The unit in which you want the dimensions. Default is meter.\n  unit: 'meter' or 'feet',\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you give me the height and width of Empire State building in feet?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"building.get_dimensions\",\n  \"building_name\": \"Empire State Building\",\n  \"unit\": \"feet\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 112, "output_tokens": 50, "total_tokens": 162, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5d5c7955-07cb-4aaa-81cf-4a8c934fb2c8", "event_id": "5d5c7955-07cb-4aaa-81cf-4a8c934fb2c8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 250705, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_271", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6dda8f1a-75fc-43ce-996c-e3b57839ebcd", "event_id": "3fa3bfbd-9fdb-4f5e-bec5-893521b64c27", "parent_event_id": "6dda8f1a-75fc-43ce-996c-e3b57839ebcd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 883, "start_time": "2024-06-20T03:56:49.723Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_272", "variant_name": null}, {"function_name": "Fn_simple_272", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_272\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"building_id\":\"B1004\",\"floors\":[2,3,4],\"meta\":\"Value\",\"mode\":\"dynamic\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_272_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Analyze a structure of a building based on its Id and floor numbers.\n  function_name: 'analyze_structure' or null,\n  // The unique identification number of the building.\n  building_id: string,\n  // Floor numbers to be analyzed.\n  floors: int[],\n  // Mode of analysis, e.g. 'static' or 'dynamic'. Default is 'static'.\n  mode: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the structural dynamic analysis of the building with building Id B1004 for 2nd, 3rd and 4th floors?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"analyze_structure\",\n  \"building_id\": \"B1004\",\n  \"floors\": [2, 3, 4],\n  \"mode\": \"dynamic\"\n}\n\nThis request is for a structural dynamic analysis of the building with ID \"B1004\" for the 2nd, 3rd, and 4th floors.", "metadata": {"logprobs": null, "prompt_tokens": 150, "output_tokens": 97, "total_tokens": 247, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6dda8f1a-75fc-43ce-996c-e3b57839ebcd", "event_id": "6dda8f1a-75fc-43ce-996c-e3b57839ebcd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 251589, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_272", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "02846efb-1de0-473e-8891-a978c750acb4", "event_id": "bb0b3f17-e26f-4709-8bcc-1f47c26ee204", "parent_event_id": "02846efb-1de0-473e-8891-a978c750acb4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 533, "start_time": "2024-06-20T03:56:50.607Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_273", "variant_name": null}, {"function_name": "Fn_simple_273", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_273\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_273_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the area and circumference of a circle based on the radius.\n  function_name: 'calculate_circle_dimensions' or null,\n  // The radius of the circle.\n  radius: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area and circumference of a circle with a radius of 5 units."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_circle_dimensions\",\n  \"radius\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 85, "output_tokens": 27, "total_tokens": 112, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "02846efb-1de0-473e-8891-a978c750acb4", "event_id": "02846efb-1de0-473e-8891-a978c750acb4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 252123, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_273", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ad30f12b-60c4-4d69-b56e-8ba5c9905f46", "event_id": "ab21e5b8-5ed5-454b-a8d4-2a540b9e3664", "parent_event_id": "ad30f12b-60c4-4d69-b56e-8ba5c9905f46", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 603, "start_time": "2024-06-20T03:56:51.142Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_274", "variant_name": null}, {"function_name": "Fn_simple_274", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_274\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Louvre Museum\",\"location\":\"Paris\",\"meta\":\"Value\",\"day\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_274_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the open hours for a museum based on its name and location.\n  function_name: 'museum.get_hours' or null,\n  // The name of the museum.\n  name: string,\n  // The city where the museum is located.\n  location: string,\n  // Optional: Day of the week for specific open hours. Default 'Monday'.\n  day: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the open hours for the Louvre Museum in Paris."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"museum.get_hours\",\n  \"name\": \"Louvre Museum\",\n  \"location\": \"Paris\",\n  \"day\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 126, "output_tokens": 45, "total_tokens": 171, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ad30f12b-60c4-4d69-b56e-8ba5c9905f46", "event_id": "ad30f12b-60c4-4d69-b56e-8ba5c9905f46", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 252728, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_274", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ee6451a9-75ee-41a1-b637-ed8af378a3c4", "event_id": "ec5e085a-5ba9-46ab-9527-ae28285aa4f1", "parent_event_id": "ee6451a9-75ee-41a1-b637-ed8af378a3c4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 611, "start_time": "2024-06-20T03:56:51.746Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_275", "variant_name": null}, {"function_name": "Fn_simple_275", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_275\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum_name\":\"Metropolitan Museum of Art\",\"meta\":\"Value\",\"info_type\":\"opening_hours\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_275_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve information about the opening hours of a museum based on its name.\n  function_name: 'museum_info' or null,\n  // The name of the museum.\n  museum_name: string,\n  // The type of information needed about the museum. (default: opening_hours)\n  info_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find information about the opening hours of the Metropolitan Museum of Art."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"museum_info\",\n  \"museum_name\": \"Metropolitan Museum of Art\",\n  \"info_type\": \"opening_hours\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 110, "output_tokens": 43, "total_tokens": 153, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ee6451a9-75ee-41a1-b637-ed8af378a3c4", "event_id": "ee6451a9-75ee-41a1-b637-ed8af378a3c4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 253340, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_275", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3c745beb-570a-4390-8988-e34fbb17d8c6", "event_id": "c48f8eed-51d8-4f55-85c8-afd3bffc5d2c", "parent_event_id": "3c745beb-570a-4390-8988-e34fbb17d8c6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 590, "start_time": "2024-06-20T03:56:52.358Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_276", "variant_name": null}, {"function_name": "Fn_simple_276", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_276\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":5,\"meta\":\"Value\",\"sort_by\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_276_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the list of popular artworks at the Metropolitan Museum of Art. Results can be sorted based on popularity.\n  function_name: 'metropolitan_museum.get_top_artworks' or null,\n  // The number of artworks to fetch\n  number: int,\n  // The criteria to sort the results on. Default is 'popularity'.\n  sort_by: 'popularity' or 'chronological' or 'alphabetical' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the list of top 5 popular artworks at the Metropolitan Museum of Art. Please sort by popularity."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"metropolitan_museum.get_top_artworks\",\n  \"number\": 5,\n  \"sort_by\": \"popularity\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 43, "total_tokens": 191, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3c745beb-570a-4390-8988-e34fbb17d8c6", "event_id": "3c745beb-570a-4390-8988-e34fbb17d8c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 253931, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_276", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ba5b2dd3-7192-4854-91a3-7f7b524239e8", "event_id": "5ce5d6ac-894b-4b2d-8da6-e0fac9210199", "parent_event_id": "ba5b2dd3-7192-4854-91a3-7f7b524239e8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 619, "start_time": "2024-06-20T03:56:52.950Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_277", "variant_name": null}, {"function_name": "Fn_simple_277", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_277\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum\":\"Louvre Museum\",\"location\":\"Paris\",\"meta\":\"Value\",\"day\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_277_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the working hours of a museum in a specific location.\n  function_name: 'museum_working_hours.get' or null,\n  // The name of the museum.\n  museum: string,\n  // The location of the museum.\n  location: string,\n  // Specific day of the week. Default is 'Monday'\n  day: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the working hours of Louvre Museum in Paris."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"museum_working_hours.get\",\n  \"museum\": \"Louvre Museum\",\n  \"location\": \"Paris\",\n  \"day\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 57, "total_tokens": 175, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ba5b2dd3-7192-4854-91a3-7f7b524239e8", "event_id": "ba5b2dd3-7192-4854-91a3-7f7b524239e8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 254553, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_277", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c8a2a6e3-fc20-4a09-8276-ace93beeddb7", "event_id": "f533d20c-916a-4d7d-ac5f-1d62fb1c6a9f", "parent_event_id": "c8a2a6e3-fc20-4a09-8276-ace93beeddb7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 864, "start_time": "2024-06-20T03:56:53.571Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_278", "variant_name": null}, {"function_name": "Fn_simple_278", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_278\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum\":\"The British Museum\",\"date\":\"this weekend\",\"information\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_278_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get information about a museum including its opening hours and ticket prices for a specific date range.\n  function_name: 'museum_info' or null,\n  // The name of the museum.\n  museum: string,\n  // The specific date or date range for which information is needed. It could be specific date such as '2022-12-01' or a date range like 'this weekend', 'next week'. It could also be a recurring time such as 'every Saturday'.\n  date: string,\n  // The type of information needed from the museum. This is optional and defaults to 'all' if not specified. (default: all)\n  information: [\n    'opening_hours' or 'ticket_price' or 'address'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the working hours and ticket price of The British Museum for this weekend."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"museum_info\",\n  \"museum\": \"The British Museum\",\n  \"date\": \"this weekend\",\n  \"information\": [\n    \"opening_hours\",\n    \"ticket_price\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 207, "output_tokens": 60, "total_tokens": 267, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c8a2a6e3-fc20-4a09-8276-ace93beeddb7", "event_id": "c8a2a6e3-fc20-4a09-8276-ace93beeddb7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 255418, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_278", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e2719f86-4e1d-45b2-9790-8cb974b71f18", "event_id": "5fd57471-046e-496f-903d-4f767c9b01c8", "parent_event_id": "e2719f86-4e1d-45b2-9790-8cb974b71f18", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 799, "start_time": "2024-06-20T03:56:54.436Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_279", "variant_name": null}, {"function_name": "Fn_simple_279", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_279\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"instrument\":\"piano\",\"manufacturer\":\"Yamaha\",\"features\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_279_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the average price and ratings of an instrument from a particular manufacturer.\n  function_name: 'get_instrument_details' or null,\n  // The name of the instrument.\n  instrument: string,\n  // The manufacturer of the instrument.\n  manufacturer: string,\n  // The features to retrieve about the instrument. Default is 'price'\n  features: [\n    'price' or 'rating'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the average price and ratings of piano from Yamaha."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_instrument_details\",\n  \"instrument\": \"piano\",\n  \"manufacturer\": \"Yamaha\",\n  \"features\": [\n    \"price\",\n    \"rating\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 67, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e2719f86-4e1d-45b2-9790-8cb974b71f18", "event_id": "e2719f86-4e1d-45b2-9790-8cb974b71f18", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 256218, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_279", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "720ef3bc-604f-4c92-b7aa-a800b0294cab", "event_id": "c08b68bf-24c4-45b3-8890-576da93eed5e", "parent_event_id": "720ef3bc-604f-4c92-b7aa-a800b0294cab", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 732, "start_time": "2024-06-20T03:56:55.237Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_280", "variant_name": null}, {"function_name": "Fn_simple_280", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_280\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"brand\":\"Fender\",\"model\":\"American Professional II Stratocaster\",\"finish\":\"Rosewood\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_280_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current retail price of a specific musical instrument.\n  function_name: 'instrument_price.get' or null,\n  // The brand of the instrument.\n  brand: string,\n  // The specific model of the instrument.\n  model: string,\n  // The color or type of finish on the instrument.\n  finish: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the retail price of a Fender American Professional II Stratocaster in Rosewood Finish?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"instrument_price.get\",\n  \"brand\": \"Fender\",\n  \"model\": \"American Professional II Stratocaster\",\n  \"finish\": \"Rosewood\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 64, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "720ef3bc-604f-4c92-b7aa-a800b0294cab", "event_id": "720ef3bc-604f-4c92-b7aa-a800b0294cab", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 256952, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_280", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "766d7e14-583a-4bf4-93e6-a961f297665a", "event_id": "56a5c4f8-4ccc-4cc0-8a18-cf2985f1f7fc", "parent_event_id": "766d7e14-583a-4bf4-93e6-a961f297665a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:56:55.971Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_281", "variant_name": null}, {"function_name": "Fn_simple_281", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_281\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"budget\":1000,\"type\":\"acoustic\",\"meta\":\"Value\",\"make\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_281_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for a musical instrument within specified budget and of specific type.\n  function_name: 'find_instrument' or null,\n  // Your budget for the instrument.\n  budget: int,\n  // Type of the instrument\n  type: string,\n  // Maker of the instrument. Default to not use if not specified.\n  make: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find an acoustic instrument within my budget of $1000."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_instrument\",\n  \"budget\": 1000,\n  \"type\": \"acoustic\",\n  \"make\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 41, "total_tokens": 155, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "766d7e14-583a-4bf4-93e6-a961f297665a", "event_id": "766d7e14-583a-4bf4-93e6-a961f297665a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 257567, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_281", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3691e6d4-37ca-44ba-a069-0805cf4be4b6", "event_id": "b853f497-cb7c-4e23-bb74-5a5a0405e692", "parent_event_id": "3691e6d4-37ca-44ba-a069-0805cf4be4b6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 571, "start_time": "2024-06-20T03:56:56.587Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_282", "variant_name": null}, {"function_name": "Fn_simple_282", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_282\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Violin\",\"maker\":\"Stradivarius\",\"year\":1721,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_282_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the details about a specific musical instrument based on its name, maker, and manufacturing year.\n  function_name: 'get_instrument_info' or null,\n  // The name of the instrument.\n  name: string,\n  // The name of the maker who created the instrument.\n  maker: string,\n  // The year the instrument was made.\n  year: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the details about the musical instrument 'Violin' from 'Stradivarius' maker, made in the year 1721."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_instrument_info\",\n  \"name\": \"Violin\",\n  \"maker\": \"Stradivarius\",\n  \"year\": 1721\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 49, "total_tokens": 188, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3691e6d4-37ca-44ba-a069-0805cf4be4b6", "event_id": "3691e6d4-37ca-44ba-a069-0805cf4be4b6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 258144, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_282", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2f0c81fe-07a8-4941-a89c-8b345b6c9609", "event_id": "75ad7788-216c-49f6-925d-c1193a6dec0a", "parent_event_id": "2f0c81fe-07a8-4941-a89c-8b345b6c9609", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 635, "start_time": "2024-06-20T03:56:57.163Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_283", "variant_name": null}, {"function_name": "Fn_simple_283", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_283\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"brand\":\"Yamaha\",\"specs\":[\"Value0\",\"Value1\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_283_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate a flute for sale based on specific requirements.\n  function_name: 'find_flute' or null,\n  // The brand of the flute. Example, 'Yamaha'\n  brand: string,\n  // The specifications of the flute desired.\n  specs: [\n    'open hole' or 'C foot' or 'silver headjoint'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a Yamaha flute with the specifications of open hole, C foot, and silver headjoint available for sale."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_flute\",\n  \"brand\": \"Yamaha\",\n  \"specs\": [\n    \"open hole\",\n    \"C foot\",\n    \"silver headjoint\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 58, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2f0c81fe-07a8-4941-a89c-8b345b6c9609", "event_id": "2f0c81fe-07a8-4941-a89c-8b345b6c9609", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 258781, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_283", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "814dbca4-7b98-4a9f-9426-567763669243", "event_id": "0c7753bc-8eec-4610-9027-384ea3371b39", "parent_event_id": "814dbca4-7b98-4a9f-9426-567763669243", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 583, "start_time": "2024-06-20T03:56:57.800Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_284", "variant_name": null}, {"function_name": "Fn_simple_284", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_284\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"model\":\"Gibson Les Paul\",\"condition\":\"Value2\",\"location\":\"Chicago\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_284_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the price of a specific used guitar model based on its condition and location.\n  function_name: 'guitar_price.find' or null,\n  // The model of the guitar.\n  model: string,\n  // The condition of the guitar.\n  condition: 'Poor' or 'Good' or 'Excellent',\n  // The location where the guitar is being sold.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the price of a used Gibson Les Paul guitar in excellent condition in the Chicago area."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"guitar_price.find\",\n  \"model\": \"Gibson Les Paul\",\n  \"condition\": \"Excellent\",\n  \"location\": \"Chicago\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 47, "total_tokens": 181, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "814dbca4-7b98-4a9f-9426-567763669243", "event_id": "814dbca4-7b98-4a9f-9426-567763669243", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 259365, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_284", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cfb995a4-26ea-4997-9ea7-2510c45bab6c", "event_id": "df51a832-87d6-41a3-a0f8-41752723d410", "parent_event_id": "cfb995a4-26ea-4997-9ea7-2510c45bab6c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 748, "start_time": "2024-06-20T03:56:58.384Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_285", "variant_name": null}, {"function_name": "Fn_simple_285", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_285\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"date\":\"next month\",\"genre\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_285_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve information about concerts based on specific genre, location and date.\n  function_name: 'concert_info.get' or null,\n  // The city where the concert will take place.\n  location: string,\n  // Time frame to get the concert for.\n  date: string,\n  // Genre of the concert.\n  genre: 'Pop' or 'Rock' or 'Country' or 'Classical' or 'Electronic' or 'Hip-Hop',\n}"}]}, {"role": "user", "content": [{"text": "Question: Get information about the pop concerts in New York for next month."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"concert_info.get\",\n  \"location\": \"New York\",\n  \"date\": \"next month\",\n  \"genre\": \"Pop\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 144, "output_tokens": 56, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cfb995a4-26ea-4997-9ea7-2510c45bab6c", "event_id": "cfb995a4-26ea-4997-9ea7-2510c45bab6c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 260115, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_285", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "07f83400-4acd-49e2-a7ff-529b5b163509", "event_id": "3bf2b532-d7b6-4417-930c-a5c7eee0c1c6", "parent_event_id": "07f83400-4acd-49e2-a7ff-529b5b163509", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 748, "start_time": "2024-06-20T03:56:59.134Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_286", "variant_name": null}, {"function_name": "Fn_simple_286", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_286\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Chicago, Illinois\",\"price\":100,\"meta\":\"Value\",\"genre\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_286_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate a concert in a specified location within a certain budget.\n  function_name: 'find_concert' or null,\n  // The city where you are looking for a concert. In the format City, State.\n  location: string,\n  // Maximum ticket price.\n  price: int,\n  // Music genre of the concert. Default to 'Jazz'. \n  genre: 'Rock' or 'Pop' or 'Country' or 'Jazz' or 'Classical' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a Rock concert in Chicago with ticket availability under $100."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"find_concert\",\n  \"location\": \"Chicago, Illinois\",\n  \"price\": 100,\n  \"genre\": \"Rock\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 149, "output_tokens": 54, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "07f83400-4acd-49e2-a7ff-529b5b163509", "event_id": "07f83400-4acd-49e2-a7ff-529b5b163509", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 260865, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_286", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ece366ab-b55a-4491-8579-83d50ef13e36", "event_id": "5fa73c91-76fb-4f5f-b3ee-692620201d0a", "parent_event_id": "ece366ab-b55a-4491-8579-83d50ef13e36", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 579, "start_time": "2024-06-20T03:56:59.884Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_287", "variant_name": null}, {"function_name": "Fn_simple_287", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_287\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"Beyonce\",\"location\":\"San Diego\",\"meta\":\"Value\",\"date\":\"04-2022\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_287_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch the details for a particular concert based on the artist and location.\n  function_name: 'concert.get_details' or null,\n  // Name of the artist/band who's performing.\n  artist: string,\n  // City where the concert is taking place.\n  location: string,\n  // Date of the concert in 'mm-yyyy' format. Default is the current month if not specified.\n  date: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get concert details for the artist Beyonce performing in San Diego April 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"concert.get_details\",\n  \"artist\": \"Beyonce\",\n  \"location\": \"San Diego\",\n  \"date\": \"04-2022\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 140, "output_tokens": 50, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ece366ab-b55a-4491-8579-83d50ef13e36", "event_id": "ece366ab-b55a-4491-8579-83d50ef13e36", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 261445, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_287", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fb5b8efe-d495-4ce5-b127-2c5d4d6fd7bf", "event_id": "0dd8e8da-ce0b-4c6e-8dd5-b3b099eee46c", "parent_event_id": "fb5b8efe-d495-4ce5-b127-2c5d4d6fd7bf", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 723, "start_time": "2024-06-20T03:57:00.464Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_288", "variant_name": null}, {"function_name": "Fn_simple_288", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_288\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"genre\":\"classical\",\"location\":\"Los Angeles\",\"date\":\"this weekend\",\"meta\":\"Value\",\"price_range\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_288_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate a concert based on specific criteria like genre, location, and date.\n  function_name: 'concert.search' or null,\n  // Genre of the concert.\n  genre: string,\n  // City of the concert.\n  location: string,\n  // Date of the concert, e.g. this weekend, today, tomorrow, or date string.\n  date: string,\n  // Expected price range of the concert tickets. Default is 'free'.\n  price_range: 'free' or 'cheap' or 'moderate' or 'expensive' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a classical concert this weekend in Los Angeles with cheap tickets."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"concert.search\",\n  \"genre\": \"classical\",\n  \"location\": \"Los Angeles\",\n  \"date\": \"this weekend\",\n  \"price_range\": \"cheap\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 64, "total_tokens": 232, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fb5b8efe-d495-4ce5-b127-2c5d4d6fd7bf", "event_id": "fb5b8efe-d495-4ce5-b127-2c5d4d6fd7bf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 262170, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_288", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6b0e93c5-248d-46ee-8c21-5c3e96a44fce", "event_id": "c99e4570-28c5-4ab2-9f7c-96aecaa420bb", "parent_event_id": "6b0e93c5-248d-46ee-8c21-5c3e96a44fce", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 580, "start_time": "2024-06-20T03:57:01.189Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_289", "variant_name": null}, {"function_name": "Fn_simple_289", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_289\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"Eminem\",\"city\":\"New York City\",\"meta\":\"Value\",\"num_tickets\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_289_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book concert tickets for a specific artist in a specified city.\n  function_name: 'concert_booking.book_ticket' or null,\n  // The artist you want to book tickets for.\n  artist: string,\n  // The city where the concert is.\n  city: string,\n  // Number of tickets required. Default is 1.\n  num_tickets: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me two tickets for next Eminem concert in New York City."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"concert_booking.book_ticket\",\n  \"artist\": \"Eminem\",\n  \"city\": \"New York City\",\n  \"num_tickets\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 51, "total_tokens": 175, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6b0e93c5-248d-46ee-8c21-5c3e96a44fce", "event_id": "6b0e93c5-248d-46ee-8c21-5c3e96a44fce", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 262751, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_289", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f4bffa55-b589-4b1d-b92b-a13b7ac47d0f", "event_id": "25d5df21-169a-4745-a154-24a56cc4ed97", "parent_event_id": "f4bffa55-b589-4b1d-b92b-a13b7ac47d0f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 751, "start_time": "2024-06-20T03:57:01.770Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_290", "variant_name": null}, {"function_name": "Fn_simple_290", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_290\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Seattle, WA\",\"genre\":\"jazz\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_290_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby concerts based on specific criteria like genre.\n  function_name: 'concert.find_nearby' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Genre of music to be played at the concert.\n  genre: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find concerts near me in Seattle that plays jazz music."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"concert.find_nearby\",\n  \"location\": \"Seattle, WA\",\n  \"genre\": \"jazz\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 101, "output_tokens": 49, "total_tokens": 150, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f4bffa55-b589-4b1d-b92b-a13b7ac47d0f", "event_id": "f4bffa55-b589-4b1d-b92b-a13b7ac47d0f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 263503, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_290", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ec734850-8e43-416e-9f06-11c5f37f5b0e", "event_id": "5a16625f-5279-4c9b-9499-24f9cd80f2f5", "parent_event_id": "ec734850-8e43-416e-9f06-11c5f37f5b0e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:57:02.522Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_291", "variant_name": null}, {"function_name": "Fn_simple_291", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_291\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"The Weeknd\",\"month\":\"December\",\"meta\":\"Value\",\"year\":2022}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_291_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Finds details of a concert event.\n  function_name: 'concert.find_details' or null,\n  // Name of the artist performing.\n  artist: string,\n  // Month in which the concert is happening.\n  month: string,\n  // Year of the concert. (default: 2022)\n  year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the timing and location for The Weeknd's concert happening in December?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"concert.find_details\",\n  \"artist\": \"The Weeknd\",\n  \"month\": \"December\",\n  \"year\": 2022\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 47, "total_tokens": 165, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ec734850-8e43-416e-9f06-11c5f37f5b0e", "event_id": "ec734850-8e43-416e-9f06-11c5f37f5b0e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 264222, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_291", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b8e5b933-500a-4128-8d00-6cfd7f489fa7", "event_id": "58ef54e2-751b-40ba-83c4-090f64b6448f", "parent_event_id": "b8e5b933-500a-4128-8d00-6cfd7f489fa7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 611, "start_time": "2024-06-20T03:57:03.241Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_292", "variant_name": null}, {"function_name": "Fn_simple_292", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_292\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C\",\"start_note\":\"C4\",\"length\":16,\"meta\":\"Value\",\"tempo\":120}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_292_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generate a melody based on certain musical parameters.\n  function_name: 'music_generator.generate_melody' or null,\n  // The key of the melody. E.g., 'C' for C major.\n  key: string,\n  // The first note of the melody, specified in scientific pitch notation. E.g., 'C4'.\n  start_note: string,\n  // The number of measures in the melody.\n  length: int,\n  // The tempo of the melody, in beats per minute. Optional parameter. If not specified, defaults to 120.\n  tempo: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a melody in C major scale, starting with the note C4, 16 measures long, at 120 beats per minute."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the melody generated based on your request:\n\n{\n  \"function_name\": \"music_generator.generate_melody\",\n  \"key\": \"C\",\n  \"start_note\": \"C4\",\n  \"length\": 16,\n  \"tempo\": 120\n}", "metadata": {"logprobs": null, "prompt_tokens": 189, "output_tokens": 67, "total_tokens": 256, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b8e5b933-500a-4128-8d00-6cfd7f489fa7", "event_id": "b8e5b933-500a-4128-8d00-6cfd7f489fa7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 264836, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_292", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d704daf8-5f73-41e1-bb8a-dba56f133b6a", "event_id": "af9a977c-0da8-415d-8a51-c248f9d2bd7c", "parent_event_id": "d704daf8-5f73-41e1-bb8a-dba56f133b6a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 820, "start_time": "2024-06-20T03:57:03.855Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_293", "variant_name": null}, {"function_name": "Fn_simple_293", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_293\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"progression\":[\"C\",\"F\",\"G\"],\"measures\":4,\"meta\":\"Value\",\"instrument\":\"Piano\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_293_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compose a melody using the specified chord progression for a certain number of measures on specified instrument.\n  function_name: 'compose_melody' or null,\n  // The progression of chords.\n  progression: string[],\n  // The number of measures of the melody.\n  measures: int,\n  // The instrument for the composition. Default is 'Piano'.\n  instrument: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Compose a simple piano melody with a progression of C, F and G for 4 measures."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"compose_melody\",\n  \"progression\": [\"C\", \"F\", \"G\"],\n  \"measures\": 4,\n  \"instrument\": \"Piano\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 58, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d704daf8-5f73-41e1-bb8a-dba56f133b6a", "event_id": "d704daf8-5f73-41e1-bb8a-dba56f133b6a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 265657, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_293", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1345ff5b-06a3-472a-979e-45018d54de40", "event_id": "65607939-c112-4e59-9fcb-b1d579266f01", "parent_event_id": "1345ff5b-06a3-472a-979e-45018d54de40", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 751, "start_time": "2024-06-20T03:57:04.676Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_294", "variant_name": null}, {"function_name": "Fn_simple_294", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_294\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"scale\":\"C Major\",\"note_duration\":\"Value2\",\"track_length\":180,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_294_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Create a mix of a song based on a particular music scale and duration\n  function_name: 'music_composer.create_mix' or null,\n  // The musical scale to be used. E.g: C Major, A Minor, etc.\n  scale: string,\n  // Duration of each note. Options: 'whole', 'half', 'quarter', 'eighth', 'sixteenth'.\n  note_duration: 'whole' or 'half' or 'quarter' or 'eighth' or 'sixteenth',\n  // Length of the mix track in seconds.\n  track_length: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Create a mix track using notes of C major scale and duration of each note being quarter of a second with a duration of 3 minutes."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"music_composer.create_mix\",\n  \"scale\": \"C Major\",\n  \"note_duration\": \"quarter\",\n  \"track_length\": 180\n}", "metadata": {"logprobs": null, "prompt_tokens": 192, "output_tokens": 60, "total_tokens": 252, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1345ff5b-06a3-472a-979e-45018d54de40", "event_id": "1345ff5b-06a3-472a-979e-45018d54de40", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 266410, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_294", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f2f99e3b-cd09-4843-af8c-7b31ac0cb783", "event_id": "03dc3ce7-3eb0-401f-96ee-af592a87f96a", "parent_event_id": "f2f99e3b-cd09-4843-af8c-7b31ac0cb783", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 631, "start_time": "2024-06-20T03:57:05.428Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_295", "variant_name": null}, {"function_name": "Fn_simple_295", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_295\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C\",\"chords\":4,\"meta\":\"Value\",\"progression_type\":\"major\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_295_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Create a chord progression in a specific key and number of chords.\n  function_name: 'music_generation.create_chord_progression' or null,\n  // The key for the chord progression.\n  key: string,\n  // Number of chords in the progression.\n  chords: int,\n  // The type of the chord progression. Optional parameter. Default is 'major'.\n  progression_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a major chord progression in C key with four chords."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"music_generation.create_chord_progression\",\n  \"key\": \"C\",\n  \"chords\": 4,\n  \"progression_type\": \"major\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 51, "total_tokens": 183, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f2f99e3b-cd09-4843-af8c-7b31ac0cb783", "event_id": "f2f99e3b-cd09-4843-af8c-7b31ac0cb783", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 267042, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_295", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "71e7e20b-197e-4446-9ffc-ae60e3fe4631", "event_id": "412f08af-2db3-4cc2-87a5-32ae56ebe44d", "parent_event_id": "71e7e20b-197e-4446-9ffc-ae60e3fe4631", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1781, "start_time": "2024-06-20T03:57:06.061Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_296", "variant_name": null}, {"function_name": "Fn_simple_296", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_296\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"song_title\":\"Bohemian Rhapsody\",\"artist_name\":\"Queen\",\"meta\":\"Value\",\"lang\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_296_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the lyrics of a song based on the artist's name and song title.\n  function_name: 'get_song_lyrics' or null,\n  // The title of the song.\n  song_title: string,\n  // The name of the artist who performed the song.\n  artist_name: string,\n  // The language of the lyrics. Default is English.\n  lang: 'English' or 'French' or 'Spanish' or 'German' or 'Italian' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the lyrics to the song 'Bohemian Rhapsody' by Queen."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_song_lyrics\",\n  \"song_title\": \"Bohemian Rhapsody\",\n  \"artist_name\": \"Queen\",\n  \"lang\": \"English\"\n}\n\nI'm afraid I cannot provide the full lyrics to \"Bohemian Rhapsody\" by Queen, as that would involve reproducing copyrighted material. However, I can summarize that \"Bohemian Rhapsody\" is a classic rock song by the British band Queen, released in 1975. It is known for its complex, multi-part structure and iconic lyrics. The song tells a dramatic story and has become one of the most well-known and beloved rock songs of all time. While I cannot share the full lyrics, I hope this general information about the song is helpful.", "metadata": {"logprobs": null, "prompt_tokens": 158, "output_tokens": 182, "total_tokens": 340, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "71e7e20b-197e-4446-9ffc-ae60e3fe4631", "event_id": "71e7e20b-197e-4446-9ffc-ae60e3fe4631", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 268824, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_296", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e6ca3816-3f7a-458d-b1ad-f3b7067b8da1", "event_id": "028bfd9d-388f-4854-aaff-b9cb4814c0e9", "parent_event_id": "e6ca3816-3f7a-458d-b1ad-f3b7067b8da1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 822, "start_time": "2024-06-20T03:57:07.843Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_297", "variant_name": null}, {"function_name": "Fn_simple_297", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_297\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C\",\"tempo\":80,\"duration\":4,\"meta\":\"Value\",\"scale_type\":\"major\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_297_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Generate a music scale progression in a specific key with a given tempo and duration.\n  function_name: 'music_generator.generate_scale_progression' or null,\n  // The key in which to generate the scale progression.\n  key: string,\n  // The tempo of the scale progression in BPM.\n  tempo: int,\n  // The duration of each note in beats.\n  duration: int,\n  // The type of scale to generate. Defaults to 'major'. (default: major)\n  scale_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a major C scale progression with tempo 80 BPM and duration 4 beats."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"music_generator.generate_scale_progression\",\n  \"key\": \"C\",\n  \"tempo\": 80,\n  \"duration\": 4,\n  \"scale_type\": \"major\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 167, "output_tokens": 68, "total_tokens": 235, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e6ca3816-3f7a-458d-b1ad-f3b7067b8da1", "event_id": "e6ca3816-3f7a-458d-b1ad-f3b7067b8da1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 269647, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_297", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ba85b9e9-7567-4191-9f95-572db6cd053a", "event_id": "71082ce4-f4cb-4719-8c5f-1d1f12e784f3", "parent_event_id": "ba85b9e9-7567-4191-9f95-572db6cd053a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 671, "start_time": "2024-06-20T03:57:08.666Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_298", "variant_name": null}, {"function_name": "Fn_simple_298", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_298\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"progression\":[\"I\",\"V\",\"vi\",\"IV\"],\"meta\":\"Value\",\"returnAllPossibleKeys\":false,\"assumeMajor\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_298_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Identifies a potential key signature for the given chord progression.\n  function_name: 'music.theory.chordProgression' or null,\n  // The chord progression in Roman numerals. Eg: ['I', 'V', 'vi', 'IV'].\n  progression: string[],\n  // Flag indicating if the function should return all possible key signatures that fit the chord progression. If false, the function will return the first valid key it finds. Default is false.\n  returnAllPossibleKeys: bool or null,\n  // Assumption if the key signature is Major. If true, the function will assume the key signature to be major and otherwise minor. Default is true.\n  assumeMajor: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: music.theory.chordProgression(progression=['I', 'V', 'vi', 'IV'])"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"music.theory.chordProgression\",\n  \"progression\": [\"I\", \"V\", \"vi\", \"IV\"],\n  \"returnAllPossibleKeys\": false,\n  \"assumeMajor\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 209, "output_tokens": 61, "total_tokens": 270, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ba85b9e9-7567-4191-9f95-572db6cd053a", "event_id": "ba85b9e9-7567-4191-9f95-572db6cd053a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 270320, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_298", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "720e3034-232c-42e2-99c6-4f0a2e60180f", "event_id": "bae30b15-9123-4136-98c9-ef1e43baa7c1", "parent_event_id": "720e3034-232c-42e2-99c6-4f0a2e60180f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 566, "start_time": "2024-06-20T03:57:09.339Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_299", "variant_name": null}, {"function_name": "Fn_simple_299", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_299\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C#\",\"meta\":\"Value\",\"scale_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_299_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Return the key signature of a major or minor scale.\n  function_name: 'music_theory.key_signature' or null,\n  // The root of the scale, e.g., 'C', 'F#', 'Ab'.\n  key: string,\n  // Type of the scale, either 'major' or 'minor'. Default is 'major'.\n  scale_type: 'major' or 'minor' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What key signature does C# major have?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"music_theory.key_signature\",\n  \"key\": \"C#\",\n  \"scale_type\": \"major\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 41, "total_tokens": 175, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "720e3034-232c-42e2-99c6-4f0a2e60180f", "event_id": "720e3034-232c-42e2-99c6-4f0a2e60180f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 270887, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_299", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "532e4659-da15-4769-913e-d765f26b1811", "event_id": "3d06f624-0400-4c4a-be82-4d74152a5335", "parent_event_id": "532e4659-da15-4769-913e-d765f26b1811", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 533, "start_time": "2024-06-20T03:57:09.906Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_300", "variant_name": null}, {"function_name": "Fn_simple_300", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_300\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C#\",\"meta\":\"Value\",\"scale_type\":\"major\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_300_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the musical scale of a specific key in music theory.\n  function_name: 'musical_scale' or null,\n  // The musical key for which the scale will be found.\n  key: string,\n  // The type of musical scale. (default: major)\n  scale_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the musical scale associated with C sharp major?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"musical_scale\",\n  \"key\": \"C#\",\n  \"scale_type\": \"major\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 103, "output_tokens": 37, "total_tokens": 140, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "532e4659-da15-4769-913e-d765f26b1811", "event_id": "532e4659-da15-4769-913e-d765f26b1811", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 271421, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_300", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2551a4dc-e2cb-4e14-b924-15070116c63c", "event_id": "c4747b3f-2376-47f5-a245-b26adaacd74b", "parent_event_id": "2551a4dc-e2cb-4e14-b924-15070116c63c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2603, "start_time": "2024-06-20T03:57:10.440Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_301", "variant_name": null}, {"function_name": "Fn_simple_301", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_301\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"first_note_frequency\":440,\"second_note_frequency\":880,\"meta\":\"Value\",\"tempo\":120}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_301_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the duration between two notes based on their frequencies and harmonic rhythm.\n  function_name: 'music.calculate_note_duration' or null,\n  // The frequency of the first note in Hz.\n  first_note_frequency: int,\n  // The frequency of the second note in Hz.\n  second_note_frequency: int,\n  // The tempo of the music in beats per minute. Defaults to 120 beats per minute.\n  tempo: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the duration between two notes of 440Hz and 880Hz frequency based on harmonic rhythm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"music.calculate_note_duration\",\n  \"first_note_frequency\": 440,\n  \"second_note_frequency\": 880,\n  \"tempo\": 120\n}\n\nThe duration between two notes with frequencies of 440Hz and 880Hz, based on harmonic rhythm, can be calculated as follows:\n\nThe harmonic relationship between 440Hz and 880Hz is an octave. In Western music, an octave is a doubling of the frequency. This means that the second note at 880Hz is the next higher octave from the first note at 440Hz.\n\nAssuming a tempo of 120 beats per minute (a common tempo in Western music), the duration between these two notes can be calculated as follows:\n\n1. The period of a 440Hz note is 1/440 = 0.00227 seconds.\n2. The period of an 880Hz note is 1/880 = 0.00114 seconds.\n3. The difference in duration between the two notes is 0.00227 - 0.00114 = 0.00113 seconds.\n4. At a tempo of 120 beats per minute, each beat lasts 0.5 seconds (60 seconds / 120 beats).\n5. The duration between the two notes is therefore 0.00113 / 0.5 = 0.00226 beats.\n\nSo, the duration between the two notes with frequencies of 440Hz and 880Hz, based on harmonic rhythm and a tempo of 120 beats per minute, is approximately 0.00226 beats.", "metadata": {"logprobs": null, "prompt_tokens": 151, "output_tokens": 380, "total_tokens": 531, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2551a4dc-e2cb-4e14-b924-15070116c63c", "event_id": "2551a4dc-e2cb-4e14-b924-15070116c63c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 274026, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_301", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e68be641-2c07-441d-b7cf-e802ff958a66", "event_id": "8803f50f-b60c-4e6d-a1ff-1e6df758d804", "parent_event_id": "e68be641-2c07-441d-b7cf-e802ff958a66", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 907, "start_time": "2024-06-20T03:57:13.045Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_302", "variant_name": null}, {"function_name": "Fn_simple_302", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_302\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C\",\"meta\":\"Value\",\"type\":\"major\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_302_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the third major chord in a given key.\n  function_name: 'get_third_chord' or null,\n  // The key of the scale.\n  key: string,\n  // Type of the scale, either major or minor. Default is 'major'.\n  type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the third major chord in C major scale?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_third_chord\",\n  \"key\": \"C\",\n  \"type\": \"major\"\n}\n\nThe third major chord in the C major scale is E minor.", "metadata": {"logprobs": null, "prompt_tokens": 101, "output_tokens": 50, "total_tokens": 151, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e68be641-2c07-441d-b7cf-e802ff958a66", "event_id": "e68be641-2c07-441d-b7cf-e802ff958a66", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 274934, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_302", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "91c16e6a-ce26-47c2-8a19-d7427dc3f443", "event_id": "0a17a46a-03ef-419a-9461-4026ba462283", "parent_event_id": "91c16e6a-ce26-47c2-8a19-d7427dc3f443", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 755, "start_time": "2024-06-20T03:57:13.953Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_303", "variant_name": null}, {"function_name": "Fn_simple_303", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_303\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hits\":180,\"at_bats\":600,\"meta\":\"Value\",\"decimal_places\":3}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_303_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the batting average for a baseball player based on their number of hits and at-bats.\n  function_name: 'calculate_batting_average' or null,\n  // The number of hits.\n  hits: int,\n  // The number of at-bats.\n  at_bats: int,\n  // The number of decimal places to return in the batting average. Default is 3.\n  decimal_places: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the batting average for a baseball player who has 180 hits and 600 at-bats. Round to 3 decimals."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_batting_average\",\n  \"hits\": 180,\n  \"at_bats\": 600,\n  \"decimal_places\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 153, "output_tokens": 48, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "91c16e6a-ce26-47c2-8a19-d7427dc3f443", "event_id": "91c16e6a-ce26-47c2-8a19-d7427dc3f443", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 275690, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_303", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bb28de6e-850d-42d7-9e19-62e55aee170e", "event_id": "bb453a54-b269-44d6-b154-cb65d96dfc7a", "parent_event_id": "bb28de6e-850d-42d7-9e19-62e55aee170e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:57:14.709Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_304", "variant_name": null}, {"function_name": "Fn_simple_304", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_304\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Cristiano Ronaldo\",\"season\":\"2019-2020\",\"meta\":\"Value\",\"league\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_304_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve soccer player statistics for a given season.\n  function_name: 'soccer_stat.get_player_stats' or null,\n  // Name of the player.\n  player_name: string,\n  // Soccer season, usually specified by two years.\n  season: string,\n  // Optional - the soccer league, defaults to all leagues if not specified.\n  league: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the player stats of Cristiano Ronaldo in the 2019-2020 season"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"soccer_stat.get_player_stats\",\n  \"player_name\": \"Cristiano Ronaldo\",\n  \"season\": \"2019-2020\",\n  \"league\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 132, "output_tokens": 67, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bb28de6e-850d-42d7-9e19-62e55aee170e", "event_id": "bb28de6e-850d-42d7-9e19-62e55aee170e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 276406, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_304", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4e999b22-c12a-448b-b4b4-ef9f1b9985ab", "event_id": "a7714b08-6e30-44bf-909b-6672bfb0bb91", "parent_event_id": "4e999b22-c12a-448b-b4b4-ef9f1b9985ab", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T03:57:15.425Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_305", "variant_name": null}, {"function_name": "Fn_simple_305", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_305\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"LeBron James\",\"team\":\"Los Angeles Lakers\",\"metrics\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_305_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get last game statistics for a specific player in basketball\n  function_name: 'player_stats.getLastGame' or null,\n  // The name of the basketball player.\n  player_name: string,\n  // The team that player currently plays for.\n  team: string,\n  // Specific metrics to retrieve. If no value is specified, all available metrics will be returned by default.\n  metrics: [\n    'Points' or 'Rebounds' or 'Assists' or 'Blocks'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get point and rebound stats for player 'LeBron James' from last basketball game"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"player_stats.getLastGame\",\n  \"player_name\": \"LeBron James\",\n  \"team\": \"Los Angeles Lakers\",\n  \"metrics\": [\n    \"Points\",\n    \"Rebounds\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 159, "output_tokens": 75, "total_tokens": 234, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4e999b22-c12a-448b-b4b4-ef9f1b9985ab", "event_id": "4e999b22-c12a-448b-b4b4-ef9f1b9985ab", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 277328, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_305", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ab3de355-fb5b-4901-a234-adeaea5b7f15", "event_id": "4a7c244d-4a2e-402a-8f2a-0cc5a522198c", "parent_event_id": "ab3de355-fb5b-4901-a234-adeaea5b7f15", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T03:57:16.347Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_306", "variant_name": null}, {"function_name": "Fn_simple_306", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_306\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Messi\",\"tournament\":\"La Liga\",\"season\":\"2020-2021\",\"performance_indicator\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_306_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the performance score of a soccer player given his game stats for a specific tournament in a season.\n  function_name: 'sports_stats.get_performance' or null,\n  // Name of the player.\n  player_name: string,\n  // Name of the soccer tournament.\n  tournament: string,\n  // Specific season in format 'YYYY-YYYY'.\n  season: string,\n  // Array of performance indicators. Use as much as possible. Default to use all if not specified.\n  performance_indicator: [\n    'Goals Scored' or 'Assists Made' or 'Saves Made' or 'Cards Received'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the overall goal and assist of soccer player Messi in La Liga 2020-2021 season"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_stats.get_performance\",\n  \"player_name\": \"Messi\",\n  \"tournament\": \"La Liga\",\n  \"season\": \"2020-2021\",\n  \"performance_indicator\": [\n    \"Goals Scored\",\n    \"Assists Made\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 197, "output_tokens": 80, "total_tokens": 277, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ab3de355-fb5b-4901-a234-adeaea5b7f15", "event_id": "ab3de355-fb5b-4901-a234-adeaea5b7f15", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 278251, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_306", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "13262983-4db1-492d-947c-a779504b679d", "event_id": "8a2d82d1-2d41-420e-8290-5fed8c3ba8c8", "parent_event_id": "13262983-4db1-492d-947c-a779504b679d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 676, "start_time": "2024-06-20T03:57:17.270Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_307", "variant_name": null}, {"function_name": "Fn_simple_307", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_307\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Virat Kohli\",\"matches\":10,\"meta\":\"Value\",\"match_format\":\"T20\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_307_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the average batting score of a cricketer for specified past matches.\n  function_name: 'average_batting_score' or null,\n  // Name of the cricket player.\n  player_name: string,\n  // Number of past matches to consider for average calculation.\n  matches: int,\n  // Format of the cricket matches considered (e.g., 'T20', 'ODI', 'Test'). Default is 'T20'.\n  match_format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find average batting score of a cricketer, Virat Kohli for past 10 matches"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"average_batting_score\",\n  \"player_name\": \"Virat Kohli\",\n  \"matches\": 10,\n  \"match_format\": \"T20\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 157, "output_tokens": 54, "total_tokens": 211, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "13262983-4db1-492d-947c-a779504b679d", "event_id": "13262983-4db1-492d-947c-a779504b679d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 278928, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_307", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5e3d5834-d3ce-4307-97ec-10807f773205", "event_id": "cf67da06-c176-46a6-9dac-e64683729cb6", "parent_event_id": "5e3d5834-d3ce-4307-97ec-10807f773205", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 754, "start_time": "2024-06-20T03:57:17.947Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_308", "variant_name": null}, {"function_name": "Fn_simple_308", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_308\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"teams\":[\"Lakers\",\"Clippers\"],\"date\":\"2021-01-28\",\"meta\":\"Value\",\"venue\":\"home\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_308_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the winner of a specific basketball game.\n  function_name: 'game_result.get_winner' or null,\n  // List of two teams who played the game.\n  teams: string[],\n  // The date of the game, formatted as YYYY-MM-DD.\n  date: string,\n  // Optional: The venue of the game. Default is 'home'.\n  venue: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who won the basketball game between Lakers and Clippers on Jan 28, 2021?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"game_result.get_winner\",\n  \"teams\": [\"Lakers\", \"Clippers\"],\n  \"date\": \"2021-01-28\",\n  \"venue\": \"home\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 66, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5e3d5834-d3ce-4307-97ec-10807f773205", "event_id": "5e3d5834-d3ce-4307-97ec-10807f773205", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 279683, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_308", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2eedc4fb-b053-4b62-875f-f07fd84d1974", "event_id": "fba07cb4-cfb5-4871-8a40-3d7414fb3d04", "parent_event_id": "2eedc4fb-b053-4b62-875f-f07fd84d1974", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 819, "start_time": "2024-06-20T03:57:18.702Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_309", "variant_name": null}, {"function_name": "Fn_simple_309", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_309\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Manchester United\",\"num_matches\":5,\"meta\":\"Value\",\"league\":\"English Premier League\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_309_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the match schedule for a specific sports team.\n  function_name: 'sports.match_schedule' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The number of upcoming matches you want to get.\n  num_matches: int,\n  // The sports league of the team. This is an optional parameter. Default is 'English Premier League'.\n  league: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the next five matches for Manchester United and who are they playing against in Premier League?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports.match_schedule\",\n  \"team_name\": \"Manchester United\",\n  \"num_matches\": 5,\n  \"league\": \"English Premier League\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 51, "total_tokens": 190, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2eedc4fb-b053-4b62-875f-f07fd84d1974", "event_id": "2eedc4fb-b053-4b62-875f-f07fd84d1974", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 280504, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_309", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2cb3a31e-5c73-4b07-824b-6c04d48cac6b", "event_id": "7e8e8f3b-4570-4caf-b3b2-33b2ce168975", "parent_event_id": "2cb3a31e-5c73-4b07-824b-6c04d48cac6b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 820, "start_time": "2024-06-20T03:57:19.523Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_310", "variant_name": null}, {"function_name": "Fn_simple_310", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_310\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Tom Brady\",\"season_year\":2020,\"meta\":\"Value\",\"team\":\"Tampa Bay Buccaneers\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_310_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the record of an NFL player in a specified season.\n  function_name: 'nfl_data.player_record' or null,\n  // The name of the NFL player.\n  player_name: string,\n  // The year of the NFL season.\n  season_year: int,\n  // The NFL team that the player played for in that season. Default is all teams if not specified.\n  team: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the record of Tom Brady in the 2020 NFL season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"nfl_data.player_record\",\n  \"player_name\": \"Tom Brady\",\n  \"season_year\": 2020,\n  \"team\": \"Tampa Bay Buccaneers\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 69, "total_tokens": 206, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2cb3a31e-5c73-4b07-824b-6c04d48cac6b", "event_id": "2cb3a31e-5c73-4b07-824b-6c04d48cac6b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 281325, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_310", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3009ed7e-e8d7-43b1-a11c-c3b509db240c", "event_id": "3d38b1e3-78a6-44bb-a6da-200f0a7fbc30", "parent_event_id": "3009ed7e-e8d7-43b1-a11c-c3b509db240c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 515, "start_time": "2024-06-20T03:57:20.344Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_311", "variant_name": null}, {"function_name": "Fn_simple_311", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_311\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"LeBron James\",\"meta\":\"Value\",\"team\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_311_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the career statistics of a basketball player based on the player's name.\n  function_name: 'get_career_stats' or null,\n  // The name of the basketball player.\n  player_name: string,\n  // The team that the player currently plays for or has played for (Optional). Default to use all teams if not specified.\n  team: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the career stats of basketball player LeBron James?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_career_stats\",\n  \"player_name\": \"LeBron James\",\n  \"team\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 120, "output_tokens": 39, "total_tokens": 159, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3009ed7e-e8d7-43b1-a11c-c3b509db240c", "event_id": "3009ed7e-e8d7-43b1-a11c-c3b509db240c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 281842, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_311", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6fd78c89-9de1-4085-9156-51b693e87c63", "event_id": "ebf3a9fd-6ae4-4f46-8e0b-23d9bf918e55", "parent_event_id": "6fd78c89-9de1-4085-9156-51b693e87c63", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 605, "start_time": "2024-06-20T03:57:20.861Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_312", "variant_name": null}, {"function_name": "Fn_simple_312", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_312\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Lebron James\",\"sport\":\"Value0\",\"meta\":\"Value\",\"team\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_312_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find the profile information of a sports athlete based on their full name.\n  function_name: 'sports_db.find_athlete' or null,\n  // The full name of the athlete.\n  name: string,\n  // The team the athlete belongs to. Default to all teams if not specified.\n  team: string or null,\n  // The sport that athlete plays.\n  sport: 'Basketball' or 'Baseball' or 'Football' or 'Soccer',\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the detailed profile of basketball player Lebron James"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"sports_db.find_athlete\",\n  \"name\": \"Lebron James\",\n  \"team\": null,\n  \"sport\": \"Basketball\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 140, "output_tokens": 58, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6fd78c89-9de1-4085-9156-51b693e87c63", "event_id": "6fd78c89-9de1-4085-9156-51b693e87c63", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 282448, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_312", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2639be03-884c-4cc5-9fc7-7284da8f77f1", "event_id": "0cda4ab7-a156-4fcf-835f-6bb13f0b7fdc", "parent_event_id": "2639be03-884c-4cc5-9fc7-7284da8f77f1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:57:21.467Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_313", "variant_name": null}, {"function_name": "Fn_simple_313", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_313\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Ronaldo\",\"year\":2021,\"meta\":\"Value\",\"team_name\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_313_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves detailed player's statistics for a specific year.\n  function_name: 'player_statistic' or null,\n  // The player's name.\n  player_name: string,\n  // Year for which the statistics will be displayed.\n  year: int,\n  // The name of the team(optional). Default to not use it if not specified.\n  team_name: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the statistics of Ronaldo's matches in 2021?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"player_statistic\",\n  \"player_name\": \"Ronaldo\",\n  \"year\": 2021,\n  \"team_name\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 128, "output_tokens": 48, "total_tokens": 176, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2639be03-884c-4cc5-9fc7-7284da8f77f1", "event_id": "2639be03-884c-4cc5-9fc7-7284da8f77f1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 283164, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_313", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a151bc5a-f183-4523-b292-7103e4115f39", "event_id": "445abf27-5182-4812-8f6d-4724821a8c2a", "parent_event_id": "a151bc5a-f183-4523-b292-7103e4115f39", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:57:22.183Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_314", "variant_name": null}, {"function_name": "Fn_simple_314", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_314\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Lionel Messi\",\"currency\":\"EUR\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_314_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the total net worth of a sports celebrity based on most recent data.\n  function_name: 'celebrity_net_worth.get' or null,\n  // The full name of the sports celebrity.\n  name: string,\n  // The currency in which the net worth will be returned. Default is 'USD'.\n  currency: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the total worth in euro of Messi according to latest data?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"celebrity_net_worth.get\",\n  \"name\": \"Lionel Messi\",\n  \"currency\": \"EUR\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 43, "total_tokens": 157, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a151bc5a-f183-4523-b292-7103e4115f39", "event_id": "a151bc5a-f183-4523-b292-7103e4115f39", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 283778, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_314", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "99c437c5-07e9-4830-a77a-681b1d2c092a", "event_id": "a5afefe2-c239-4b8d-8fa6-477033e960e9", "parent_event_id": "99c437c5-07e9-4830-a77a-681b1d2c092a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2666, "start_time": "2024-06-20T03:57:22.797Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_315", "variant_name": null}, {"function_name": "Fn_simple_315", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_315\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"celebrity_name\":\"Lionel Messi\",\"meta\":\"Value\",\"sports\":\"Football\",\"team\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_315_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Returns a list of major achievements of a particular sports celebrity.\n  function_name: 'sports_celebrity.get_major_achievements' or null,\n  // Name of the sports celebrity.\n  celebrity_name: string,\n  // Type of sports the celebrity involved in. Default is Football.\n  sports: string or null,\n  // Optional. Team where celebrity currently plays. Default is 'all'\n  team: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find all the major achievements of the footballer Lionel Messi."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"sports_celebrity.get_major_achievements\",\n  \"celebrity_name\": \"Lionel Messi\",\n  \"sports\": \"Football\",\n  \"team\": \"all\"\n}\n\nSome of the major achievements of Lionel Messi, the renowned football (soccer) player, are:\n\n- 7-time Ballon d'Or winner (2009, 2010, 2011, 2012, 2015, 2019, 2021)\n- 4-time UEFA Champions League winner (2006, 2009, 2011, 2015)\n- 10-time La Liga title winner with Barcelona (2004\u201305, 2005\u201306, 2008\u201309, 2009\u201310, 2010\u201311, 2012\u201313, 2014\u201315, 2015\u201316, 2018\u201319, 2020\u201321)\n- 3-time Copa del Rey winner with Barcelona (2009, 2012, 2015)\n- 6-time Pichichi Trophy winner (2009\u201310, 2011\u201312, 2012\u201313, 2016\u201317, 2017\u201318, 2018\u201319)\n- Olympic gold medalist with Argentina (2008)\n- Copa Am\u00e9rica winner with Argentina (2021)\n- FIFA World Cup winner with Argentina (2022)\n\nMessi is widely regarded as one of the greatest football players of all time, having won numerous individual and team honors during his illustrious career.", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 367, "total_tokens": 501, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "99c437c5-07e9-4830-a77a-681b1d2c092a", "event_id": "99c437c5-07e9-4830-a77a-681b1d2c092a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 286445, "start_time": "2024-06-20T03:52:39.018Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_315", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3424682c-9486-4253-9a16-b1860eb70bc7", "event_id": "35f9e418-c9a3-43e2-a94e-74c04799b9d8", "parent_event_id": "3424682c-9486-4253-9a16-b1860eb70bc7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 712, "start_time": "2024-06-20T03:57:25.464Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_316", "variant_name": null}, {"function_name": "Fn_simple_316", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_316\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"season\":2021,\"meta\":\"Value\",\"top\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_316_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the defence ranking of NBA teams in a specified season.\n  function_name: 'get_defense_ranking' or null,\n  // The NBA season to get defence ranking from.\n  season: int,\n  // Number of top teams in defence ranking to fetch. (default: 1)\n  top: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the NBA team's ranking with the best defence in the 2021 season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_defense_ranking\",\n  \"season\": 2021,\n  \"top\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 46, "total_tokens": 160, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3424682c-9486-4253-9a16-b1860eb70bc7", "event_id": "3424682c-9486-4253-9a16-b1860eb70bc7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 287158, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_316", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "96019a9c-bfc5-4851-b11f-acb976178017", "event_id": "a127d095-8360-49ed-aa67-77b526a8f70e", "parent_event_id": "96019a9c-bfc5-4851-b11f-acb976178017", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 721, "start_time": "2024-06-20T03:57:26.177Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_317", "variant_name": null}, {"function_name": "Fn_simple_317", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_317\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sport\":\"tennis\",\"player_name\":\"Serena Williams\",\"meta\":\"Value\",\"gender\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_317_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current world ranking of a sportsperson based on the sport and player's name.\n  function_name: 'get_sport_ranking' or null,\n  // Name of the sport.\n  sport: string,\n  // Name of the player.\n  player_name: string,\n  // Gender of the player. This is optional. The possible values are male or female. (default: all)\n  gender: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the current world rank of a Tennis player, Serena Williams."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_sport_ranking\",\n  \"sport\": \"tennis\",\n  \"player_name\": \"Serena Williams\",\n  \"gender\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 47, "total_tokens": 183, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "96019a9c-bfc5-4851-b11f-acb976178017", "event_id": "96019a9c-bfc5-4851-b11f-acb976178017", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 287880, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_317", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f7c16800-f612-4d7b-a3d7-5a115154a086", "event_id": "409a9bb6-eaab-4ca4-9720-245862e5ab22", "parent_event_id": "f7c16800-f612-4d7b-a3d7-5a115154a086", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 813, "start_time": "2024-06-20T03:57:26.899Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_318", "variant_name": null}, {"function_name": "Fn_simple_318", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_318\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"LA Lakers\",\"league\":\"NBA\",\"season\":\"2021\",\"type\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_318_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the team ranking in a sports league based on season and type.\n  function_name: 'get_team_rank' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The name of the league in which the team competes.\n  league: string,\n  // The season for which the team's ranking is sought.\n  season: string,\n  // Type of the season: regular or playoff.\n  type: 'regular' or 'playoff',\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the ranking of LA Lakers in the NBA 2021 regular season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_team_rank\",\n  \"team_name\": \"LA Lakers\",\n  \"league\": \"NBA\",\n  \"season\": \"2021\",\n  \"type\": \"regular\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 152, "output_tokens": 66, "total_tokens": 218, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f7c16800-f612-4d7b-a3d7-5a115154a086", "event_id": "f7c16800-f612-4d7b-a3d7-5a115154a086", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 288694, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_318", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5560c4d7-4e8b-4324-8ba7-0ec39480d666", "event_id": "6cfc8ee2-a13f-4ddb-a5ae-bb5beacbe7fd", "parent_event_id": "5560c4d7-4e8b-4324-8ba7-0ec39480d666", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 819, "start_time": "2024-06-20T03:57:27.713Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_319", "variant_name": null}, {"function_name": "Fn_simple_319", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_319\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Germany\",\"year\":2021,\"meta\":\"Value\",\"gender\":\"men\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_319_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the FIFA ranking of a specific soccer team for a certain year.\n  function_name: 'get_team_ranking' or null,\n  // The name of the soccer team.\n  team_name: string,\n  // The year for which the ranking is to be retrieved.\n  year: int,\n  // The gender of the team. It can be either 'men' or 'women'. Default is 'men'.\n  gender: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the FIFA ranking of Germany's men soccer team for the year 2021?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_team_ranking\",\n  \"team_name\": \"Germany\",\n  \"year\": 2021,\n  \"gender\": \"men\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 47, "total_tokens": 192, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5560c4d7-4e8b-4324-8ba7-0ec39480d666", "event_id": "5560c4d7-4e8b-4324-8ba7-0ec39480d666", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 289515, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_319", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c7e99cd9-b8b4-4bd7-b6ed-3f9a991f17f0", "event_id": "7e9d99c4-9a70-4360-b9c1-3b8d055cc2f5", "parent_event_id": "c7e99cd9-b8b4-4bd7-b6ed-3f9a991f17f0", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T03:57:28.534Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_320", "variant_name": null}, {"function_name": "Fn_simple_320", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_320\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Manchester United\",\"league\":\"Premier League\",\"meta\":\"Value\",\"season\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_320_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch the ranking of a specific sports team in a specific league\n  function_name: 'sports_ranking' or null,\n  // The name of the team.\n  team: string,\n  // The name of the league.\n  league: string,\n  // Optional parameter to specify the season, default is the current season if not specified.\n  season: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the ranking of Manchester United in Premier League?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_ranking\",\n  \"team\": \"Manchester United\",\n  \"league\": \"Premier League\",\n  \"season\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 117, "output_tokens": 42, "total_tokens": 159, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c7e99cd9-b8b4-4bd7-b6ed-3f9a991f17f0", "event_id": "c7e99cd9-b8b4-4bd7-b6ed-3f9a991f17f0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 290332, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_320", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fedb2d0f-09cc-4e25-82b8-d104b71707e7", "event_id": "66125141-bc3d-4a1d-b401-7c6a7198dbe3", "parent_event_id": "fedb2d0f-09cc-4e25-82b8-d104b71707e7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 652, "start_time": "2024-06-20T03:57:29.351Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_321", "variant_name": null}, {"function_name": "Fn_simple_321", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_321\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Golden State Warriors\",\"season\":\"2022-2023\",\"meta\":\"Value\",\"detailed\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_321_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a team's position and stats in the basketball league for a given season.\n  function_name: 'sports_ranking.get_team_position' or null,\n  // The name of the team.\n  team: string,\n  // The season for which data should be fetched.\n  season: string,\n  // Flag to retrieve detailed stats or just the position.\n  detailed: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch the basketball league standings, where Golden State Warriors stand in current 2022-2023 season with details"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"sports_ranking.get_team_position\",\n  \"team\": \"Golden State Warriors\",\n  \"season\": \"2022-2023\",\n  \"detailed\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 62, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fedb2d0f-09cc-4e25-82b8-d104b71707e7", "event_id": "fedb2d0f-09cc-4e25-82b8-d104b71707e7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 290985, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_321", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7b93021d-4fef-4ff5-a68f-64c181b49459", "event_id": "c8634979-ee02-424b-a8ed-c3245748be97", "parent_event_id": "7b93021d-4fef-4ff5-a68f-64c181b49459", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 677, "start_time": "2024-06-20T03:57:30.005Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_322", "variant_name": null}, {"function_name": "Fn_simple_322", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_322\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Barcelona\",\"league\":\"La Liga\",\"season\":\"2021\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_322_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the ranking of a team in a given sports league and season.\n  function_name: 'sports_ranking' or null,\n  // The name of the team.\n  team: string,\n  // The name of the sports league.\n  league: string,\n  // The season for which ranking needs to be obtained.\n  season: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the ranking of Barcelona in the 2021 La Liga season?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_ranking\",\n  \"team\": \"Barcelona\",\n  \"league\": \"La Liga\",\n  \"season\": \"2021\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 116, "output_tokens": 44, "total_tokens": 160, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7b93021d-4fef-4ff5-a68f-64c181b49459", "event_id": "7b93021d-4fef-4ff5-a68f-64c181b49459", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 291663, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_322", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "538946d7-80ef-4cd8-9682-63a0d33fe683", "event_id": "a177784c-e211-4f9b-9178-d0d1554aeed0", "parent_event_id": "538946d7-80ef-4cd8-9682-63a0d33fe683", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:57:30.683Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_323", "variant_name": null}, {"function_name": "Fn_simple_323", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_323\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Liverpool Football Club\",\"league\":\"Premier League\",\"meta\":\"Value\",\"season\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_323_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current ranking of a specific team in a particular league.\n  function_name: 'sports_ranking.get_current' or null,\n  // The name of the team whose ranking is sought.\n  team: string,\n  // The league in which the team participates.\n  league: string,\n  // The season for which the ranking is sought. Defaults to the current season if not provided.\n  season: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the current ranking for Liverpool Football Club in the Premier League."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"sports_ranking.get_current\",\n  \"team\": \"Liverpool Football Club\",\n  \"league\": \"Premier League\",\n  \"season\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 57, "total_tokens": 191, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "538946d7-80ef-4cd8-9682-63a0d33fe683", "event_id": "538946d7-80ef-4cd8-9682-63a0d33fe683", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 292380, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_323", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a2e073fa-2b84-4dd1-b64e-6c615d65d39d", "event_id": "705383a5-60d4-45a4-8042-7e6c28c1fc28", "parent_event_id": "a2e073fa-2b84-4dd1-b64e-6c615d65d39d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 569, "start_time": "2024-06-20T03:57:31.400Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_324", "variant_name": null}, {"function_name": "Fn_simple_324", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_324\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sport\":\"tennis\",\"meta\":\"Value\",\"gender\":\"women\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_324_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the top player in a specific sport.\n  function_name: 'sports_ranking.get_top_player' or null,\n  // The type of sport.\n  sport: string,\n  // The gender of the sport category. Optional. (default: men)\n  gender: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who is ranked as the top player in woman tennis?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_ranking.get_top_player\",\n  \"sport\": \"tennis\",\n  \"gender\": \"women\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 101, "output_tokens": 40, "total_tokens": 141, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a2e073fa-2b84-4dd1-b64e-6c615d65d39d", "event_id": "a2e073fa-2b84-4dd1-b64e-6c615d65d39d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 292951, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_324", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2fba6b2b-2b44-4fcb-9ebe-0b3be9831c6d", "event_id": "20ea6dd1-eac3-4271-a93b-d8984554157f", "parent_event_id": "2fba6b2b-2b44-4fcb-9ebe-0b3be9831c6d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 700, "start_time": "2024-06-20T03:57:31.970Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_325", "variant_name": null}, {"function_name": "Fn_simple_325", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_325\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Los Angeles Lakers\",\"meta\":\"Value\",\"include_opponent\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_325_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the score of the most recent game for a specified sports team.\n  function_name: 'team_score.get_latest' or null,\n  // Name of the sports team.\n  team: string,\n  // Include the name of the opponent team in the return.\n  include_opponent: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the score of last game for Los Angeles Lakers including its opponent name."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"team_score.get_latest\",\n  \"team\": \"Los Angeles Lakers\",\n  \"include_opponent\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 40, "total_tokens": 149, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2fba6b2b-2b44-4fcb-9ebe-0b3be9831c6d", "event_id": "2fba6b2b-2b44-4fcb-9ebe-0b3be9831c6d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 293652, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_325", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "219119e1-c0e1-4434-95a1-f148c4ea25b9", "event_id": "e94997fc-6942-4477-a034-7b90d17fe5c9", "parent_event_id": "219119e1-c0e1-4434-95a1-f148c4ea25b9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 774, "start_time": "2024-06-20T03:57:32.671Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_326", "variant_name": null}, {"function_name": "Fn_simple_326", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_326\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team1\":\"Chicago Bulls\",\"team2\":\"Los Angeles Lakers\",\"meta\":\"Value\",\"season\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_326_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Returns the results of a given match between two teams.\n  function_name: 'sports.match_results' or null,\n  // The name of the first team.\n  team1: string,\n  // The name of the second team.\n  team2: string,\n  // The season when the match happened. Default is the current season.\n  season: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who won the last match between Chicago Bulls and Los Angeles Lakers?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"sports.match_results\",\n  \"team1\": \"Chicago Bulls\",\n  \"team2\": \"Los Angeles Lakers\",\n  \"season\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 120, "output_tokens": 57, "total_tokens": 177, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "219119e1-c0e1-4434-95a1-f148c4ea25b9", "event_id": "219119e1-c0e1-4434-95a1-f148c4ea25b9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 294428, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_326", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2e8520d8-2341-4c08-8015-4a49e38c0d77", "event_id": "bf24ca8c-b129-40d8-981f-c108d525d78b", "parent_event_id": "2e8520d8-2341-4c08-8015-4a49e38c0d77", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 820, "start_time": "2024-06-20T03:57:33.447Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_327", "variant_name": null}, {"function_name": "Fn_simple_327", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_327\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Los Angeles Lakers\",\"league\":\"NBA\",\"meta\":\"Value\",\"include_player_stats\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_327_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieves the latest game score, individual player stats, and team stats for a specified sports team.\n  function_name: 'get_team_score' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The league that the team is part of.\n  league: string,\n  // Indicates if individual player statistics should be included in the result. Default is false.\n  include_player_stats: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the latest game score and statistics for Los Angeles Lakers in NBA."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_team_score\",\n  \"team_name\": \"Los Angeles Lakers\",\n  \"league\": \"NBA\",\n  \"include_player_stats\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 141, "output_tokens": 60, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2e8520d8-2341-4c08-8015-4a49e38c0d77", "event_id": "2e8520d8-2341-4c08-8015-4a49e38c0d77", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 295249, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_327", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3b7c06b9-d3cd-4b61-b34b-9a0f8e5196a9", "event_id": "ba6609fd-9376-4739-b0a8-50dd9f2aa315", "parent_event_id": "3b7c06b9-d3cd-4b61-b34b-9a0f8e5196a9", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 753, "start_time": "2024-06-20T03:57:34.268Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_328", "variant_name": null}, {"function_name": "Fn_simple_328", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_328\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Manchester United\",\"num_of_games\":6,\"league\":\"Premier League\",\"meta\":\"Value\",\"location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_328_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the schedule of the specified sports team for the specified number of games in the given league.\n  function_name: 'sports_team.get_schedule' or null,\n  // The name of the sports team.\n  team_name: string,\n  // Number of games for which to fetch the schedule.\n  num_of_games: int,\n  // The name of the sports league. If not provided, the function will fetch the schedule for all games, regardless of the league.\n  league: string,\n  // Optional. The city or venue where games are to be held. If not provided, default that all venues will be considered.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me the schedule of Manchester United for the next 6 games in Premier League."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_team.get_schedule\",\n  \"team_name\": \"Manchester United\",\n  \"num_of_games\": 6,\n  \"league\": \"Premier League\",\n  \"location\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 191, "output_tokens": 60, "total_tokens": 251, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3b7c06b9-d3cd-4b61-b34b-9a0f8e5196a9", "event_id": "3b7c06b9-d3cd-4b61-b34b-9a0f8e5196a9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 296004, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_328", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ab6f9f1b-6d32-425c-9def-82f9e1a28956", "event_id": "1a61fd0d-a0cd-4d4a-a8eb-84c4b1c887cc", "parent_event_id": "ab6f9f1b-6d32-425c-9def-82f9e1a28956", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 678, "start_time": "2024-06-20T03:57:35.023Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_329", "variant_name": null}, {"function_name": "Fn_simple_329", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_329\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Ticket to Ride\",\"parameters\":[\"Value4\",\"Value0\"],\"meta\":\"Value\",\"language\":\"en\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_329_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve detailed information of a board game.\n  function_name: 'boardgame.get_info' or null,\n  // Name of the board game.\n  name: string,\n  // Game characteristics interested.\n  parameters: [\n    'player count' or 'playing time' or 'age' or 'mechanics' or 'rating'\n  ],\n  // The preferred language for the game information, default is English\n  language: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the rating and player count of the board game 'Ticket to Ride'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"boardgame.get_info\",\n  \"name\": \"Ticket to Ride\",\n  \"parameters\": [\n    \"rating\",\n    \"player count\"\n  ],\n  \"language\": \"en\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 62, "total_tokens": 208, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ab6f9f1b-6d32-425c-9def-82f9e1a28956", "event_id": "ab6f9f1b-6d32-425c-9def-82f9e1a28956", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 296683, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_329", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "aeff2116-4025-4d01-adb5-60d1dcbdc008", "event_id": "e491579a-934e-496b-8d3e-05a28672389e", "parent_event_id": "aeff2116-4025-4d01-adb5-60d1dcbdc008", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1635, "start_time": "2024-06-20T03:57:35.703Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_330", "variant_name": null}, {"function_name": "Fn_simple_330", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_330\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":7,\"dice_number\":2,\"meta\":\"Value\",\"dice_faces\":6}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_330_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the probability of rolling a certain sum with two dice, commonly used in board game like Monopoly.\n  function_name: 'monopoly_odds_calculator' or null,\n  // The number for which the odds are calculated.\n  number: int,\n  // The number of dice involved in the roll.\n  dice_number: int,\n  // The number of faces on a single die. Default is 6 for standard six-faced die.\n  dice_faces: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the odds of rolling a 7 with two dice in the board game Monopoly."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"monopoly_odds_calculator\",\n  \"number\": 7,\n  \"dice_number\": 2,\n  \"dice_faces\": 6\n}\n\nThe probability of rolling a 7 with two standard six-faced dice in Monopoly is 1/6.\n\nThis is because there are 6 possible outcomes that sum up to 7:\n(1, 6), (2, 5), (3, 4), (4, 3), (5, 2), (6, 1)\n\nEach of these outcomes has an equal probability of 1/36 (1 out of 6 possible results for the first die, multiplied by 1 out of 6 possible results for the second die).\n\nTherefore, the total probability of rolling a 7 is the sum of these 6 outcomes, which is 6/36 = 1/6 or approximately 16.67%.", "metadata": {"logprobs": null, "prompt_tokens": 155, "output_tokens": 219, "total_tokens": 374, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "aeff2116-4025-4d01-adb5-60d1dcbdc008", "event_id": "aeff2116-4025-4d01-adb5-60d1dcbdc008", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 298319, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_330", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d52374db-8396-4ac0-8271-26b551c40cb7", "event_id": "85a7954c-4acb-42d5-b08d-dbc8807ffa5e", "parent_event_id": "d52374db-8396-4ac0-8271-26b551c40cb7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 739, "start_time": "2024-06-20T03:57:37.339Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_331", "variant_name": null}, {"function_name": "Fn_simple_331", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_331\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_name\":\"Catan\",\"info_required\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_331_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the information about a board game from a database. \n  function_name: 'board_game_info' or null,\n  // Name of the board game.\n  game_name: string,\n  // Array of information requested for the game.\n  info_required: [\n    'average_review_rating' or 'age_range' or 'number_of_players' or 'playing_time' or 'genre'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the average review rating and the age range for the board game 'Catan'?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"board_game_info\",\n  \"game_name\": \"Catan\",\n  \"info_required\": [\n    \"average_review_rating\",\n    \"age_range\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 69, "total_tokens": 215, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d52374db-8396-4ac0-8271-26b551c40cb7", "event_id": "d52374db-8396-4ac0-8271-26b551c40cb7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 299059, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_331", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "55ae5dcd-638a-4e80-88e3-289d6c765439", "event_id": "fd64d3c2-4fbd-4a7f-add8-3f027c5974a8", "parent_event_id": "55ae5dcd-638a-4e80-88e3-289d6c765439", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 551, "start_time": "2024-06-20T03:57:38.078Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_332", "variant_name": null}, {"function_name": "Fn_simple_332", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_332\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"minimum_rating\":2300,\"meta\":\"Value\",\"number_of_players\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_332_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find top chess players in a location based on rating.\n  function_name: 'board_game.chess.get_top_players' or null,\n  // The city you want to find the players from.\n  location: string,\n  // Minimum rating to filter the players.\n  minimum_rating: int,\n  // Number of players you want to retrieve, default value is 10 (default: 10)\n  number_of_players: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the top chess players in New York with a rating above 2300."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"board_game.chess.get_top_players\",\n  \"location\": \"New York\",\n  \"minimum_rating\": 2300,\n  \"number_of_players\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 144, "output_tokens": 57, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "55ae5dcd-638a-4e80-88e3-289d6c765439", "event_id": "55ae5dcd-638a-4e80-88e3-289d6c765439", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 299612, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_332", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "24ec25a1-5be6-4810-9e39-0771e6b1f9c6", "event_id": "889d6abd-e27e-4f17-988b-5c4855c3ed18", "parent_event_id": "24ec25a1-5be6-4810-9e39-0771e6b1f9c6", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 519, "start_time": "2024-06-20T03:57:38.631Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_333", "variant_name": null}, {"function_name": "Fn_simple_333", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_333\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Magnus Carlsen\",\"meta\":\"Value\",\"variant\":\"classical\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_333_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetches the current chess rating of a given player\n  function_name: 'chess.rating' or null,\n  // The full name of the chess player.\n  player_name: string,\n  // The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'.\n  variant: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the chess classical rating of Magnus Carlsen?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"chess.rating\",\n  \"player_name\": \"Magnus Carlsen\",\n  \"variant\": \"classical\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 39, "total_tokens": 162, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "24ec25a1-5be6-4810-9e39-0771e6b1f9c6", "event_id": "24ec25a1-5be6-4810-9e39-0771e6b1f9c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 300133, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_333", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0b16e252-d4bd-4597-9493-8013cc95baf1", "event_id": "9901ba46-9324-4d6d-8115-7d1b585955cf", "parent_event_id": "0b16e252-d4bd-4597-9493-8013cc95baf1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 768, "start_time": "2024-06-20T03:57:39.152Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_334", "variant_name": null}, {"function_name": "Fn_simple_334", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_334\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"London, United Kingdom\",\"days\":3,\"details\":[\"Value0\",\"Value1\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_334_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a detailed weather forecast for a specific location and time frame, including high/low temperatures, humidity, and precipitation.\n  function_name: 'detailed_weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n  // Specific weather details required in the forecast.\n  details: [\n    'high_low_temperature' or 'humidity' or 'precipitation'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the high and low temperatures, humidity, and precipitation for London, United Kingdom for the next 3 days."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"detailed_weather_forecast\",\n  \"location\": \"London, United Kingdom\",\n  \"days\": 3,\n  \"details\": [\n    \"high_low_temperature\",\n    \"humidity\",\n    \"precipitation\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 162, "output_tokens": 77, "total_tokens": 239, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0b16e252-d4bd-4597-9493-8013cc95baf1", "event_id": "0b16e252-d4bd-4597-9493-8013cc95baf1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 300902, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_334", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5bb764ec-b277-4c1d-8408-fab8c340ca43", "event_id": "e6d32610-fd15-4fd1-a45c-7301697f5d45", "parent_event_id": "5bb764ec-b277-4c1d-8408-fab8c340ca43", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1112, "start_time": "2024-06-20T03:57:39.921Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_335", "variant_name": null}, {"function_name": "Fn_simple_335", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_335\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_cards\":[\"A\",\"10\"],\"dealer_cards\":[\"10\",\"9\"],\"meta\":\"Value\",\"ace_value\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_335_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Checks and determines the winner in a game of blackjack.\n  function_name: 'blackjack.check_winner' or null,\n  // Cards held by the player.\n  player_cards: string[],\n  // Cards held by the dealer.\n  dealer_cards: string[],\n  // The value considered for the ace card, can be either 1 or 11. (default: 11)\n  ace_value: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Check who is the winner in a game of blackjack given player having A and 10, dealer having 10 and 9. The Ace is considered 1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"blackjack.check_winner\",\n  \"player_cards\": [\"A\", \"10\"],\n  \"dealer_cards\": [\"10\", \"9\"],\n  \"ace_value\": 1\n}\n\nThe winner in this game of blackjack is the player. The player has a hand value of 21 (A + 10), while the dealer has a hand value of 19 (10 + 9). Since the player's hand value is higher, they are the winner.", "metadata": {"logprobs": null, "prompt_tokens": 164, "output_tokens": 129, "total_tokens": 293, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5bb764ec-b277-4c1d-8408-fab8c340ca43", "event_id": "5bb764ec-b277-4c1d-8408-fab8c340ca43", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 302015, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_335", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "08096588-d510-40af-87c7-d33de9ffaefa", "event_id": "d5b1f472-9f9c-4aaf-990d-909f52ad899a", "parent_event_id": "08096588-d510-40af-87c7-d33de9ffaefa", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 4802, "start_time": "2024-06-20T03:57:41.035Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_336", "variant_name": null}, {"function_name": "Fn_simple_336", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_336\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"rank\":\"Queen\",\"suit\":\"Hearts\",\"deck\":[{\"rank\":\"Ace\",\"suit\":\"Hearts\"},{\"rank\":\"Two\",\"suit\":\"Hearts\"},{\"rank\":\"Three\",\"suit\":\"Hearts\"},{\"rank\":\"Four\",\"suit\":\"Hearts\"},{\"rank\":\"Five\",\"suit\":\"Hearts\"},{\"rank\":\"Six\",\"suit\":\"Hearts\"},{\"rank\":\"Seven\",\"suit\":\"Hearts\"},{\"rank\":\"Eight\",\"suit\":\"Hearts\"},{\"rank\":\"Nine\",\"suit\":\"Hearts\"},{\"rank\":\"Ten\",\"suit\":\"Hearts\"},{\"rank\":\"Jack\",\"suit\":\"Hearts\"},{\"rank\":\"Queen\",\"suit\":\"Hearts\"},{\"rank\":\"King\",\"suit\":\"Hearts\"},{\"rank\":\"Ace\",\"suit\":\"Diamonds\"},{\"rank\":\"Two\",\"suit\":\"Diamonds\"},{\"rank\":\"Three\",\"suit\":\"Diamonds\"},{\"rank\":\"Four\",\"suit\":\"Diamonds\"},{\"rank\":\"Five\",\"suit\":\"Diamonds\"},{\"rank\":\"Six\",\"suit\":\"Diamonds\"},{\"rank\":\"Seven\",\"suit\":\"Diamonds\"},{\"rank\":\"Eight\",\"suit\":\"Diamonds\"},{\"rank\":\"Nine\",\"suit\":\"Diamonds\"},{\"rank\":\"Ten\",\"suit\":\"Diamonds\"},{\"rank\":\"Jack\",\"suit\":\"Diamonds\"},{\"rank\":\"Queen\",\"suit\":\"Diamonds\"},{\"rank\":\"King\",\"suit\":\"Diamonds\"},{\"rank\":\"Ace\",\"suit\":\"Clubs\"},{\"rank\":\"Two\",\"suit\":\"Clubs\"},{\"rank\":\"Three\",\"suit\":\"Clubs\"},{\"rank\":\"Four\",\"suit\":\"Clubs\"},{\"rank\":\"Five\",\"suit\":\"Clubs\"},{\"rank\":\"Six\",\"suit\":\"Clubs\"},{\"rank\":\"Seven\",\"suit\":\"Clubs\"},{\"rank\":\"Eight\",\"suit\":\"Clubs\"},{\"rank\":\"Nine\",\"suit\":\"Clubs\"},{\"rank\":\"Ten\",\"suit\":\"Clubs\"},{\"rank\":\"Jack\",\"suit\":\"Clubs\"},{\"rank\":\"Queen\",\"suit\":\"Clubs\"},{\"rank\":\"King\",\"suit\":\"Clubs\"},{\"rank\":\"Ace\",\"suit\":\"Spades\"},{\"rank\":\"Two\",\"suit\":\"Spades\"},{\"rank\":\"Three\",\"suit\":null}],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_336_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate a particular card in a deck based on rank and suit.\n  function_name: 'find_card_in_deck' or null,\n  // Rank of the card (e.g. Ace, Two, King).\n  rank: string,\n  // Suit of the card (e.g. Hearts, Spades, Diamonds, Clubs).\n  suit: string,\n  // Deck of cards. If not provided, the deck will be a standard 52 card deck\n  deck: [\n    {\n      // \n      rank: string or null,\n      // \n      suit: string or null,\n    }\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a Card of rank 'Queen' and suit 'Hearts' in the deck."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"find_card_in_deck\",\n  \"rank\": \"Queen\",\n  \"suit\": \"Hearts\",\n  \"deck\": [\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Spades\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Spades\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit", "metadata": {"logprobs": null, "prompt_tokens": 191, "output_tokens": 1000, "total_tokens": 1191, "finish_reason": "\"max_tokens\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "08096588-d510-40af-87c7-d33de9ffaefa", "event_id": "08096588-d510-40af-87c7-d33de9ffaefa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 306819, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_336", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "907e7e29-471f-49f7-8a91-cfaae0d23cd7", "event_id": "ce8a3e33-d4c4-4d67-80f8-01002660e607", "parent_event_id": "907e7e29-471f-49f7-8a91-cfaae0d23cd7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:57:45.838Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_337", "variant_name": null}, {"function_name": "Fn_simple_337", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_337\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num_cards\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_337_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Shuffle a standard deck of 52 cards and draw a specified number of cards from the top.\n  function_name: 'cards.shuffle_and_draw' or null,\n  // Number of cards to be drawn. The default is 1 if no value is provided.\n  num_cards: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Shuffle a deck of cards, and draw 3 cards from the top."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"cards.shuffle_and_draw\",\n  \"num_cards\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 108, "output_tokens": 31, "total_tokens": 139, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "907e7e29-471f-49f7-8a91-cfaae0d23cd7", "event_id": "907e7e29-471f-49f7-8a91-cfaae0d23cd7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 307433, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_337", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "949a4b3a-86ee-4f5e-a3cf-bea5a4c0207c", "event_id": "534fcc20-6c2a-4691-a653-e5b07137201e", "parent_event_id": "949a4b3a-86ee-4f5e-a3cf-bea5a4c0207c", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1513, "start_time": "2024-06-20T03:57:46.452Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_339", "variant_name": null}, {"function_name": "Fn_simple_339", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_339\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_cards\":52,\"desired_cards\":13,\"meta\":\"Value\",\"cards_drawn\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_339_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the probability of drawing a certain card or suit from a deck of cards.\n  function_name: 'card_game_probability.calculate' or null,\n  // Total number of cards in the deck.\n  total_cards: int,\n  // Number of cards in the deck that satisfy the conditions.\n  desired_cards: int,\n  // Number of cards drawn from the deck. (default: 1)\n  cards_drawn: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the probability of drawing a heart card from a deck of 52 cards?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"card_game_probability.calculate\",\n  \"total_cards\": 52,\n  \"desired_cards\": 13,\n  \"cards_drawn\": 1\n}\n\nThe probability of drawing a heart card from a deck of 52 cards is 13/52 = 0.25 or 25%.\n\nIn a standard deck of 52 playing cards, there are 13 cards in each suit (hearts, diamonds, clubs, and spades). Therefore, the total number of cards in the deck is 52, and the number of desired cards (heart cards) is 13. Since we are drawing 1 card, the probability of drawing a heart card is 13/52 = 0.25 or 25%.", "metadata": {"logprobs": null, "prompt_tokens": 142, "output_tokens": 175, "total_tokens": 317, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "949a4b3a-86ee-4f5e-a3cf-bea5a4c0207c", "event_id": "949a4b3a-86ee-4f5e-a3cf-bea5a4c0207c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 308947, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_339", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "76408a31-8ef0-48a2-a1f4-d33d83f428ec", "event_id": "2d1482b5-0b5c-4a8f-86cc-eaf34b25d97b", "parent_event_id": "76408a31-8ef0-48a2-a1f4-d33d83f428ec", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2275, "start_time": "2024-06-20T03:57:47.967Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_340", "variant_name": null}, {"function_name": "Fn_simple_340", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_340\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"deck_size\":52,\"hand_size\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_340_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the probability of getting a full house in a poker game.\n  function_name: 'poker_probability.full_house' or null,\n  // The size of the deck. Default is 52.\n  deck_size: int,\n  // The size of the hand. Default is 5.\n  hand_size: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the probability of getting a full house in poker?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"poker_probability.full_house\",\n  \"deck_size\": 52,\n  \"hand_size\": 5\n}\n\nThe probability of getting a full house in a standard 52-card poker deck with a hand size of 5 cards is approximately 0.0144 or 1.44%.\n\nThis can be calculated using the formula for combinations:\n\nP(full house) = (4 choose 3) * (13 choose 2) / (52 choose 5)\n\nWhere:\n- (4 choose 3) represents the number of ways to choose 3 of the 4 suits for the three-of-a-kind\n- (13 choose 2) represents the number of ways to choose the two ranks for the pair\n- (52 choose 5) represents the total number of ways to choose a 5-card hand from the 52-card deck\n\nPlugging in the values, we get:\n\nP(full house) = (4 * 6) * (13 * 12) / (52 * 51 * 50 * 49 * 48)\n            = 24 * 156 / 2,598,960\n            = 3,744 / 2,598,960\n            = 0.0144 or 1.44%", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 321, "total_tokens": 430, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "76408a31-8ef0-48a2-a1f4-d33d83f428ec", "event_id": "76408a31-8ef0-48a2-a1f4-d33d83f428ec", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 311223, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_340", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8a763172-b1bb-409a-ad73-f41156c865bb", "event_id": "30276a70-f8f3-4a16-8d3c-b595476b59e8", "parent_event_id": "8a763172-b1bb-409a-ad73-f41156c865bb", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1329, "start_time": "2024-06-20T03:57:50.242Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_341", "variant_name": null}, {"function_name": "Fn_simple_341", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_341\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player1\":\"John\",\"hand1\":[\"8\u2665\",\"10\u2665\",\"J\u2665\",\"Q\u2665\",\"K\u2665\"],\"player2\":\"Mike\",\"hand2\":[\"9\u2660\",\"J\u2660\",\"10\u2660\",\"Q\u2660\",\"K\u2660\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_341_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Determines the winner in a game of Poker based on the cards in each players' hands.\n  function_name: 'card_games.poker_determine_winner' or null,\n  // The first player's name.\n  player1: string,\n  // The list of cards (as strings) in first player's hand. E.g ['10\u2660', 'J\u2660']\n  hand1: string[],\n  // The second player's name.\n  player2: string,\n  // The list of cards (as strings) in second player's hand. E.g ['9\u2665', '10\u2665']\n  hand2: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Determine the winner in a Poker game with John having a Hand of 8\u2665, 10\u2665, J\u2665, Q\u2665, K\u2665 and Mike having 9\u2660, J\u2660, 10\u2660, Q\u2660, K\u2660."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"card_games.poker_determine_winner\",\n  \"player1\": \"John\",\n  \"hand1\": [\"8\u2665\", \"10\u2665\", \"J\u2665\", \"Q\u2665\", \"K\u2665\"],\n  \"player2\": \"Mike\",\n  \"hand2\": [\"9\u2660\", \"J\u2660\", \"10\u2660\", \"Q\u2660\", \"K\u2660\"]\n}\n\nThe winner in this game of Poker is John. John has a Royal Flush (the highest possible hand in Poker), while Mike has a Straight Flush. A Royal Flush beats a Straight Flush, so John is the winner.", "metadata": {"logprobs": null, "prompt_tokens": 233, "output_tokens": 157, "total_tokens": 390, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8a763172-b1bb-409a-ad73-f41156c865bb", "event_id": "8a763172-b1bb-409a-ad73-f41156c865bb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 312554, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_341", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "567355e6-f1c7-4bef-bf22-1c7f49403fd8", "event_id": "55b83bb0-14c2-4368-b0f7-72b31e0548b6", "parent_event_id": "567355e6-f1c7-4bef-bf22-1c7f49403fd8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T03:57:51.573Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_342", "variant_name": null}, {"function_name": "Fn_simple_342", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_342\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"suit\":\"hearts\",\"deck_type\":\"without_joker\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_342_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Compute the probability of drawing a specific suit from a given deck of cards.\n  function_name: 'deck_of_cards.odds' or null,\n  // The card suit. Valid values include: 'spades', 'clubs', 'hearts', 'diamonds'.\n  suit: string,\n  // Type of deck, normal deck includes joker, and without_joker deck excludes joker. (default: normal)\n  deck_type: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the odds of drawing a heart card from a deck without joker?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"deck_of_cards.odds\",\n  \"suit\": \"hearts\",\n  \"deck_type\": \"without_joker\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 43, "total_tokens": 186, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "567355e6-f1c7-4bef-bf22-1c7f49403fd8", "event_id": "567355e6-f1c7-4bef-bf22-1c7f49403fd8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 313270, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_342", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "490f46ed-6bf2-47fe-a615-d178b324fa08", "event_id": "ea5a44fc-b19a-4bc0-a463-b9c10bb49796", "parent_event_id": "490f46ed-6bf2-47fe-a615-d178b324fa08", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 779, "start_time": "2024-06-20T03:57:52.289Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_343", "variant_name": null}, {"function_name": "Fn_simple_343", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_343\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"release_year\":2019,\"multiplayer\":true,\"ESRB_rating\":\"Everyone\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_343_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get a list of video games based on release year, multiplayer functionality and ESRB rating\n  function_name: 'game_list.get_games' or null,\n  // The year the game was released.\n  release_year: int,\n  // Whether the game has multiplayer functionality.\n  multiplayer: bool,\n  // The ESRB rating of the game.\n  ESRB_rating: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find all multi-player games released in 2019 with an ESRB rating of 'Everyone'"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"game_list.get_games\",\n  \"release_year\": 2019,\n  \"multiplayer\": true,\n  \"ESRB_rating\": \"Everyone\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 144, "output_tokens": 64, "total_tokens": 208, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "490f46ed-6bf2-47fe-a615-d178b324fa08", "event_id": "490f46ed-6bf2-47fe-a615-d178b324fa08", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 314050, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_343", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d80b5bf5-f945-4e66-a9c5-273f0c6338e7", "event_id": "16d5e3ea-cc93-47e7-947e-5cf46da28a02", "parent_event_id": "d80b5bf5-f945-4e66-a9c5-273f0c6338e7", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 795, "start_time": "2024-06-20T03:57:53.070Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_344", "variant_name": null}, {"function_name": "Fn_simple_344", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_344\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Zelda\",\"username\":\"Sam\",\"meta\":\"Value\",\"platform\":\"Switch\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_344_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch player statistics for a specific video game for a given user.\n  function_name: 'game_stats.fetch_player_statistics' or null,\n  // The name of the video game.\n  game: string,\n  // The username of the player.\n  username: string,\n  // The platform user is playing on. (default: PC)\n  platform: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch player statistics of 'Zelda' on Switch for user 'Sam'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"game_stats.fetch_player_statistics\",\n  \"game\": \"Zelda\",\n  \"username\": \"Sam\",\n  \"platform\": \"Switch\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 129, "output_tokens": 60, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d80b5bf5-f945-4e66-a9c5-273f0c6338e7", "event_id": "d80b5bf5-f945-4e66-a9c5-273f0c6338e7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 314846, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_344", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dcbcd107-1d86-43fe-8a35-beaac9f5812b", "event_id": "a8844cfa-6602-465c-b145-db61e91d61ba", "parent_event_id": "dcbcd107-1d86-43fe-8a35-beaac9f5812b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 880, "start_time": "2024-06-20T03:57:53.866Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_345", "variant_name": null}, {"function_name": "Fn_simple_345", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_345\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Legend of Zelda: Breath of the Wild\",\"item\":\"Guardian Sword+\",\"stat\":\"power\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_345_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the statistics of a specific item in a specific video game.\n  function_name: 'get_game_item_stats' or null,\n  // The game to retrieve information from.\n  game: string,\n  // The name of the item in the game.\n  item: string,\n  // Specific statistic required.\n  stat: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the power rating for the Weapon 'Guardian Sword+' in the game 'Legend of Zelda: Breath of the Wild'?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_game_item_stats\",\n  \"game\": \"Legend of Zelda: Breath of the Wild\",\n  \"item\": \"Guardian Sword+\",\n  \"stat\": \"power\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 137, "output_tokens": 69, "total_tokens": 206, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dcbcd107-1d86-43fe-8a35-beaac9f5812b", "event_id": "dcbcd107-1d86-43fe-8a35-beaac9f5812b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 315727, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_345", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f89381e1-0fea-487c-bf80-88254aa6ce77", "event_id": "773dc26f-0ede-49de-ad96-b4c06945a15b", "parent_event_id": "f89381e1-0fea-487c-bf80-88254aa6ce77", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:57:54.746Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_346", "variant_name": null}, {"function_name": "Fn_simple_346", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_346\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_name\":\"Super Mario Bros.\",\"release_year\":1985,\"meta\":\"Value\",\"condition\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_346_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get the current market value of a vintage video game.\n  function_name: 'game_valuation' or null,\n  // The name of the game.\n  game_name: string,\n  // The year the game was released.\n  release_year: int,\n  // The condition of the game. Default is 'Used'.\n  condition: 'New' or 'Like New' or 'Used' or 'Fair' or 'Poor' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the value of a vintage Super Mario Bros. game from 1985 like new."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"game_valuation\",\n  \"game_name\": \"Super Mario Bros.\",\n  \"release_year\": 1985,\n  \"condition\": \"Like New\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 149, "output_tokens": 51, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f89381e1-0fea-487c-bf80-88254aa6ce77", "event_id": "f89381e1-0fea-487c-bf80-88254aa6ce77", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 316444, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_346", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b71f49d5-0346-4d40-8279-0c0f9e6aaa30", "event_id": "cfbc71b3-a47b-44a6-aa88-3fe8fef4660d", "parent_event_id": "b71f49d5-0346-4d40-8279-0c0f9e6aaa30", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:57:55.464Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_347", "variant_name": null}, {"function_name": "Fn_simple_347", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_347\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_name\":\"Animal Crossing: New Horizons\",\"season\":\"Spring\",\"meta\":\"Value\",\"item_type\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_347_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a list of collectable items in a specific game during a specified season.\n  function_name: 'get_collectables_in_season' or null,\n  // Name of the game.\n  game_name: string,\n  // The season for which to retrieve the collectable items.\n  season: string,\n  // The type of item to search for. Default is 'all'. Possible values: 'all', 'bug', 'fish', 'sea creatures', etc.\n  item_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get all collectable items from the game 'Animal Crossing: New Horizons' during the Spring season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_collectables_in_season\",\n  \"game_name\": \"Animal Crossing: New Horizons\",\n  \"season\": \"Spring\",\n  \"item_type\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 168, "output_tokens": 58, "total_tokens": 226, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b71f49d5-0346-4d40-8279-0c0f9e6aaa30", "event_id": "b71f49d5-0346-4d40-8279-0c0f9e6aaa30", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 317058, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_347", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "647ede68-7ee8-4ac0-b9ee-11af2f385cb0", "event_id": "928c8ce9-407a-49b3-b374-bc9039f9421e", "parent_event_id": "647ede68-7ee8-4ac0-b9ee-11af2f385cb0", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 566, "start_time": "2024-06-20T03:57:56.078Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_348", "variant_name": null}, {"function_name": "Fn_simple_348", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_348\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Liverpool F.C.\",\"meta\":\"Value\",\"include_stats\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_348_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the details of the last match played by a specified soccer club.\n  function_name: 'soccer.get_last_match' or null,\n  // The name of the soccer club.\n  team_name: string,\n  // If true, include match statistics like possession, shots on target etc. Default is false.\n  include_stats: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the details of the last game played by Liverpool F.C. Include its statistics."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"soccer.get_last_match\",\n  \"team_name\": \"Liverpool F.C.\",\n  \"include_stats\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 43, "total_tokens": 166, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "647ede68-7ee8-4ac0-b9ee-11af2f385cb0", "event_id": "647ede68-7ee8-4ac0-b9ee-11af2f385cb0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 317626, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_348", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4795475b-8341-464d-b8b5-f4893041f792", "event_id": "ae842aee-e6b6-4c05-b37a-62b03e150819", "parent_event_id": "4795475b-8341-464d-b8b5-f4893041f792", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 684, "start_time": "2024-06-20T03:57:56.646Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_350", "variant_name": null}, {"function_name": "Fn_simple_350", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_350\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Overwatch\",\"platform\":\"PC\",\"meta\":\"Value\",\"region\":\"Global\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_350_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the highest score achieved by any player in a specific game.\n  function_name: 'game_score.highest' or null,\n  // The name of the online game.\n  game: string,\n  // The platform where the game is played, e.g. PC, Xbox, Playstation\n  platform: string,\n  // The geographic region of the player. Defaults to 'Global'\n  region: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the highest score achieved by any player in the online game 'Overwatch' on PC globally."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"game_score.highest\",\n  \"game\": \"Overwatch\",\n  \"platform\": \"PC\",\n  \"region\": \"Global\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 143, "output_tokens": 56, "total_tokens": 199, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4795475b-8341-464d-b8b5-f4893041f792", "event_id": "4795475b-8341-464d-b8b5-f4893041f792", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 318311, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_350", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b11acbee-681d-43f3-89b6-15f398830751", "event_id": "11be494e-856b-4f97-bb6f-472fa364fbd0", "parent_event_id": "b11acbee-681d-43f3-89b6-15f398830751", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 530, "start_time": "2024-06-20T03:57:57.331Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_351", "variant_name": null}, {"function_name": "Fn_simple_351", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_351\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Valorant\",\"season\":\"2022\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_351_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the highest scoring player in a specific game and season.\n  function_name: 'get_highest_scoring_player' or null,\n  // The game in which you want to find the highest scoring player.\n  game: string,\n  // The season during which the high score was achieved.\n  season: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the highest scoring player of game 'Valorant' in 2022 season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_highest_scoring_player\",\n  \"game\": \"Valorant\",\n  \"season\": \"2022\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 114, "output_tokens": 51, "total_tokens": 165, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b11acbee-681d-43f3-89b6-15f398830751", "event_id": "b11acbee-681d-43f3-89b6-15f398830751", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 318842, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_351", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a29cc828-7f2f-47b7-a4a3-79d185d883f2", "event_id": "8df37256-a68c-43d6-a617-a31343abe229", "parent_event_id": "a29cc828-7f2f-47b7-a4a3-79d185d883f2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 674, "start_time": "2024-06-20T03:57:57.861Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_352", "variant_name": null}, {"function_name": "Fn_simple_352", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_352\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"platform\":\"Windows 10\",\"rating\":4.5,\"meta\":\"Value\",\"genre\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_352_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate multiplayer games that match specific criteria such as rating, platform compatibility, genre, etc.\n  function_name: 'multiplayer_game_finder' or null,\n  // The platform you want the game to be compatible with, e.g. Windows 10, PS5.\n  platform: string,\n  // Desired minimum game rating on a 5.0 scale.\n  rating: float,\n  // Desired game genre, e.g. Action, Adventure, Racing. Default is 'Action'.\n  genre: 'Action' or 'Adventure' or 'Racing' or 'Strategy' or 'Simulation' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a multiplayer game with rating above 4.5 and compatible with Windows 10."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"multiplayer_game_finder\",\n  \"platform\": \"Windows 10\",\n  \"rating\": 4.5,\n  \"genre\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 190, "output_tokens": 47, "total_tokens": 237, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a29cc828-7f2f-47b7-a4a3-79d185d883f2", "event_id": "a29cc828-7f2f-47b7-a4a3-79d185d883f2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 319517, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_352", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c5feb534-c3e4-40df-8e20-f8c924e1c982", "event_id": "1ccce6af-a5f4-44c2-bbce-a8f554b11863", "parent_event_id": "c5feb534-c3e4-40df-8e20-f8c924e1c982", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:57:58.537Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_353", "variant_name": null}, {"function_name": "Fn_simple_353", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_353\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_name\":\"The Legend of Zelda: Breath of the Wild\",\"platform\":\"all platforms\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_353_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the average user score of a game from GameSpot.\n  function_name: 'gamespot.getAverageUserScore' or null,\n  // The name of the game.\n  game_name: string,\n  // The platform the game was released on (e.g., Nintendo Switch, PS5, etc.) (default: all platforms)\n  platform: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the average user score for the game 'The Legend of Zelda: Breath of the Wild' from GameSpot."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"gamespot.getAverageUserScore\",\n  \"game_name\": \"The Legend of Zelda: Breath of the Wild\",\n  \"platform\": \"all platforms\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 64, "total_tokens": 200, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c5feb534-c3e4-40df-8e20-f8c924e1c982", "event_id": "c5feb534-c3e4-40df-8e20-f8c924e1c982", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 320235, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_353", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6996a639-157e-4d19-bccb-58fce7e31165", "event_id": "0ae93adf-9759-40c9-af32-a24f23659a1f", "parent_event_id": "6996a639-157e-4d19-bccb-58fce7e31165", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 656, "start_time": "2024-06-20T03:57:59.254Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_354", "variant_name": null}, {"function_name": "Fn_simple_354", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_354\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"diet\":\"gluten-free\",\"meal_type\":\"dinner\",\"ingredients\":[],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_354_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find recipes based on dietary restrictions, meal type, and preferred ingredients.\n  function_name: 'find_recipes' or null,\n  // The dietary restrictions, e.g., 'vegan', 'gluten-free'.\n  diet: string,\n  // The type of meal, e.g., 'dinner', 'breakfast'.\n  meal_type: string,\n  // The preferred ingredients. If left blank, it will default to return general recipes.\n  ingredients: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: What are some gluten-free recipes for dinner?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_recipes\",\n  \"diet\": \"gluten-free\",\n  \"meal_type\": \"dinner\",\n  \"ingredients\": []\n}", "metadata": {"logprobs": null, "prompt_tokens": 144, "output_tokens": 45, "total_tokens": 189, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6996a639-157e-4d19-bccb-58fce7e31165", "event_id": "6996a639-157e-4d19-bccb-58fce7e31165", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 320892, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_354", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1c430358-e19e-45c0-a5e6-6ec8e91cca7e", "event_id": "610439ab-e762-449d-b455-67de7ed55625", "parent_event_id": "1c430358-e19e-45c0-a5e6-6ec8e91cca7e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 773, "start_time": "2024-06-20T03:57:59.912Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_355", "variant_name": null}, {"function_name": "Fn_simple_355", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_355\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dish_type\":\"Value0\",\"cooking_time\":30,\"ingredient_preference\":[],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_355_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve a vegan soup recipe based on the provided cooking time.\n  function_name: 'get_vegan_recipe' or null,\n  // The type of dish, e.g. soup, dessert, etc.\n  dish_type: 'soup' or 'main dish' or 'dessert' or 'salad',\n  // The maximum cooking time for the recipe in minutes.\n  cooking_time: int,\n  // Preferred ingredients to be included in the recipe, if any. Default to not use it if not provided.\n  ingredient_preference: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a vegan soup recipe that takes under 30 minutes to make."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_vegan_recipe\",\n  \"dish_type\": \"soup\",\n  \"cooking_time\": 30,\n  \"ingredient_preference\": []\n}", "metadata": {"logprobs": null, "prompt_tokens": 171, "output_tokens": 59, "total_tokens": 230, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1c430358-e19e-45c0-a5e6-6ec8e91cca7e", "event_id": "1c430358-e19e-45c0-a5e6-6ec8e91cca7e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 321666, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_355", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9bde5f95-1976-4d13-a98e-4896fee1b10d", "event_id": "86904b5b-ca07-4647-9f37-9f23fba4600b", "parent_event_id": "9bde5f95-1976-4d13-a98e-4896fee1b10d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 922, "start_time": "2024-06-20T03:58:00.686Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_356", "variant_name": null}, {"function_name": "Fn_simple_356", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_356\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"website\":\"Foodnetwork.com\",\"recipe\":\"Beef Lasagna\",\"meta\":\"Value\",\"optional_meal_time\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_356_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the amount of calories from a specific recipe in a food website.\n  function_name: 'recipe_info.get_calories' or null,\n  // The food website that has the recipe.\n  website: string,\n  // Name of the recipe.\n  recipe: string,\n  // Specific meal time of the day for the recipe (optional, could be 'Breakfast', 'Lunch', 'Dinner'). Default is all if not specified.\n  optional_meal_time: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many calories in the Beef Lasagna Recipe from Foodnetwork.com?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"recipe_info.get_calories\",\n  \"website\": \"Foodnetwork.com\",\n  \"recipe\": \"Beef Lasagna\",\n  \"optional_meal_time\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 158, "output_tokens": 57, "total_tokens": 215, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9bde5f95-1976-4d13-a98e-4896fee1b10d", "event_id": "9bde5f95-1976-4d13-a98e-4896fee1b10d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 322589, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_356", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d19b0230-d819-4560-a40b-71cf34595a19", "event_id": "6a7e3090-ff99-48b5-a49a-f8f031ce098c", "parent_event_id": "d19b0230-d819-4560-a40b-71cf34595a19", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:58:01.609Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_357", "variant_name": null}, {"function_name": "Fn_simple_357", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_357\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"servings\":2,\"diet\":\"vegan\",\"meta\":\"Value\",\"prep_time\":30}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_357_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find a recipe based on dietary preferences, number of servings, and preparation time.\n  function_name: 'recipe_finder.find' or null,\n  // The number of people that the recipe should serve.\n  servings: int,\n  // Any dietary restrictions like 'vegan', 'vegetarian', 'gluten-free' etc.\n  diet: string,\n  // The maximum amount of time (in minutes) the preparation should take. Default is 60 minutes.\n  prep_time: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a recipe that serves 2 people, is vegan, and takes under 30 minutes to prepare."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"recipe_finder.find\",\n  \"servings\": 2,\n  \"diet\": \"vegan\",\n  \"prep_time\": 30\n}", "metadata": {"logprobs": null, "prompt_tokens": 166, "output_tokens": 47, "total_tokens": 213, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d19b0230-d819-4560-a40b-71cf34595a19", "event_id": "d19b0230-d819-4560-a40b-71cf34595a19", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 323307, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_357", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d47c650e-db50-440d-a918-38f098b91fa5", "event_id": "19443cc1-eeac-4d50-9a53-e6a0bf0d9ce9", "parent_event_id": "d47c650e-db50-440d-a918-38f098b91fa5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 509, "start_time": "2024-06-20T03:58:02.326Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_358", "variant_name": null}, {"function_name": "Fn_simple_358", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_358\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dish_name\":\"vegan chocolate cake\",\"meta\":\"Value\",\"diet_preference\":\"vegan\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_358_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Fetch the recipe for a specific dish along with preparation steps.\n  function_name: 'get_recipe' or null,\n  // Name of the dish whose recipe needs to be fetched.\n  dish_name: string,\n  // Preferred dietary consideration like vegan, vegetarian, gluten-free etc. Default is none. (default: none)\n  diet_preference: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the recipe for vegan chocolate cake including the steps for preparation."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_recipe\",\n  \"dish_name\": \"vegan chocolate cake\",\n  \"diet_preference\": \"vegan\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 125, "output_tokens": 42, "total_tokens": 167, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d47c650e-db50-440d-a918-38f098b91fa5", "event_id": "d47c650e-db50-440d-a918-38f098b91fa5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 323817, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_358", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "db5dc0c8-4f8d-4f3a-9d5b-41fe6e2a637e", "event_id": "5f8ee212-d4e9-4dae-8c0c-7bce13b10be8", "parent_event_id": "db5dc0c8-4f8d-4f3a-9d5b-41fe6e2a637e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 640, "start_time": "2024-06-20T03:58:02.836Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_359", "variant_name": null}, {"function_name": "Fn_simple_359", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_359\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": null}, "error": {"code": 2, "message": "Failed to coerce value: Error parsing '<root>': Unparsed field: dish\n  Error parsing 'dish': Expected string, got null", "traceback": null, "override": null}, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for a cooking recipe based on specific dietary needs and time constraint.\n  function_name: 'recipe_search' or null,\n  // Specific dietary need.\n  diet: [\n    'Gluten Free' or 'Dairy Free' or 'Vegan' or 'Vegetarian'\n  ],\n  // The maximum time to prepare the recipe in minutes. Default is 60 minutes.\n  time_limit: int or null,\n  // The name of the dish to search for. Default is not use if not specified.\n  dish: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a gluten-free cookie recipe that takes less than 30 minutes to prepare."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"recipe_search\",\n  \"diet\": [\"Gluten Free\"],\n  \"time_limit\": 30,\n  \"dish\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 55, "total_tokens": 225, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "db5dc0c8-4f8d-4f3a-9d5b-41fe6e2a637e", "event_id": "db5dc0c8-4f8d-4f3a-9d5b-41fe6e2a637e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 324459, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_359", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"<class 'baml_py.BamlError'>: \\u001b[33mClient: ClaudeHaiku (claude-3-haiku-20240307) - 640ms\\u001b[0m\\n\\u001b[34m---PROMPT---\\u001b[0m\\n\\u001b[2m[\\u001b[2mchat\\u001b[0m\\u001b[2m] \\u001b[43msystem: \\u001b[0m\\u001b[2mAnswer in this schema:\\n\\n{\\n  // Search for a cooking recipe based on specific dietary needs and time constraint.\\n  function_name: 'recipe_search' or null,\\n  // Specific dietary need.\\n  diet: [\\n    'Gluten Free' or 'Dairy Free' or 'Vegan' or 'Vegetarian'\\n  ],\\n  // The maximum time to prepare the recipe in minutes. Default is 60 minutes.\\n  time_limit: int or null,\\n  // The name of the dish to search for. Default is not use if not specified.\\n  dish: string,\\n}\\n\\u001b[43muser: \\u001b[0m\\u001b[2mQuestion: Find a gluten-free cookie recipe that takes less than 30 minutes to prepare.\\n\\u001b[0m\\n\\u001b[34m---LLM REPLY---\\u001b[0m\\n\\u001b[2mHere is the response in the specified schema:\\n\\n{\\n  \\\"function_name\\\": \\\"recipe_search\\\",\\n  \\\"diet\\\": [\\\"Gluten Free\\\"],\\n  \\\"time_limit\\\": 30,\\n  \\\"dish\\\": null\\n}\\u001b[0m\\n\\u001b[34m---Parsed Response---\\u001b[0m\\n\\u001b[31mFailed to coerce value: Error parsing '<root>': Unparsed field: dish\\n  Error parsing 'dish': Expected string, got null\\u001b[0m\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "db4d3f27-acca-4090-9d95-7aeff3fde0d8", "event_id": "8e3f1db0-5392-4e5a-bf32-6519f3654585", "parent_event_id": "db4d3f27-acca-4090-9d95-7aeff3fde0d8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 2429, "start_time": "2024-06-20T03:58:03.478Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_360", "variant_name": null}, {"function_name": "Fn_simple_360", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_360\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dietary_restriction\":\"Vegetarian\",\"ingredients\":[\"pasta\",\"cheese\"],\"servings\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_360_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Search for a recipe given dietary restriction, ingredients, and number of servings.\n  function_name: 'recipe_search' or null,\n  // The dietary restriction, e.g., 'Vegetarian'.\n  dietary_restriction: string,\n  // The list of ingredients.\n  ingredients: string[],\n  // The number of servings the recipe should make\n  servings: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me a recipe for a vegetarian pasta with cheese for 2 servings."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"recipe_search\",\n  \"dietary_restriction\": \"Vegetarian\",\n  \"ingredients\": [\"pasta\", \"cheese\"],\n  \"servings\": 2\n}\n\nHere is a recipe for a vegetarian pasta with cheese that serves 2 people:\n\nVegetarian Pasta with Cheese\n\nIngredients:\n- 8 oz (225g) pasta (such as penne, fusilli, or elbow macaroni)\n- 1 tablespoon olive oil\n- 1 clove garlic, minced\n- 1 cup (100g) shredded mozzarella cheese\n- 1/2 cup (50g) grated parmesan cheese\n- 1/4 cup (60ml) milk or unsweetened plant-based milk\n- 1/4 teaspoon dried oregano\n- Salt and black pepper to taste\n- Fresh basil leaves for garnish (optional)\n\nInstructions:\n1. Cook the pasta according to package instructions until al dente. Drain and set aside.\n2. In a large skillet, heat the olive oil over medium heat. Add the minced garlic and cook for 1-2 minutes, until fragrant.\n3. Add the cooked pasta, mozzarella cheese, parmesan cheese, milk, and oregano to the skillet. Stir to combine and heat through until the cheese is melted and the mixture is creamy, about 2-3 minutes.\n4. Season with salt and black pepper to taste.\n5. Serve the vegetarian pasta with cheese immediately, garnished with fresh basil leaves if desired.\n\nEnjoy your 2-serving vegetarian pasta dish!", "metadata": {"logprobs": null, "prompt_tokens": 129, "output_tokens": 388, "total_tokens": 517, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "db4d3f27-acca-4090-9d95-7aeff3fde0d8", "event_id": "db4d3f27-acca-4090-9d95-7aeff3fde0d8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 326889, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_360", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "81b09b37-c2bb-43e0-9c08-1aa50cdada71", "event_id": "930d6bd9-6196-4d0f-a3a9-0c79b1024dce", "parent_event_id": "81b09b37-c2bb-43e0-9c08-1aa50cdada71", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 613, "start_time": "2024-06-20T03:58:05.908Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_361", "variant_name": null}, {"function_name": "Fn_simple_361", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_361\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"recipeName\":\"pasta carbonara\",\"meta\":\"Value\",\"maxCalories\":500}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_361_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate a recipe based on name and its calorie content\n  function_name: 'find_recipe' or null,\n  // The recipe's name.\n  recipeName: string,\n  // The maximum calorie content of the recipe. (default: 1000)\n  maxCalories: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a recipe for pasta carbonara which contains only less than 500 calories."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_recipe\",\n  \"recipeName\": \"pasta carbonara\",\n  \"maxCalories\": 500\n}", "metadata": {"logprobs": null, "prompt_tokens": 109, "output_tokens": 38, "total_tokens": 147, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "81b09b37-c2bb-43e0-9c08-1aa50cdada71", "event_id": "81b09b37-c2bb-43e0-9c08-1aa50cdada71", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 327503, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_361", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0bb9d968-18c2-4c0d-a764-b66b67e5cfd8", "event_id": "a7f259b8-82c5-485c-8cce-dd7f515dedeb", "parent_event_id": "0bb9d968-18c2-4c0d-a764-b66b67e5cfd8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T03:58:06.522Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_362", "variant_name": null}, {"function_name": "Fn_simple_362", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_362\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"New York\",\"cuisine\":\"Italian\",\"meta\":\"Value\",\"diet\":\"Gluten-free\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_362_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate restaurants based on certain criteria such as cuisine, city, and dietary preferences.\n  function_name: 'restaurant_finder' or null,\n  // City where you are looking for the restaurant.\n  city: string,\n  // Type of cuisine you are interested in.\n  cuisine: string,\n  // Dietary preferences. e.g. 'Vegetarian', 'Gluten-free', etc. Default 'Vegetarian'.\n  diet: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find Italian restaurants near New York city that serves gluten-free options."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"restaurant_finder\",\n  \"city\": \"New York\",\n  \"cuisine\": \"Italian\",\n  \"diet\": \"Gluten-free\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 145, "output_tokens": 57, "total_tokens": 202, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0bb9d968-18c2-4c0d-a764-b66b67e5cfd8", "event_id": "0bb9d968-18c2-4c0d-a764-b66b67e5cfd8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 328220, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_362", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "32452ad0-017a-48be-9e6e-80c7b7db4599", "event_id": "71663a1f-2427-4e69-8517-bdbf97f02292", "parent_event_id": "32452ad0-017a-48be-9e6e-80c7b7db4599", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 666, "start_time": "2024-06-20T03:58:07.239Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_363", "variant_name": null}, {"function_name": "Fn_simple_363", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_363\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"Tokyo\",\"top\":5,\"meta\":\"Value\",\"review_rate\":4.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_363_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Returns the best sushi places given the city, review_rate and top number.\n  function_name: 'get_best_sushi_places' or null,\n  // The city in which to look for the sushi places.\n  city: string,\n  // The number of top sushi places to be returned.\n  top: int,\n  // The review rating to filter the sushi places. Places with review ratings above this value will be returned. Default 0.00.\n  review_rate: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the top five sushi restaurants with high reviews i.e. above 4/5 in Tokyo?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_best_sushi_places\",\n  \"city\": \"Tokyo\",\n  \"top\": 5,\n  \"review_rate\": 4.0\n}", "metadata": {"logprobs": null, "prompt_tokens": 163, "output_tokens": 50, "total_tokens": 213, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "32452ad0-017a-48be-9e6e-80c7b7db4599", "event_id": "32452ad0-017a-48be-9e6e-80c7b7db4599", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 328887, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_363", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b16570f7-bc2c-4079-8ce3-1182c67a5dd3", "event_id": "8c722b3e-cb6c-42ab-9c72-6b7f99aeacbd", "parent_event_id": "b16570f7-bc2c-4079-8ce3-1182c67a5dd3", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 654, "start_time": "2024-06-20T03:58:07.907Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_364", "variant_name": null}, {"function_name": "Fn_simple_364", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_364\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Boston, MA\",\"cuisine\":\"Sushi\",\"amenities\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_364_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate the closest sushi restaurant based on certain criteria, such as the presence of a patio.\n  function_name: 'restaurant_search.find_closest' or null,\n  // The city, for instance Boston, MA\n  location: string,\n  // Type of food like Sushi.\n  cuisine: string,\n  // Preferred amenities in the restaurant. Default 'Wi-Fi'.\n  amenities: [\n    'Patio' or 'Wi-Fi' or 'Happy Hour' or 'Wheelchair Accessible'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the closest sushi restaurant with a patio in Boston."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"restaurant_search.find_closest\",\n  \"location\": \"Boston, MA\",\n  \"cuisine\": \"Sushi\",\n  \"amenities\": [\n    \"Patio\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 163, "output_tokens": 69, "total_tokens": 232, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b16570f7-bc2c-4079-8ce3-1182c67a5dd3", "event_id": "b16570f7-bc2c-4079-8ce3-1182c67a5dd3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 329543, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_364", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3f4cf97e-886e-45c0-a201-c6868c46f7fc", "event_id": "cc6e1857-e187-492f-bdd3-d7d2158fe29e", "parent_event_id": "3f4cf97e-886e-45c0-a201-c6868c46f7fc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 828, "start_time": "2024-06-20T03:58:08.562Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_365", "variant_name": null}, {"function_name": "Fn_simple_365", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_365\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Brooklyn\",\"type\":\"Italian\",\"diet_option\":\"Gluten-free\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_365_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby restaurants based on user defined criteria\n  function_name: 'find_restaurant' or null,\n  // The location where user wants to search for a restaurant.\n  location: string,\n  // The type of the cuisine/restaurant.\n  type: string,\n  // Special dietary preferences.\n  diet_option: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can I find an Italian restaurant with Gluten-free options near Brooklyn?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_restaurant\",\n  \"location\": \"Brooklyn\",\n  \"type\": \"Italian\",\n  \"diet_option\": \"Gluten-free\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 113, "output_tokens": 48, "total_tokens": 161, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3f4cf97e-886e-45c0-a201-c6868c46f7fc", "event_id": "3f4cf97e-886e-45c0-a201-c6868c46f7fc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 330372, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_365", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "56aa6f27-1044-4612-84e5-4e85d6cbe13f", "event_id": "81896771-8565-45d4-8b4d-06ca18ab9153", "parent_event_id": "56aa6f27-1044-4612-84e5-4e85d6cbe13f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 572, "start_time": "2024-06-20T03:58:09.391Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_366", "variant_name": null}, {"function_name": "Fn_simple_366", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_366\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"quantity\":2,\"from_unit\":\"pounds\",\"to_unit\":\"ounces\",\"item\":\"butter\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_366_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Convert cooking measurements from one unit to another.\n  function_name: 'cooking_conversion.convert' or null,\n  // The quantity to be converted.\n  quantity: int,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n  // The item to be converted.\n  item: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many ounces in 2 pounds of butter?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"cooking_conversion.convert\",\n  \"quantity\": 2,\n  \"from_unit\": \"pounds\",\n  \"to_unit\": \"ounces\",\n  \"item\": \"butter\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 58, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "56aa6f27-1044-4612-84e5-4e85d6cbe13f", "event_id": "56aa6f27-1044-4612-84e5-4e85d6cbe13f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 330945, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_366", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "93859019-63ca-4d3c-8f84-4bc8cb2b9902", "event_id": "c807dfdb-9c78-4516-8fb8-2ac946353324", "parent_event_id": "93859019-63ca-4d3c-8f84-4bc8cb2b9902", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1160, "start_time": "2024-06-20T03:58:09.965Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_367", "variant_name": null}, {"function_name": "Fn_simple_367", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_367\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"value\":2,\"from_unit\":\"tablespoon\",\"to_unit\":\"teaspoon\",\"meta\":\"Value\",\"precision\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_367_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Convert a value from one kitchen unit to another for cooking purposes.\n  function_name: 'recipe.unit_conversion' or null,\n  // The value to be converted.\n  value: int,\n  // The unit to convert from. Supports 'teaspoon', 'tablespoon', 'cup', etc.\n  from_unit: string,\n  // The unit to convert to. Supports 'teaspoon', 'tablespoon', 'cup', etc.\n  to_unit: string,\n  // The precision to round the output to, in case of a non-integer result. Optional, default is 1.\n  precision: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many teaspoons are in 2 tablespoons for measurement in my recipe?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"recipe.unit_conversion\",\n  \"value\": 2,\n  \"from_unit\": \"tablespoon\",\n  \"to_unit\": \"teaspoon\",\n  \"precision\": 1\n}\n\nThe result is that 2 tablespoons is equivalent to 6.0 teaspoons, rounded to 1 decimal place.", "metadata": {"logprobs": null, "prompt_tokens": 194, "output_tokens": 100, "total_tokens": 294, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "93859019-63ca-4d3c-8f84-4bc8cb2b9902", "event_id": "93859019-63ca-4d3c-8f84-4bc8cb2b9902", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 332106, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_367", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "298b8a7c-e981-422e-9070-b44b1b130bda", "event_id": "32679574-5af8-49e8-9290-e669bd25e722", "parent_event_id": "298b8a7c-e981-422e-9070-b44b1b130bda", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 720, "start_time": "2024-06-20T03:58:11.126Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_368", "variant_name": null}, {"function_name": "Fn_simple_368", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_368\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dietary_restrictions\":\"vegan\",\"recipe_type\":\"dessert\",\"time\":30,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_368_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Find a recipe based on the dietary restrictions, recipe type, and time constraints.\n  function_name: 'find_recipe' or null,\n  // Dietary restrictions e.g. vegan, vegetarian, gluten free, dairy free.\n  dietary_restrictions: string,\n  // Type of the recipe. E.g. dessert, main course, breakfast.\n  recipe_type: string,\n  // Time limit in minutes to prep the meal.\n  time: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a vegan recipe for brownies which prep time is under 30 minutes."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_recipe\",\n  \"dietary_restrictions\": \"vegan\",\n  \"recipe_type\": \"dessert\",\n  \"time\": 30\n}", "metadata": {"logprobs": null, "prompt_tokens": 148, "output_tokens": 47, "total_tokens": 195, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "298b8a7c-e981-422e-9070-b44b1b130bda", "event_id": "298b8a7c-e981-422e-9070-b44b1b130bda", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 332828, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_368", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "078f7620-24cb-4430-848c-6eca004f81df", "event_id": "78f2fe81-3ca2-4d43-ae13-92493dfca4f0", "parent_event_id": "078f7620-24cb-4430-848c-6eca004f81df", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T03:58:11.847Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_369", "variant_name": null}, {"function_name": "Fn_simple_369", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_369\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight_kg\":1.5,\"meta\":\"Value\",\"cooking_method\":\"roast\",\"temp_celsius\":180}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_369_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the cooking time for a roast chicken.\n  function_name: 'calculate_cooking_time' or null,\n  // The weight of the chicken in kilograms.\n  weight_kg: float,\n  // The method of cooking, defaults to 'roast'.\n  cooking_method: string or null,\n  // The cooking temperature in degrees celsius, defaults to 180.\n  temp_celsius: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much time will it take to cook a roast chicken of 1.5 kg?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_cooking_time\",\n  \"weight_kg\": 1.5,\n  \"cooking_method\": \"roast\",\n  \"temp_celsius\": 180\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 62, "total_tokens": 201, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "078f7620-24cb-4430-848c-6eca004f81df", "event_id": "078f7620-24cb-4430-848c-6eca004f81df", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 333546, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_369", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e151093e-70d2-455e-9911-4978c26f4bf1", "event_id": "d8c8268f-173f-40f1-8732-d775a8f57435", "parent_event_id": "e151093e-70d2-455e-9911-4978c26f4bf1", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T03:58:12.566Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_370", "variant_name": null}, {"function_name": "Fn_simple_370", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_370\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Houston, TX\",\"categories\":[\"Value0\",\"Value1\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_370_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby grocery stores based on specific criteria like organic fruits and vegetables.\n  function_name: 'grocery_store.find_nearby' or null,\n  // The city and state, e.g. Houston, TX\n  location: string,\n  // Categories of items to be found in the grocery store. Default is all if not specified.\n  categories: [\n    'Organic' or 'Vegetables' or 'Fruits' or 'Dairy' or 'Seafood' or 'Bakery'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a grocery store near me with organic fruits and vegetables in Houston."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"grocery_store.find_nearby\",\n  \"location\": \"Houston, TX\",\n  \"categories\": [\n    \"Organic\",\n    \"Vegetables\",\n    \"Fruits\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 157, "output_tokens": 69, "total_tokens": 226, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e151093e-70d2-455e-9911-4978c26f4bf1", "event_id": "e151093e-70d2-455e-9911-4978c26f4bf1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 334364, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_370", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3abee009-c077-494b-acfd-c69d113311e8", "event_id": "fbfdc524-a8a1-4fe9-8b1e-77be638e0fdb", "parent_event_id": "3abee009-c077-494b-acfd-c69d113311e8", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:58:13.384Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_371", "variant_name": null}, {"function_name": "Fn_simple_371", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_371\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Palo Alto, CA\",\"items\":[\"olive oil\",\"rice\"],\"quantity\":[3,5],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_371_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Order specified items from a Safeway location.\n  function_name: 'safeway.order' or null,\n  // The location of the Safeway store, e.g. Palo Alto, CA.\n  location: string,\n  // List of items to order.\n  items: string[],\n  // Quantity of each item in the order list.\n  quantity: int[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Order three bottles of olive oil and a five pound bag of rice from Safeway in Palo Alto."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"safeway.order\",\n  \"location\": \"Palo Alto, CA\",\n  \"items\": [\n    \"olive oil\",\n    \"rice\"\n  ],\n  \"quantity\": [\n    3,\n    5\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 135, "output_tokens": 68, "total_tokens": 203, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3abee009-c077-494b-acfd-c69d113311e8", "event_id": "3abee009-c077-494b-acfd-c69d113311e8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 335183, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_371", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ddca0b79-a1c2-4b5c-9c01-658228b075ba", "event_id": "e344b44d-38d6-48df-80c3-715327b789bd", "parent_event_id": "ddca0b79-a1c2-4b5c-9c01-658228b075ba", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 725, "start_time": "2024-06-20T03:58:14.202Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_372", "variant_name": null}, {"function_name": "Fn_simple_372", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_372\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Los Angeles\",\"items\":[\"tomatoes\",\"lettuce\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_372_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Check the price of items at a specific Whole Foods location.\n  function_name: 'whole_foods.check_price' or null,\n  // Location of the Whole Foods store.\n  location: string,\n  // List of items for which the price needs to be checked.\n  items: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Check the price of tomatoes and lettuce at the Whole Foods in Los Angeles."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"whole_foods.check_price\",\n  \"location\": \"Los Angeles\",\n  \"items\": [\"tomatoes\", \"lettuce\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 110, "output_tokens": 54, "total_tokens": 164, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ddca0b79-a1c2-4b5c-9c01-658228b075ba", "event_id": "ddca0b79-a1c2-4b5c-9c01-658228b075ba", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 335909, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_372", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1577b999-ee6e-44ab-b4a2-995c8be007dd", "event_id": "a311f979-0bfe-46a4-b426-37b9815eea75", "parent_event_id": "1577b999-ee6e-44ab-b4a2-995c8be007dd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 709, "start_time": "2024-06-20T03:58:14.928Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_373", "variant_name": null}, {"function_name": "Fn_simple_373", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_373\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"product\":\"bananas\",\"meta\":\"Value\",\"number\":5,\"organic\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_373_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Get top brands based on a specific product from Whole Foods\n  function_name: 'whole_foods.find_top_brands' or null,\n  // The product for which the top brands should be fetched.\n  product: string,\n  // Number of top brands to be fetched. Default is 5\n  number: int or null,\n  // If the product should be organic. Default is false\n  organic: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the top five organic bananas brands on the basis of rating from Whole Foods store."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"whole_foods.find_top_brands\",\n  \"product\": \"bananas\",\n  \"number\": 5,\n  \"organic\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 139, "output_tokens": 47, "total_tokens": 186, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1577b999-ee6e-44ab-b4a2-995c8be007dd", "event_id": "1577b999-ee6e-44ab-b4a2-995c8be007dd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 336619, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_373", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a4aa8dfc-ee33-4f66-8328-ea830f443ce5", "event_id": "3586afee-466b-40e4-8431-d71c42084b47", "parent_event_id": "a4aa8dfc-ee33-4f66-8328-ea830f443ce5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1476, "start_time": "2024-06-20T03:58:15.639Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_374", "variant_name": null}, {"function_name": "Fn_simple_374", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_374\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"loc\":\"San Jose, CA\",\"product_list\":[\"Apples\",\"Rice\",\"Bottled Water (12 pack)\"],\"pack_size\":[12],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_374_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve information of items from Walmart including stock availability.\n  function_name: 'walmart.purchase' or null,\n  // Location of the nearest Walmart.\n  loc: string,\n  // Items to be purchased listed in an array.\n  product_list: string[],\n  // Size of the product pack if applicable. The size of the array should be equal to product_list. Default is not use it if not specified.\n  pack_size: int[],\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to buy apples, rice, and 12 pack of bottled water from a Walmart near San Jose. Show me the product information and stock availability."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"walmart.purchase\",\n  \"loc\": \"San Jose, CA\",\n  \"product_list\": [\"Apples\", \"Rice\", \"Bottled Water (12 pack)\"],\n  \"pack_size\": [null, null, 12]\n}\n\nThis indicates that the requested items (apples, rice, and a 12-pack of bottled water) can be purchased from the nearest Walmart location in San Jose, CA. The \"function_name\" field is set to \"walmart.purchase\" to indicate that this is a request to purchase items from Walmart. The \"pack_size\" field specifies the size of the water pack, which is 12.", "metadata": {"logprobs": null, "prompt_tokens": 162, "output_tokens": 169, "total_tokens": 331, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a4aa8dfc-ee33-4f66-8328-ea830f443ce5", "event_id": "a4aa8dfc-ee33-4f66-8328-ea830f443ce5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 338097, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_374", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3a78caba-9e2a-4dce-928c-4b41892b0921", "event_id": "3648d93b-5806-442b-a2e8-e6abbaf69c7f", "parent_event_id": "3a78caba-9e2a-4dce-928c-4b41892b0921", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 743, "start_time": "2024-06-20T03:58:17.116Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_375", "variant_name": null}, {"function_name": "Fn_simple_375", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_375\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"store\":\"Walmart\",\"food\":\"avocado\",\"information\":[\"Value0\",\"Value1\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_375_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve nutritional information for a given food item from a particular store\n  function_name: 'grocery_info.nutritional_info' or null,\n  // The store where the item is available\n  store: string,\n  // Food item for which information is needed.\n  food: string,\n  // Nutritional details required.\n  information: [\n    'Protein' or 'Calories' or 'Carbohydrates' or 'Fat' or 'Fiber'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Check the amount of protein, calories and carbs in an avocado from Walmart."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"grocery_info.nutritional_info\",\n  \"store\": \"Walmart\",\n  \"food\": \"avocado\",\n  \"information\": [\n    \"Protein\",\n    \"Calories\",\n    \"Carbohydrates\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 156, "output_tokens": 72, "total_tokens": 228, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3a78caba-9e2a-4dce-928c-4b41892b0921", "event_id": "3a78caba-9e2a-4dce-928c-4b41892b0921", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 338841, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_375", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fbb613f2-05ed-4f78-bc9c-2be869718757", "event_id": "9c4af028-1083-4d80-9c28-fcbf875e64f5", "parent_event_id": "fbb613f2-05ed-4f78-bc9c-2be869718757", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 631, "start_time": "2024-06-20T03:58:17.861Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_376", "variant_name": null}, {"function_name": "Fn_simple_376", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_376\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"items\":[\"pumpkin\",\"eggs\"],\"quantities\":[3,24],\"meta\":\"Value\",\"store_location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_376_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate total price for given items and their quantities at Walmart.\n  function_name: 'walmart.check_price' or null,\n  // List of items to be priced.\n  items: string[],\n  // Quantity of each item corresponding to the items list.\n  quantities: int[],\n  // The store location for specific pricing (optional). Default to all if not specified.\n  store_location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Check the total price for three pumpkins and two dozen eggs at Walmart."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"walmart.check_price\",\n  \"items\": [\"pumpkin\", \"eggs\"],\n  \"quantities\": [3, 24],\n  \"store_location\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 136, "output_tokens": 62, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fbb613f2-05ed-4f78-bc9c-2be869718757", "event_id": "fbb613f2-05ed-4f78-bc9c-2be869718757", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 339475, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_376", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "14aaf54e-7316-4d3e-92fc-5e65c2916945", "event_id": "a976544e-9e93-4969-9175-704b6e11540a", "parent_event_id": "14aaf54e-7316-4d3e-92fc-5e65c2916945", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 725, "start_time": "2024-06-20T03:58:18.494Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_377", "variant_name": null}, {"function_name": "Fn_simple_377", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_377\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"London\",\"country\":\"UK\",\"meta\":\"Value\",\"display_format\":\"24h\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_377_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current time of a specific city.\n  function_name: 'time_zone_converter' or null,\n  // The city you want to know the current time for.\n  city: string,\n  // The country where the city is located.\n  country: string,\n  // The time display format: '12h' or '24h'. Default is '24h'.\n  display_format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What time is it currently in London, UK in 24 hour format?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"time_zone_converter\",\n  \"city\": \"London\",\n  \"country\": \"UK\",\n  \"display_format\": \"24h\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 134, "output_tokens": 47, "total_tokens": 181, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "14aaf54e-7316-4d3e-92fc-5e65c2916945", "event_id": "14aaf54e-7316-4d3e-92fc-5e65c2916945", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 340201, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_377", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a48d8378-f3cc-4acc-bb96-1819deff105d", "event_id": "387e828d-f647-4af1-85fd-28354543d897", "parent_event_id": "a48d8378-f3cc-4acc-bb96-1819deff105d", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 641, "start_time": "2024-06-20T03:58:19.221Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_378", "variant_name": null}, {"function_name": "Fn_simple_378", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_378\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"Sydney\",\"country\":\"Australia\",\"meta\":\"Value\",\"format\":\"HH:MM:SS\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_378_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current time for a specified city and country.\n  function_name: 'get_current_time' or null,\n  // The city for which the current time is to be retrieved.\n  city: string,\n  // The country where the city is located.\n  country: string,\n  // The format in which the time is to be displayed, optional (defaults to 'HH:MM:SS').\n  format: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the current time in Sydney, Australia?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_current_time\",\n  \"city\": \"Sydney\",\n  \"country\": \"Australia\",\n  \"format\": \"HH:MM:SS\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 49, "total_tokens": 182, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a48d8378-f3cc-4acc-bb96-1819deff105d", "event_id": "a48d8378-f3cc-4acc-bb96-1819deff105d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 340843, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_378", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cf00991a-cdce-49b9-bf5e-7f49ccc8e7bc", "event_id": "cae05571-a05f-4943-999a-5e42b651718a", "parent_event_id": "cf00991a-cdce-49b9-bf5e-7f49ccc8e7bc", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T03:58:19.863Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_379", "variant_name": null}, {"function_name": "Fn_simple_379", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_379\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"time\":\"3pm\",\"from_timezone\":\"America/New_York\",\"to_timezone\":\"Europe/London\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_379_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Convert time from one time zone to another.\n  function_name: 'timezone.convert' or null,\n  // The local time you want to convert, e.g. 3pm\n  time: string,\n  // The time zone you want to convert from.\n  from_timezone: string,\n  // The time zone you want to convert to.\n  to_timezone: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Convert time 3pm from New York time zone to London time zone."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"timezone.convert\",\n  \"time\": \"3pm\",\n  \"from_timezone\": \"America/New_York\",\n  \"to_timezone\": \"Europe/London\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 124, "output_tokens": 63, "total_tokens": 187, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cf00991a-cdce-49b9-bf5e-7f49ccc8e7bc", "event_id": "cf00991a-cdce-49b9-bf5e-7f49ccc8e7bc", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 341663, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_379", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5379d9d9-6f74-42af-b006-1a538fc40589", "event_id": "852670db-56f1-403e-a941-e4a143bd37e0", "parent_event_id": "5379d9d9-6f74-42af-b006-1a538fc40589", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 733, "start_time": "2024-06-20T03:58:20.682Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_380", "variant_name": null}, {"function_name": "Fn_simple_380", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_380\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Sydney\",\"country\":\"Australia\",\"meta\":\"Value\",\"timezone\":\"Australia/Sydney\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_380_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the current time in a specific time zone.\n  function_name: 'get_current_time' or null,\n  // The name of the city.\n  location: string,\n  // The name of the country.\n  country: string,\n  // The optional timezone to get current time. Default \n  timezone: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the current time in Sydney, Australia?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_current_time\",\n  \"location\": \"Sydney\",\n  \"country\": \"Australia\",\n  \"timezone\": \"Australia/Sydney\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 110, "output_tokens": 56, "total_tokens": 166, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5379d9d9-6f74-42af-b006-1a538fc40589", "event_id": "5379d9d9-6f74-42af-b006-1a538fc40589", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 342396, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_380", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "68fa3778-c4c7-4225-ba4d-fe91d43dd982", "event_id": "2624219a-ac0a-45aa-bee9-46f18d38a8f7", "parent_event_id": "68fa3778-c4c7-4225-ba4d-fe91d43dd982", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 679, "start_time": "2024-06-20T03:58:21.416Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_381", "variant_name": null}, {"function_name": "Fn_simple_381", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_381\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Manhattan, New York\",\"room_type\":\"single\",\"duration\":3,\"start_date\":\"2023-03-10\",\"preferences\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_381_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Books a hotel room given the location, room type, stay duration and any additional preferences.\n  function_name: 'hotel_booking' or null,\n  // The city where you want to book the hotel.\n  location: string,\n  // Type of the room required. Options: 'single', 'double', 'deluxe', etc.\n  room_type: string,\n  // The number of nights you want to book the hotel for.\n  duration: int,\n  // The date when your stay begins.\n  start_date: string,\n  // Optional preferences of stay at the hotel. Default to use all if not specified.\n  preferences: [\n    'pet_friendly' or 'gym' or 'swimming_pool' or 'free_breakfast' or 'parking'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a single room at a pet friendly hotel near Manhattan, New York for 3 nights starting from March 10th, 2023."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hotel_booking\",\n  \"location\": \"Manhattan, New York\",\n  \"room_type\": \"single\",\n  \"duration\": 3,\n  \"start_date\": \"2023-03-10\",\n  \"preferences\": [\n    \"pet_friendly\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 235, "output_tokens": 78, "total_tokens": 313, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "68fa3778-c4c7-4225-ba4d-fe91d43dd982", "event_id": "68fa3778-c4c7-4225-ba4d-fe91d43dd982", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 343079, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_381", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "19ef40f4-0372-4d86-b3f2-5ed3fd843fb4", "event_id": "da8e7d24-4ed6-4bbf-9ddc-3eb74474cdac", "parent_event_id": "19ef40f4-0372-4d86-b3f2-5ed3fd843fb4", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 812, "start_time": "2024-06-20T03:58:22.100Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_382", "variant_name": null}, {"function_name": "Fn_simple_382", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_382\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Paris\",\"check_in_date\":\"2023-04-04\",\"check_out_date\":\"2023-04-08\",\"no_of_adults\":2,\"meta\":\"Value\",\"hotel_chain\":\"Hilton\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_382_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Check hotel availability for a specific location and time frame.\n  function_name: 'hilton_hotel.check_availability' or null,\n  // The city where you want to check hotel availability.\n  location: string,\n  // The check-in date in the format YYYY-MM-DD.\n  check_in_date: string,\n  // The check-out date in the format YYYY-MM-DD.\n  check_out_date: string,\n  // The number of adults for the hotel booking.\n  no_of_adults: int,\n  // The hotel chain where you want to book the hotel. (default: Hilton)\n  hotel_chain: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Check if any Hilton Hotel is available for two adults in Paris from 2023 April 4th to April 8th?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hilton_hotel.check_availability\",\n  \"location\": \"Paris\",\n  \"check_in_date\": \"2023-04-04\",\n  \"check_out_date\": \"2023-04-08\",\n  \"no_of_adults\": 2,\n  \"hotel_chain\": \"Hilton\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 209, "output_tokens": 89, "total_tokens": 298, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "19ef40f4-0372-4d86-b3f2-5ed3fd843fb4", "event_id": "19ef40f4-0372-4d86-b3f2-5ed3fd843fb4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 343894, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_382", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "27f2a8d2-93a7-41f9-96f3-d08ae1765abd", "event_id": "a1e9e3a4-75ab-4a95-be63-3ffab625c1d5", "parent_event_id": "27f2a8d2-93a7-41f9-96f3-d08ae1765abd", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 741, "start_time": "2024-06-20T03:58:22.913Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_383", "variant_name": null}, {"function_name": "Fn_simple_383", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_383\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"Hilton Hotel\",\"location\":\"Chicago\",\"room_type\":\"single\",\"start_date\":\"2022-12-10\",\"nights\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_383_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a room of specified type for a particular number of nights at a specific hotel, starting from a specified date.\n  function_name: 'book_hotel' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The city in which the hotel is located.\n  location: string,\n  // The type of room to be booked.\n  room_type: string,\n  // The start date for the booking.\n  start_date: string,\n  // The number of nights for which the booking is to be made.\n  nights: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a single room for two nights at the Hilton Hotel in Chicago, starting from 10th December 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"book_hotel\",\n  \"hotel_name\": \"Hilton Hotel\",\n  \"location\": \"Chicago\",\n  \"room_type\": \"single\",\n  \"start_date\": \"2022-12-10\",\n  \"nights\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 180, "output_tokens": 71, "total_tokens": 251, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "27f2a8d2-93a7-41f9-96f3-d08ae1765abd", "event_id": "27f2a8d2-93a7-41f9-96f3-d08ae1765abd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 344636, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_383", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "376fe731-3013-4d03-9ad7-353b726da248", "event_id": "79fb01b2-581d-4852-a8ec-482c7f7b0bee", "parent_event_id": "376fe731-3013-4d03-9ad7-353b726da248", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1079, "start_time": "2024-06-20T03:58:23.655Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_384", "variant_name": null}, {"function_name": "Fn_simple_384", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_384\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"The Plaza\",\"room_type\":\"single\",\"num_nights\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_384_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a room in a specified hotel.\n  function_name: 'book_room' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The type of room to be booked.\n  room_type: string,\n  // The number of nights to book the room for.\n  num_nights: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: I would like to book a single room for two nights at The Plaza hotel."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"book_room\",\n  \"hotel_name\": \"The Plaza\",\n  \"room_type\": \"single\",\n  \"num_nights\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 118, "output_tokens": 58, "total_tokens": 176, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "376fe731-3013-4d03-9ad7-353b726da248", "event_id": "376fe731-3013-4d03-9ad7-353b726da248", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 345716, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_384", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f156d2ac-94df-4c4c-91e2-e768fdd5a248", "event_id": "9ae2e38c-365e-48a2-b26c-78b667aef00f", "parent_event_id": "f156d2ac-94df-4c4c-91e2-e768fdd5a248", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 827, "start_time": "2024-06-20T03:58:24.736Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_385", "variant_name": null}, {"function_name": "Fn_simple_385", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_385\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"city\":\"Paris\",\"from_date\":\"07-10-2022\",\"to_date\":\"07-20-2022\",\"adults\":2,\"children\":1,\"meta\":\"Value\",\"room_type\":\"Standard\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_385_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a hotel room given the city, date, and the number of adults and children.\n  function_name: 'hotel_booking.book' or null,\n  // The city where the hotel is located.\n  city: string,\n  // The start date of the booking. The format is MM-DD-YYYY.\n  from_date: string,\n  // The end date of the booking. The format is MM-DD-YYYY.\n  to_date: string,\n  // The number of adults for the booking.\n  adults: int,\n  // The number of children for the booking.\n  children: int,\n  // The type of the room, default is 'Standard'. Options are 'Standard', 'Deluxe', 'Suite'. (default: Standard)\n  room_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a hotel room for two adults and one child in Paris, France from July 10, 2022 to July 20, 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"hotel_booking.book\",\n  \"city\": \"Paris\",\n  \"from_date\": \"07-10-2022\",\n  \"to_date\": \"07-20-2022\",\n  \"adults\": 2,\n  \"children\": 1,\n  \"room_type\": \"Standard\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 242, "output_tokens": 94, "total_tokens": 336, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f156d2ac-94df-4c4c-91e2-e768fdd5a248", "event_id": "f156d2ac-94df-4c4c-91e2-e768fdd5a248", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 346545, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_385", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7e846d95-ec52-4988-a35c-13858c71dd83", "event_id": "7ecb9c85-273b-47c2-b863-7af211d5a36d", "parent_event_id": "7e846d95-ec52-4988-a35c-13858c71dd83", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 793, "start_time": "2024-06-20T03:58:25.564Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_386", "variant_name": null}, {"function_name": "Fn_simple_386", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_386\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Los Angeles, CA\",\"room_type\":\"king size\",\"check_in_date\":\"15-10-2023\",\"no_of_nights\":2,\"meta\":\"Value\",\"no_of_rooms\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_386_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a hotel room based on specific criteria like location, room type, and check-in and check-out dates.\n  function_name: 'hotel_bookings.book_room' or null,\n  // The city and state where you want to book the hotel, e.g. Los Angeles, CA\n  location: string,\n  // Preferred type of room in the hotel, e.g. king size, queen size, deluxe, suite etc.\n  room_type: string,\n  // Check-in date for the hotel. Format - DD-MM-YYYY.\n  check_in_date: string,\n  // Number of nights for the stay.\n  no_of_nights: int,\n  // Number of rooms to book. Default is 1. (default: 1)\n  no_of_rooms: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a hotel room with king size bed in Los Angeles for 2 nights starting from 15th October,2023."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the request in the specified schema:\n\n{\n  \"function_name\": \"hotel_bookings.book_room\",\n  \"location\": \"Los Angeles, CA\",\n  \"room_type\": \"king size\",\n  \"check_in_date\": \"15-10-2023\",\n  \"no_of_nights\": 2,\n  \"no_of_rooms\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 239, "output_tokens": 95, "total_tokens": 334, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7e846d95-ec52-4988-a35c-13858c71dd83", "event_id": "7e846d95-ec52-4988-a35c-13858c71dd83", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 347338, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_386", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b0eca533-6d3e-4c13-b660-f943ca2eaa0f", "event_id": "e91313f3-c30d-437b-9de2-f0708258cfd8", "parent_event_id": "b0eca533-6d3e-4c13-b660-f943ca2eaa0f", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 738, "start_time": "2024-06-20T03:58:26.358Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_387", "variant_name": null}, {"function_name": "Fn_simple_387", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_387\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"Hotel Paradise\",\"location\":\"Las Vegas\",\"room_type\":\"luxury\",\"start_date\":\"05-12-2022\",\"stay_duration\":3,\"meta\":\"Value\",\"view\":\"city\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_387_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Book a room in a specific hotel with particular preferences\n  function_name: 'book_hotel' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The location of the hotel.\n  location: string,\n  // The type of room preferred.\n  room_type: string,\n  // The starting date of the stay in format MM-DD-YYYY.\n  start_date: string,\n  // The duration of the stay in days.\n  stay_duration: int,\n  // The preferred view from the room, can be ignored if no preference. If none provided, assumes no preference. (default: No preference)\n  view: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a luxury room in Hotel Paradise, Las Vegas, with a city view for 3 days starting from May 12, 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"book_hotel\",\n  \"hotel_name\": \"Hotel Paradise\",\n  \"location\": \"Las Vegas\",\n  \"room_type\": \"luxury\",\n  \"start_date\": \"05-12-2022\",\n  \"stay_duration\": 3,\n  \"view\": \"city\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 209, "output_tokens": 81, "total_tokens": 290, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b0eca533-6d3e-4c13-b660-f943ca2eaa0f", "event_id": "b0eca533-6d3e-4c13-b660-f943ca2eaa0f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 348079, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_387", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ef289db5-9a9c-4190-a1b6-e68057179c1b", "event_id": "f5ab1b83-4e64-458c-b0c4-c6036a12e84e", "parent_event_id": "ef289db5-9a9c-4190-a1b6-e68057179c1b", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 762, "start_time": "2024-06-20T03:58:27.099Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_388", "variant_name": null}, {"function_name": "Fn_simple_388", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_388\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"Plaza Hotel\",\"location\":\"New York, NY\",\"start_date\":\"2022-06-01\",\"end_date\":\"2022-06-04\",\"meta\":\"Value\",\"rooms\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_388_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Books a hotel room for a specific date range.\n  function_name: 'hotel_booking' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The city and state, e.g. New York, NY.\n  location: string,\n  // The start date of the reservation. Use format 'YYYY-MM-DD'.\n  start_date: string,\n  // The end date of the reservation. Use format 'YYYY-MM-DD'.\n  end_date: string,\n  // The number of rooms to reserve. (default: 1)\n  rooms: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a hotel room at the Plaza Hotel in New York for 3 nights starting from 1st June 2022"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hotel_booking\",\n  \"hotel_name\": \"Plaza Hotel\",\n  \"location\": \"New York, NY\",\n  \"start_date\": \"2022-06-01\",\n  \"end_date\": \"2022-06-04\",\n  \"rooms\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 193, "output_tokens": 77, "total_tokens": 270, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ef289db5-9a9c-4190-a1b6-e68057179c1b", "event_id": "ef289db5-9a9c-4190-a1b6-e68057179c1b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 348842, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_388", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cfd00f6f-1894-4279-bce3-7a07b0fa83d2", "event_id": "7b493699-b260-43a5-bda2-f81636369f6b", "parent_event_id": "cfd00f6f-1894-4279-bce3-7a07b0fa83d2", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 769, "start_time": "2024-06-20T03:58:27.862Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_389", "variant_name": null}, {"function_name": "Fn_simple_389", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_389\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base_currency\":\"USD\",\"target_currency\":\"CAD\",\"amount\":500,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_389_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Convert an amount from a base currency to a target currency based on the current exchange rate.\n  function_name: 'currency_exchange.convert' or null,\n  // The currency to convert from.\n  base_currency: string,\n  // The currency to convert to.\n  target_currency: string,\n  // The amount in base currency to convert\n  amount: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many Canadian dollars can I get for 500 US dollars?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"currency_exchange.convert\",\n  \"base_currency\": \"USD\",\n  \"target_currency\": \"CAD\",\n  \"amount\": 500\n}", "metadata": {"logprobs": null, "prompt_tokens": 120, "output_tokens": 58, "total_tokens": 178, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cfd00f6f-1894-4279-bce3-7a07b0fa83d2", "event_id": "cfd00f6f-1894-4279-bce3-7a07b0fa83d2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 349612, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_389", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "25b5f7b0-c2e9-4646-86de-613063beacdf", "event_id": "73c6d23d-d4b7-4790-95d4-32f37516b14d", "parent_event_id": "25b5f7b0-c2e9-4646-86de-613063beacdf", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 611, "start_time": "2024-06-20T03:58:28.632Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_390", "variant_name": null}, {"function_name": "Fn_simple_390", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_390\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base_currency\":\"USD\",\"target_currency\":\"GBP\",\"amount\":200.0,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_390_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculates the cost in target currency given the amount in base currency and exchange rate\n  function_name: 'currency_converter' or null,\n  // The currency to convert from.\n  base_currency: string,\n  // The currency to convert to.\n  target_currency: string,\n  // The amount in base currency\n  amount: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the current cost in British Pounds if I need to convert 200 US dollars."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"currency_converter\",\n  \"base_currency\": \"USD\",\n  \"target_currency\": \"GBP\",\n  \"amount\": 200.0\n}", "metadata": {"logprobs": null, "prompt_tokens": 120, "output_tokens": 59, "total_tokens": 179, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "25b5f7b0-c2e9-4646-86de-613063beacdf", "event_id": "25b5f7b0-c2e9-4646-86de-613063beacdf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 350224, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_390", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4354a7c5-4762-4043-af4e-c5dfdad4d888", "event_id": "0f13cc85-9b40-4e15-b0bd-f08894d5f16f", "parent_event_id": "4354a7c5-4762-4043-af4e-c5dfdad4d888", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 702, "start_time": "2024-06-20T03:58:29.244Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_391", "variant_name": null}, {"function_name": "Fn_simple_391", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_391\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"amount\":150,\"from_currency\":\"EUR\",\"to_currency\":\"CAD\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_391_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Convert a value from one currency to another.\n  function_name: 'currency_conversion.convert' or null,\n  // The amount to be converted.\n  amount: int,\n  // The currency to convert from.\n  from_currency: string,\n  // The currency to convert to.\n  to_currency: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Convert 150 Euros to Canadian dollars."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"currency_conversion.convert\",\n  \"amount\": 150,\n  \"from_currency\": \"EUR\",\n  \"to_currency\": \"CAD\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 106, "output_tokens": 59, "total_tokens": 165, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4354a7c5-4762-4043-af4e-c5dfdad4d888", "event_id": "4354a7c5-4762-4043-af4e-c5dfdad4d888", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 350928, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_391", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b22f29f1-b6f2-4cf5-b37f-fcb8eca2d22a", "event_id": "12173e23-e06e-49b2-9f7b-68b4b2f79aaa", "parent_event_id": "b22f29f1-b6f2-4cf5-b37f-fcb8eca2d22a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 1181, "start_time": "2024-06-20T03:58:29.947Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_392", "variant_name": null}, {"function_name": "Fn_simple_392", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_392\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base_currency\":\"GBP\",\"target_currency\":\"JPY\",\"fee\":0.02,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_392_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the exchange rate between two currencies including transaction fee.\n  function_name: 'get_exchange_rate_with_fee' or null,\n  // The base currency.\n  base_currency: string,\n  // The target currency.\n  target_currency: string,\n  // The transaction fee in percentage. Default is 0%.\n  fee: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the exchange rate from British pounds to Japanese yen with the fee 0.02 included."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"get_exchange_rate_with_fee\",\n  \"base_currency\": \"GBP\",\n  \"target_currency\": \"JPY\",\n  \"fee\": 0.02\n}", "metadata": {"logprobs": null, "prompt_tokens": 125, "output_tokens": 66, "total_tokens": 191, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b22f29f1-b6f2-4cf5-b37f-fcb8eca2d22a", "event_id": "b22f29f1-b6f2-4cf5-b37f-fcb8eca2d22a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 352110, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_392", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dfb013b7-a5ac-4dfb-9adf-ab81116c49e0", "event_id": "9d03cf6f-2cc5-41c9-ba4c-fc5ff8e537ef", "parent_event_id": "dfb013b7-a5ac-4dfb-9adf-ab81116c49e0", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 659, "start_time": "2024-06-20T03:58:31.130Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_393", "variant_name": null}, {"function_name": "Fn_simple_393", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_393\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"source_currency\":\"GBP\",\"target_currency\":\"JPY\",\"meta\":\"Value\",\"amount\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_393_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the latest exchange rate between two specified currencies.\n  function_name: 'latest_exchange_rate' or null,\n  // The currency you are converting from.\n  source_currency: string,\n  // The currency you are converting to.\n  target_currency: string,\n  // The amount to be converted. If omitted, default to exchange rate of 1 unit source currency\n  amount: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the latest exchange rate from British Pounds to Japanese Yen."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"latest_exchange_rate\",\n  \"source_currency\": \"GBP\",\n  \"target_currency\": \"JPY\",\n  \"amount\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 133, "output_tokens": 59, "total_tokens": 192, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dfb013b7-a5ac-4dfb-9adf-ab81116c49e0", "event_id": "dfb013b7-a5ac-4dfb-9adf-ab81116c49e0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 352771, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_393", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "66527265-c4fe-4b87-ba7b-ab89aafba054", "event_id": "778a1f90-deac-43fc-95c4-366c3f0fcb17", "parent_event_id": "66527265-c4fe-4b87-ba7b-ab89aafba054", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 769, "start_time": "2024-06-20T03:58:31.790Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_394", "variant_name": null}, {"function_name": "Fn_simple_394", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_394\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base_currency\":\"JPY\",\"target_currency\":\"USD\",\"amount\":20000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_394_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Converts an amount from a particular currency to another currency.\n  function_name: 'convert_currency' or null,\n  // The base currency in which the original amount is present.\n  base_currency: string,\n  // The currency to which you want to convert.\n  target_currency: string,\n  // The amount you want to convert.\n  amount: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much will 20000 Japanese Yen be in United States Dollar?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"convert_currency\",\n  \"base_currency\": \"JPY\",\n  \"target_currency\": \"USD\",\n  \"amount\": 20000\n}", "metadata": {"logprobs": null, "prompt_tokens": 123, "output_tokens": 57, "total_tokens": 180, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "66527265-c4fe-4b87-ba7b-ab89aafba054", "event_id": "66527265-c4fe-4b87-ba7b-ab89aafba054", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 353541, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_394", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7dae7014-fff9-4039-8907-fd78429b8953", "event_id": "f0b39253-68a5-4eb5-a4b1-eb0c7c052560", "parent_event_id": "7dae7014-fff9-4039-8907-fd78429b8953", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 625, "start_time": "2024-06-20T03:58:32.561Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_395", "variant_name": null}, {"function_name": "Fn_simple_395", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_395\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Eiffel Tower\",\"end_location\":\"Louvre Museum\",\"meta\":\"Value\",\"traffic\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_395_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve the travel distance and estimated travel time from one location to another via car\n  function_name: 'maps.get_distance_duration' or null,\n  // Starting point of the journey\n  start_location: string,\n  // Ending point of the journey\n  end_location: string,\n  // If true, considers current traffic. Default is false.\n  traffic: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the travel distance and duration from the Eiffel Tower to the Louvre Museum"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"maps.get_distance_duration\",\n  \"start_location\": \"Eiffel Tower\",\n  \"end_location\": \"Louvre Museum\",\n  \"traffic\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 131, "output_tokens": 65, "total_tokens": 196, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7dae7014-fff9-4039-8907-fd78429b8953", "event_id": "7dae7014-fff9-4039-8907-fd78429b8953", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 354167, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_395", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3afb042d-f539-4ddb-aa08-6a5559bd45c5", "event_id": "47b66af1-44af-4ef6-b4a3-b842cae7d9a7", "parent_event_id": "3afb042d-f539-4ddb-aa08-6a5559bd45c5", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 688, "start_time": "2024-06-20T03:58:33.187Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_396", "variant_name": null}, {"function_name": "Fn_simple_396", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_396\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Central Park, New York\",\"radius\":2,\"meta\":\"Value\",\"type\":\"public\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_396_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate the nearest parking lot based on a specific location and radius.\n  function_name: 'parking_lot.find_nearest' or null,\n  // The reference location e.g. Central Park, NY\n  location: string,\n  // The maximum distance from the location in miles. Default is 5 miles\n  radius: int,\n  // The type of parking lot. Default is 'public'.\n  type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the nearest parking lot within 2 miles of Central Park in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here's the answer in the requested schema:\n\n{\n  \"function_name\": \"parking_lot.find_nearest\",\n  \"location\": \"Central Park, New York\",\n  \"radius\": 2,\n  \"type\": \"public\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 138, "output_tokens": 60, "total_tokens": 198, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3afb042d-f539-4ddb-aa08-6a5559bd45c5", "event_id": "3afb042d-f539-4ddb-aa08-6a5559bd45c5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 354856, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_396", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c87e96c0-ca09-42e6-bec1-fc8e9e76c9ca", "event_id": "f0f8ce97-fd1b-4d9b-98a1-a364632920f8", "parent_event_id": "c87e96c0-ca09-42e6-bec1-fc8e9e76c9ca", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 722, "start_time": "2024-06-20T03:58:33.876Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_397", "variant_name": null}, {"function_name": "Fn_simple_397", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_397\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Denver, CO\",\"radius\":5,\"meta\":\"Value\",\"department\":\"Value2\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_397_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locate nearby hospitals based on location and radius. Options to include specific departments are available.\n  function_name: 'hospital.locate' or null,\n  // The city and state, e.g. Denver, CO\n  location: string,\n  // The radius within which you want to find the hospital in kms.\n  radius: int,\n  // Specific department within the hospital. Default is 'General Medicine'.\n  department: 'General Medicine' or 'Emergency' or 'Pediatrics' or 'Cardiology' or 'Orthopedics' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a hospital within 5 km radius around Denver, Colorado with pediatrics department."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hospital.locate\",\n  \"location\": \"Denver, CO\",\n  \"radius\": 5,\n  \"department\": \"Pediatrics\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 173, "output_tokens": 46, "total_tokens": 219, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c87e96c0-ca09-42e6-bec1-fc8e9e76c9ca", "event_id": "c87e96c0-ca09-42e6-bec1-fc8e9e76c9ca", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 355580, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_397", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5bfd2aa1-bb3a-48b6-b789-0849dcb3f80a", "event_id": "d7e4062d-1bef-4e5c-81be-770f799c128c", "parent_event_id": "5bfd2aa1-bb3a-48b6-b789-0849dcb3f80a", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 584, "start_time": "2024-06-20T03:58:34.600Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_398", "variant_name": null}, {"function_name": "Fn_simple_398", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_398\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"origin\":\"New York\",\"destination\":\"Boston\",\"meta\":\"Value\",\"consider_terrain\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_398_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Calculate the distance between two locations, considering terrain.\n  function_name: 'distance_calculator.calculate' or null,\n  // Starting location of the distance measurement.\n  origin: string,\n  // Destination location of the distance measurement.\n  destination: string,\n  // Whether to account for terrain in distance calculation, defaults to false.\n  consider_terrain: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the distance between New York and Boston, accounting for terrain."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"distance_calculator.calculate\",\n  \"origin\": \"New York\",\n  \"destination\": \"Boston\",\n  \"consider_terrain\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 120, "output_tokens": 55, "total_tokens": 175, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5bfd2aa1-bb3a-48b6-b789-0849dcb3f80a", "event_id": "5bfd2aa1-bb3a-48b6-b789-0849dcb3f80a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 356165, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.language": "python", "test_category": "simple", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_398", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b5c6ae28-9db3-4e56-b783-644bcb89709e", "event_id": "683a2808-2763-427a-991c-93b36c09492f", "parent_event_id": "b5c6ae28-9db3-4e56-b783-644bcb89709e", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 505, "start_time": "2024-06-20T03:58:35.185Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_399", "variant_name": null}, {"function_name": "Fn_simple_399", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_399\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum_name\":\"Metropolitan Museum of Art\",\"day\":\"Saturday\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_399_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Retrieve opening hours of a specified museum for the specified day.\n  function_name: 'get_museum_hours' or null,\n  // The name of the museum.\n  museum_name: string,\n  // Day of the week. If not specified, returns the current day's hours.\n  day: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the opening hours of the Metropolitan Museum of Art on Saturday?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_museum_hours\",\n  \"museum_name\": \"Metropolitan Museum of Art\",\n  \"day\": \"Saturday\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 107, "output_tokens": 41, "total_tokens": 148, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b5c6ae28-9db3-4e56-b783-644bcb89709e", "event_id": "b5c6ae28-9db3-4e56-b783-644bcb89709e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 356672, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "simple"}, "event_chain": [{"function_name": "baml_Fn_simple_399", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "031c4baf-e763-4a7e-a226-8b197738b857", "event_id": "2d2015cd-6d7b-40e6-8b46-428b0bd38520", "parent_event_id": "031c4baf-e763-4a7e-a226-8b197738b857", "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 653, "start_time": "2024-06-20T03:58:35.692Z", "tags": {"baml.runtime": "0.40.0", "test_category": "simple", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_simple_400", "variant_name": null}, {"function_name": "Fn_simple_400", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_simple_400\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York City, NY\",\"cuisine\":\"Italian\",\"rating\":4,\"accepts_credit_cards\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_simple_400_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema:\n\n{\n  // Locates top rated restaurants based on specific criteria such as type of cuisine, ratings, and facilities.\n  function_name: 'restaurant_search' or null,\n  // The city and state, e.g. New York City, NY\n  location: string,\n  // Preferred type of cuisine e.g., Italian, Indian, American, etc.\n  cuisine: string,\n  // Minimum average customer rating out of 5\n  rating: int,\n  // If the restaurant should accept credit cards.\n  accepts_credit_cards: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the best Italian restaurants in New York City with average customer ratings of more than 4 and accepts credit cards."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"restaurant_search\",\n  \"location\": \"New York City, NY\",\n  \"cuisine\": \"Italian\",\n  \"rating\": 4,\n  \"accepts_credit_cards\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 170, "output_tokens": 56, "total_tokens": 226, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "031c4baf-e763-4a7e-a226-8b197738b857", "event_id": "031c4baf-e763-4a7e-a226-8b197738b857", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "781f59c4-a4ab-4e2c-aa3c-84b2f8d71e3a", "stage": "development", "latency_ms": 357327, "start_time": "2024-06-20T03:52:39.019Z", "tags": {"test_category": "simple", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_simple_400", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
