{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4cca9255-0398-4170-9e35-a5340deb9189", "event_id": "10129fc0-c607-49f3-a471-408db95a6f80", "parent_event_id": "4cca9255-0398-4170-9e35-a5340deb9189", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1557, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_1", "variant_name": null}, {"function_name": "Fn_multiple_function_1", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_1\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"side1\":5,\"side2\":4,\"side3\":3,\"meta\":\"Value\",\"get_area\":true,\"get_perimeter\":true,\"get_angles\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_1_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the dimensions, such as area and perimeter, of a triangle if lengths of three sides are given.\n  function_name: 'triangle_properties.get' or null,\n  // The length of first side of the triangle.\n  side1: int,\n  // The length of second side of the triangle.\n  side2: int,\n  // The length of third side of the triangle.\n  side3: int,\n  // A flag to determine whether to calculate the area of triangle. Default is true. (default: True)\n  get_area: bool or null,\n  // A flag to determine whether to calculate the perimeter of triangle. Default is true. (default: True)\n  get_perimeter: bool or null,\n  // A flag to determine whether to calculate the internal angles of triangle. Default is true. (default: True)\n  get_angles: bool or null,\n} or {\n  // Retrieve the dimensions, such as area and circumference, of a circle if radius is given.\n  function_name: 'circle_properties.get' or null,\n  // The length of radius of the circle.\n  radius: float,\n  // A flag to determine whether to calculate the area of circle. Default is true. (default: True)\n  get_area: bool or null,\n  // A flag to determine whether to calculate the circumference of circle. Default is true. (default: True)\n  get_circumference: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can I find the dimensions and properties of a triangle, if I know its three sides are 5 units, 4 units and 3 units long?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the dimensions and properties of a triangle with sides of length 5 units, 4 units, and 3 units, you can use the following schema:\n\n{\n  \"function_name\": \"triangle_properties.get\",\n  \"side1\": 5,\n  \"side2\": 4,\n  \"side3\": 3,\n  \"get_area\": true,\n  \"get_perimeter\": true,\n  \"get_angles\": true\n}\n\nThis schema will retrieve the following properties of the triangle:\n\n- Area\n- Perimeter\n- Internal angles\n\nThe response will include the calculated values for these properties based on the provided side lengths.", "metadata": {"logprobs": null, "prompt_tokens": 387, "output_tokens": 153, "total_tokens": 540, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4cca9255-0398-4170-9e35-a5340deb9189", "event_id": "4cca9255-0398-4170-9e35-a5340deb9189", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1558, "start_time": "2024-06-20T16:20:03.757Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_1", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fabbe185-8edc-4866-8a8b-7b2afc114b98", "event_id": "aa5123f4-a378-4298-8fd6-fd7092767ee8", "parent_event_id": "fabbe185-8edc-4866-8a8b-7b2afc114b98", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 681, "start_time": "2024-06-20T16:20:05.316Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_2", "variant_name": null}, {"function_name": "Fn_multiple_function_2", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_2\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"side1\":3,\"side2\":4,\"side3\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_2_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates the area of a triangle using Heron's formula, given the lengths of its three sides.\n  function_name: 'math.triangle_area_heron' or null,\n  // Length of the first side of the triangle.\n  side1: int,\n  // Length of the second side of the triangle.\n  side2: int,\n  // Length of the third side of the triangle.\n  side3: int,\n} or {\n  // Calculates the area of a circle given its radius.\n  function_name: 'math.circle_area' or null,\n  // The radius of the circle.\n  radius: float,\n} or {\n  // Calculates the area of a triangle using the formula (1/2)base*height.\n  function_name: 'math.triangle_area_base_height' or null,\n  // The base length of the triangle.\n  base: float,\n  // The height of the triangle.\n  height: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a triangle, given the lengths of its three sides: 3, 4, and 5."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"math.triangle_area_heron\",\n  \"side1\": 3,\n  \"side2\": 4,\n  \"side3\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 275, "output_tokens": 49, "total_tokens": 324, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fabbe185-8edc-4866-8a8b-7b2afc114b98", "event_id": "fabbe185-8edc-4866-8a8b-7b2afc114b98", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2240, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_2", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b0d86dab-a4d6-4f1e-90fc-0ec8948df322", "event_id": "0d149e1a-ebd4-46dd-ba82-60dff64030d2", "parent_event_id": "b0d86dab-a4d6-4f1e-90fc-0ec8948df322", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 639, "start_time": "2024-06-20T16:20:05.998Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_3", "variant_name": null}, {"function_name": "Fn_multiple_function_3", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_3\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"Brazil\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_3_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the largest city of a specified country.\n  function_name: 'country_info.largest_city' or null,\n  // Name of the country.\n  country: string,\n} or {\n  // Fetch the capital city of a specified country.\n  function_name: 'country_info.capital' or null,\n  // Name of the country.\n  country: string,\n} or {\n  // Fetch the current population of a specified country.\n  function_name: 'country_info.population' or null,\n  // Name of the country.\n  country: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the capital of Brazil?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"country_info.capital\",\n  \"country\": \"Brazil\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 166, "output_tokens": 28, "total_tokens": 194, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b0d86dab-a4d6-4f1e-90fc-0ec8948df322", "event_id": "b0d86dab-a4d6-4f1e-90fc-0ec8948df322", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2880, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_3", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fcc564c7-2be3-4e0b-b04c-c76538f3e9ae", "event_id": "040ddbe1-3e63-4b44-adba-681d641c7e91", "parent_event_id": "fcc564c7-2be3-4e0b-b04c-c76538f3e9ae", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 661, "start_time": "2024-06-20T16:20:06.638Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_4", "variant_name": null}, {"function_name": "Fn_multiple_function_4", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_4\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"pointA\":[3,4],\"pointB\":[1,2],\"meta\":\"Value\",\"rounding\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_4_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the Euclidean distance between two points.\n  function_name: 'EuclideanDistance.calculate' or null,\n  // Coordinates for Point A.\n  pointA: int[],\n  // Coordinates for Point B.\n  pointB: int[],\n  // Optional: The number of decimals to round off the result. Default 0\n  rounding: int or null,\n} or {\n  // Calculate the angle between two points with respect to x-axis.\n  function_name: 'angleToXAxis.calculate' or null,\n  // Coordinates for Point A.\n  pointA: int[],\n  // Coordinates for Point B.\n  pointB: int[],\n  // Optional: The number of decimals to round off the result. Default 0\n  rounding: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Compute the Euclidean distance between two points A(3,4) and B(1,2)."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"EuclideanDistance.calculate\",\n  \"pointA\": [3, 4],\n  \"pointB\": [1, 2],\n  \"rounding\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 236, "output_tokens": 54, "total_tokens": 290, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fcc564c7-2be3-4e0b-b04c-c76538f3e9ae", "event_id": "fcc564c7-2be3-4e0b-b04c-c76538f3e9ae", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 3543, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_4", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "af5aa141-08d4-47ce-aab6-f4afac791c2b", "event_id": "86353a27-1074-422b-bbd9-142b8900156c", "parent_event_id": "af5aa141-08d4-47ce-aab6-f4afac791c2b", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1606, "start_time": "2024-06-20T16:20:07.301Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_5", "variant_name": null}, {"function_name": "Fn_multiple_function_5", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_5\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_speed\":20,\"acceleration\":10,\"time\":5,\"meta\":\"Value\",\"rounding\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_5_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate displacement based on initial speed, acceleration, and time interval for a motion along a straight line.\n  function_name: 'kinematics.calculate_displacement' or null,\n  // The initial speed of the moving object in m/s.\n  initial_speed: int,\n  // The rate of change of speed, m/s^2.\n  acceleration: int,\n  // The time interval during which the acceleration is applied, in seconds.\n  time: int,\n  // The number of decimals to round off the result (optional). (default: 2)\n  rounding: int or null,\n} or {\n  // Calculate the final speed of an object that starts from an initial speed and then accelerates for a certain duration.\n  function_name: 'kinematics.calculate_final_speed' or null,\n  // The initial speed of the moving object in m/s.\n  initial_speed: float,\n  // The rate of change of speed, m/s^2.\n  acceleration: float,\n  // The time interval during which the acceleration is applied, in seconds.\n  time: float,\n  // The number of decimals to round off the result (optional). (default: 2)\n  rounding: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you calculate the displacement of a car moving at an initial speed of 20 m/s and then accelerates at 10 m/s^2 for 5 seconds? (assuming a straight line motion)"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"kinematics.calculate_displacement\",\n  \"initial_speed\": 20,\n  \"acceleration\": 10,\n  \"time\": 5,\n  \"rounding\": 2\n}\n\nThe displacement of the car can be calculated using the formula:\n\ns = u*t + 0.5*a*t^2\n\nWhere:\n- s = displacement (in meters)\n- u = initial speed (in m/s)\n- a = acceleration (in m/s^2)\n- t = time (in seconds)\n\nPlugging in the values:\ns = 20 * 5 + 0.5 * 10 * 5^2\ns = 100 + 625\ns = 725 meters\n\nRounding to 2 decimal places, the displacement of the car is 725.00 meters.", "metadata": {"logprobs": null, "prompt_tokens": 352, "output_tokens": 205, "total_tokens": 557, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "af5aa141-08d4-47ce-aab6-f4afac791c2b", "event_id": "af5aa141-08d4-47ce-aab6-f4afac791c2b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 5150, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_5", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "35642dda-0cf8-4d0f-88f5-277274545c76", "event_id": "0d9be098-8e5a-46bc-a5a4-dd8a30e6797f", "parent_event_id": "35642dda-0cf8-4d0f-88f5-277274545c76", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1052, "start_time": "2024-06-20T16:20:08.908Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_6", "variant_name": null}, {"function_name": "Fn_multiple_function_6", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_6\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coordinates\":[46.603354,1.888334],\"date\":\"2019-12-13\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_6_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the historical weather data based on city and date.\n  function_name: 'weather.get_by_city_date' or null,\n  // The city for which to retrieve the weather.\n  city: string,\n  // The date for which to retrieve the historical weather data in the format YYYY-MM-DD.\n  date: string,\n} or {\n  // Get the weather forecast for a specific geographical coordinates.\n  function_name: 'weather.get_forecast_by_coordinates' or null,\n  // The geographical coordinates for which to retrieve the weather. The first element of the tuple is the latitude and the second is the longitude.\n  coordinates: float[],\n  // Number of days to forecast from current date (optional, default is 7).\n  days_ahead: int or null,\n} or {\n  // Retrieves the historical weather data based on coordinates and date.\n  function_name: 'weather.get_by_coordinates_date' or null,\n  // The geographical coordinates for which to retrieve the weather. The first element of the tuple is the latitude and the second is the longitude.\n  coordinates: float[],\n  // The date for which to retrieve the historical weather data in the format YYYY-MM-DD.\n  date: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the wind speed and temperature in location given by coordinates 46.603354,1.8883340 on December 13, 2019?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To retrieve the historical weather data for the given coordinates and date, the request would look like this:\n\n{\n  \"function_name\": \"weather.get_by_coordinates_date\",\n  \"coordinates\": [46.603354, 1.8883340],\n  \"date\": \"2019-12-13\"\n}\n\nThe response should contain the wind speed and temperature for the specified location and date.", "metadata": {"logprobs": null, "prompt_tokens": 343, "output_tokens": 93, "total_tokens": 436, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "35642dda-0cf8-4d0f-88f5-277274545c76", "event_id": "35642dda-0cf8-4d0f-88f5-277274545c76", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 6204, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_6", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "63235443-8b6c-49fd-a99e-42fabc105bf8", "event_id": "2d21092e-3bef-48a6-8259-1da69bf1bc4b", "parent_event_id": "63235443-8b6c-49fd-a99e-42fabc105bf8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 879, "start_time": "2024-06-20T16:20:09.962Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_7", "variant_name": null}, {"function_name": "Fn_multiple_function_7", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_7\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"A\":10,\"d\":0.01,\"meta\":\"Value\",\"K\":1.0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_7_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the resistance of an electrical circuit based on current and voltage.\n  function_name: 'resistance_calculator.calculate' or null,\n  // The electric current flowing in Amperes.\n  I: float,\n  // The voltage difference in Volts.\n  V: float,\n} or {\n  // Calculate the capacitance of a parallel plate capacitor based on the area, distance and dielectric constant using the equation C = \u03b5\u2080KA/d.\n  function_name: 'capacitance_calculator.calculate' or null,\n  // The area of one plate of the capacitor in square meters.\n  A: int,\n  // The distance between the two plates in meters.\n  d: float,\n  // The dielectric constant (default is 1.0 for free space, optional).\n  K: float or null,\n} or {\n  // Calculate the magnetic field based on the current flowing and the radial distance.\n  function_name: 'magnetic_field.calculate' or null,\n  // The electric current flowing in Amperes.\n  I: float,\n  // The radial distance from the line of current in meters.\n  r: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the capacitance of a parallel plate capacitor where the area of the plate is 10 square meters, the distance between plates is 0.01 meters and the dielectric constant K is 1.0."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"capacitance_calculator.calculate\",\n  \"A\": 10,\n  \"d\": 0.01,\n  \"K\": 1.0\n}", "metadata": {"logprobs": null, "prompt_tokens": 340, "output_tokens": 49, "total_tokens": 389, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "63235443-8b6c-49fd-a99e-42fabc105bf8", "event_id": "63235443-8b6c-49fd-a99e-42fabc105bf8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 7084, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_7", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6620edf7-b93b-414c-8cca-c4d3049a94eb", "event_id": "baa0b498-04f8-453c-ad9c-806c482319d1", "parent_event_id": "6620edf7-b93b-414c-8cca-c4d3049a94eb", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1450, "start_time": "2024-06-20T16:20:10.842Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_8", "variant_name": null}, {"function_name": "Fn_multiple_function_8", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_8\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species\":\"deer\",\"location\":\"Washington state\",\"duration\":10,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_8_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Assesses the population growth of a specific species in a specified location over a period.\n  function_name: 'wildlife_population.assess_growth' or null,\n  // The species for which the growth is to be calculated.\n  species: string,\n  // The area where the species is present.\n  location: string,\n  // The time period for which the population growth should be calculated in years.\n  duration: int,\n} or {\n  // Analyzes the impact of a species on a particular ecosystem.\n  function_name: 'ecological_impact.analyze' or null,\n  // The species whose impact is to be calculated.\n  species: string,\n  // The ecosystem being affected.\n  ecosystem: string,\n  // The area where the impact is analyzed.\n  location: string,\n  // The time period for which the impact analysis should be carried out in years. (default: 5)\n  timeframe: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How to assess the population growth in deer and their impact on woodland in Washington state over the past decade?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To assess the population growth of deer and their impact on woodland in Washington state over the past decade, you can use the following schema:\n\n{\n  \"function_name\": \"wildlife_population.assess_growth\",\n  \"species\": \"deer\",\n  \"location\": \"Washington state\",\n  \"duration\": 10\n}\n\n{\n  \"function_name\": \"ecological_impact.analyze\",\n  \"species\": \"deer\",\n  \"ecosystem\": \"woodland\",\n  \"location\": \"Washington state\",\n  \"timeframe\": 10\n}\n\nThe first part of the schema will assess the population growth of deer in Washington state over the past 10 years. The second part will analyze the impact of deer on the woodland ecosystem in Washington state over the same 10-year period.", "metadata": {"logprobs": null, "prompt_tokens": 257, "output_tokens": 175, "total_tokens": 432, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6620edf7-b93b-414c-8cca-c4d3049a94eb", "event_id": "6620edf7-b93b-414c-8cca-c4d3049a94eb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 8536, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_8", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0d1e6354-73ac-4014-8c26-720a9273241a", "event_id": "5a4132d8-28a6-465b-9a7f-6319d0d941e4", "parent_event_id": "0d1e6354-73ac-4014-8c26-720a9273241a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 929, "start_time": "2024-06-20T16:20:12.294Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_9", "variant_name": null}, {"function_name": "Fn_multiple_function_9", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_9\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"San Diego, CA\",\"propertyType\":\"villa\",\"bedrooms\":3,\"budget\":{\"min\":300000.0,\"max\":400000.0},\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_9_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get estimated value of a property based on location, specifications and age\n  function_name: 'property_valuation.get' or null,\n  // City and state where the property is located, e.g. San Diego, CA.\n  location: string,\n  // Type of property such as villa, condo, apartment, etc.\n  propertyType: string,\n  // Number of bedrooms required in the property.\n  bedrooms: int,\n  // Age of the property in years.\n  age: int,\n} or {\n  // Find properties based on location, budget, and specifications\n  function_name: 'realestate.find_properties' or null,\n  // City and state where the property is located, e.g. San Diego, CA.\n  location: string,\n  // Type of property such as villa, condo, apartment, etc.\n  propertyType: string,\n  // Number of bedrooms required in the property.\n  bedrooms: int,\n  // Budget range for the property.\n  budget: {\n    // Minimum budget limit.\n    min: float or null,\n    // Maximum budget limit.\n    max: float or null,\n  },\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a 3 bedroom villa for sale within $300,000 to $400,000 budget in San Diego."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"realestate.find_properties\",\n  \"location\": \"San Diego, CA\",\n  \"propertyType\": \"villa\",\n  \"bedrooms\": 3,\n  \"budget\": {\n    \"min\": 300000,\n    \"max\": 400000\n  }\n}", "metadata": {"logprobs": null, "prompt_tokens": 319, "output_tokens": 78, "total_tokens": 397, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0d1e6354-73ac-4014-8c26-720a9273241a", "event_id": "0d1e6354-73ac-4014-8c26-720a9273241a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 9467, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_9", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1e9f09e0-d8c3-41d1-a6f6-bdbe1753c76f", "event_id": "3622a810-76c8-43e4-93d9-ab6c97f2569e", "parent_event_id": "1e9f09e0-d8c3-41d1-a6f6-bdbe1753c76f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2385, "start_time": "2024-06-20T16:20:13.225Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_11", "variant_name": null}, {"function_name": "Fn_multiple_function_11", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_11\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"db_name\":\"employees\",\"table\":\"personal_data\",\"operation\":\"delete\",\"columns\":[\"email_address\",\"social_security_number\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_11_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // This function allows deletion or addition of columns in a database\n  function_name: 'database.modify_columns' or null,\n  // The name of the database to modify.\n  db_name: string,\n  // The name of the table to modify.\n  table: string,\n  // The operation to carry out on the table. Can be 'delete' or 'add'.\n  operation: string,\n  // List of the columns to add or delete from the table.\n  columns: string[],\n} or {\n  // This function creates a backup of the database before modification\n  function_name: 'database.create_backup' or null,\n  // The name of the database to create a backup of.\n  db_name: string,\n  // The file path where the backup should be stored.\n  backup_location: string,\n  // Option to append a timestamp to the backup file name. (default: False)\n  timestamp: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: I need to delete some columns from my employees database on personal_data table. I want to remove their email addresses and social security numbers to respect privacy."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the provided schema:\n\n{\n  \"function_name\": \"database.modify_columns\",\n  \"db_name\": \"employees\",\n  \"table\": \"personal_data\",\n  \"operation\": \"delete\",\n  \"columns\": [\"email_address\", \"social_security_number\"]\n}\n\nThis schema represents the necessary information to delete the \"email_address\" and \"social_security_number\" columns from the \"personal_data\" table in the \"employees\" database.\n\nThe \"function_name\" is set to \"database.modify_columns\" to indicate that this is a function that allows you to modify the columns in a database table.\n\nThe \"db_name\" is set to \"employees\" to specify the name of the database you want to modify.\n\nThe \"table\" is set to \"personal_data\" to indicate the specific table you want to modify.\n\nThe \"operation\" is set to \"delete\" to indicate that you want to remove the specified columns from the table.\n\nThe \"columns\" list contains the names of the columns you want to delete, which are \"email_address\" and \"social_security_number\".\n\nThis schema provides the necessary information to perform the desired database modification, which is to remove the email addresses and social security numbers from the personal_data table in the employees database.", "metadata": {"logprobs": null, "prompt_tokens": 270, "output_tokens": 291, "total_tokens": 561, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1e9f09e0-d8c3-41d1-a6f6-bdbe1753c76f", "event_id": "1e9f09e0-d8c3-41d1-a6f6-bdbe1753c76f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 11854, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_11", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "78ef1e0c-ded1-42e7-97f1-8728b2b761e1", "event_id": "b1577c95-03ad-4532-9f31-debcaec7a1fd", "parent_event_id": "78ef1e0c-ded1-42e7-97f1-8728b2b761e1", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 715, "start_time": "2024-06-20T16:20:15.613Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_12", "variant_name": null}, {"function_name": "Fn_multiple_function_12", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_12\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":5,\"b\":20,\"c\":-25,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_12_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the roots of a quadratic equation.\n  function_name: 'math_roots.quadratic' or null,\n  // Coefficient of the second-degree term.\n  a: int,\n  // Coefficient of the first-degree term.\n  b: int,\n  // Constant term.\n  c: int,\n} or {\n  // Calculate the roots of a cubic equation.\n  function_name: 'math.roots.cubic' or null,\n  // Coefficient of the third-degree term.\n  a: float,\n  // Coefficient of the second-degree term.\n  b: float,\n  // Coefficient of the first-degree term.\n  c: float,\n  // Constant term.\n  d: float,\n} or {\n  // Calculate the roots of a polynomial equation.\n  function_name: 'math.roots.polynomial' or null,\n  // Array of coefficients of the polynomial equation starting from highest degree term.\n  coefficients: float[],\n  // Degree of the polynomial equation. Default 0\n  degree: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the roots of a quadratic equation with coefficients 5, 20, and -25"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math_roots.quadratic\",\n  \"a\": 5,\n  \"b\": 20,\n  \"c\": -25\n}", "metadata": {"logprobs": null, "prompt_tokens": 293, "output_tokens": 54, "total_tokens": 347, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "78ef1e0c-ded1-42e7-97f1-8728b2b761e1", "event_id": "78ef1e0c-ded1-42e7-97f1-8728b2b761e1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 12571, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_12", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3beacb34-7a62-4496-ba41-a3575e8282ac", "event_id": "20660fd3-01fc-4e94-b641-9f38c2ce73f9", "parent_event_id": "3beacb34-7a62-4496-ba41-a3575e8282ac", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1124, "start_time": "2024-06-20T16:20:16.330Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_13", "variant_name": null}, {"function_name": "Fn_multiple_function_13", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_13\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Tech Inc\",\"year1\":2019,\"year1_revenue\":1000000,\"year2\":2020,\"year2_revenue\":1200000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_13_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the year over year (YOY) growth rate for a company.\n  function_name: 'corporate_finance.calculate_YOY_growth_rate' or null,\n  // The name of the company for which to calculate the YOY growth rate.\n  company_name: string,\n  // The initial year.\n  year1: int,\n  // The revenue for the initial year.\n  year1_revenue: int,\n  // The subsequent year.\n  year2: int,\n  // The revenue for the subsequent year.\n  year2_revenue: int,\n} or {\n  // Calculate the return on equity (ROE) for a company.\n  function_name: 'financial_ratios.calculate_ROE' or null,\n  // Net income for the period.\n  net_income: float,\n  // Average shareholder equity for the period.\n  shareholder_equity: float,\n} or {\n  // Calculate the return on assets (ROA) for a company.\n  function_name: 'financial_ratios.calculate_ROA' or null,\n  // Net income for the period.\n  net_income: float,\n  // Total average assets for the period.\n  total_assets: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the year over year growth rate for company 'Tech Inc' with revenues of $1M in 2019 and $1.2M in 2020?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"corporate_finance.calculate_YOY_growth_rate\",\n  \"company_name\": \"Tech Inc\",\n  \"year1\": 2019,\n  \"year1_revenue\": 1000000,\n  \"year2\": 2020,\n  \"year2_revenue\": 1200000\n}", "metadata": {"logprobs": null, "prompt_tokens": 345, "output_tokens": 94, "total_tokens": 439, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3beacb34-7a62-4496-ba41-a3575e8282ac", "event_id": "3beacb34-7a62-4496-ba41-a3575e8282ac", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 13697, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_13", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e28e1174-1658-44de-ab19-a0ccb1fb8e99", "event_id": "96ec8f6e-bc0b-4f6c-819a-b2949125c264", "parent_event_id": "e28e1174-1658-44de-ab19-a0ccb1fb8e99", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1075, "start_time": "2024-06-20T16:20:17.455Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_14", "variant_name": null}, {"function_name": "Fn_multiple_function_14", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_14\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"XYZ\",\"product\":\"A\",\"meta\":\"Value\",\"sales_units_increase_percentage\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_14_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the current selling price of the product.\n  function_name: 'corporate_finance.product_price' or null,\n  // The company that sells the product.\n  company: string,\n  // The product whose price we want to fetch.\n  product: string,\n} or {\n  // Estimate the revenue of a company by multiplying the sales units of the product with its selling price.\n  function_name: 'corporate_finance.revenue_forecast' or null,\n  // The company that you want to calculate the revenue for.\n  company: string,\n  // The product sold by the company.\n  product: string,\n  // Percentage increase in the sales units. This value is optional and defaults to zero if not provided.\n  sales_units_increase_percentage: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much revenue would company XYZ generate if we increase the sales units of product A by 10% while keeping the price the same?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"corporate_finance.revenue_forecast\",\n  \"company\": \"XYZ\",\n  \"product\": \"A\",\n  \"sales_units_increase_percentage\": 10\n}\n\nThis request will estimate the revenue of company XYZ by multiplying the selling price of product A with the sales units, where the sales units are increased by 10% compared to the previous period.", "metadata": {"logprobs": null, "prompt_tokens": 232, "output_tokens": 105, "total_tokens": 337, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e28e1174-1658-44de-ab19-a0ccb1fb8e99", "event_id": "e28e1174-1658-44de-ab19-a0ccb1fb8e99", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 14773, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_14", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fae8b1dd-0ce1-474d-921b-10e10896e65c", "event_id": "6386ea03-b3ab-4eb9-b8e7-8a2ed0c6cee2", "parent_event_id": "fae8b1dd-0ce1-474d-921b-10e10896e65c", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 862, "start_time": "2024-06-20T16:20:18.532Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_15", "variant_name": null}, {"function_name": "Fn_multiple_function_15", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_15\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_cost\":200000,\"depreciation_rate\":3,\"years\":5,\"meta\":\"Value\",\"monthly\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_15_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates the depreciated value of a property given its initial cost, depreciation rate, and the number of years.\n  function_name: 'finance.property_depreciation' or null,\n  // The initial cost of the property.\n  initial_cost: int,\n  // The annual depreciation rate in percentage.\n  depreciation_rate: int,\n  // The number of years for which to calculate the depreciation.\n  years: int,\n  // If set to true, it will calculate monthly depreciation instead of annually. (optional)\n  monthly: bool or null,\n} or {\n  // Calculates the monthly repayment for a loan.\n  function_name: 'finance.loan_repayment' or null,\n  // The amount borrowed or loaned.\n  loan_amount: float,\n  // The annual interest rate.\n  interest_rate: float,\n  // The term of the loan in years.\n  loan_term: int,\n} or {\n  // Adjusts a sum of money for inflation based on the consumer price index (CPI).\n  function_name: 'finance.inflation_adjustment' or null,\n  // The initial sum of money.\n  initial_sum: float,\n  // The number of years over which inflation is calculated.\n  years: int,\n  // The annual rate of inflation. Default 0.0\n  inflation_rate: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the depreciated value of a property costing $200,000 with an annual depreciation rate of 3% for 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"finance.property_depreciation\",\n  \"initial_cost\": 200000,\n  \"depreciation_rate\": 3,\n  \"years\": 5,\n  \"monthly\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 376, "output_tokens": 67, "total_tokens": 443, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fae8b1dd-0ce1-474d-921b-10e10896e65c", "event_id": "fae8b1dd-0ce1-474d-921b-10e10896e65c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 15637, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_15", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "713ed8d2-2a55-4579-b38f-bddc401c2a7b", "event_id": "33a243e8-3194-4b6a-bc4b-9b14ca7ae022", "parent_event_id": "713ed8d2-2a55-4579-b38f-bddc401c2a7b", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 926, "start_time": "2024-06-20T16:20:19.395Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_16", "variant_name": null}, {"function_name": "Fn_multiple_function_16", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_16\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coordinates\":[43.653225,-79.383186],\"panelArea\":80000,\"meta\":\"Value\",\"month\":\"December\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_16_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Estimate the energy output of a solar farm given its location and panel area for a particular month.\n  function_name: 'solarFarm.potential' or null,\n  // The geographic coordinates of the location of the solar farm.\n  coordinates: float[],\n  // The total solar panel area in square feet at the location.\n  panelArea: int,\n  // The month for which to calculate the potential energy output. Default to January\n  month: string or null,\n} or {\n  // Estimate the energy output of a wind farm given its location and turbine count for a particular month.\n  function_name: 'windFarm.potential' or null,\n  // The geographic coordinates of the location of the wind farm.\n  coordinates: float[],\n  // The total number of wind turbines at the location.\n  turbineCount: int,\n  // The month for which to calculate the potential energy output. Default to January\n  month: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much is the potential of the Solar farm at location with coordinates [43.653225, -79.383186] in December, given that it has a total solar panel area of 80000 sq ft?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"solarFarm.potential\",\n  \"coordinates\": [43.653225, -79.383186],\n  \"panelArea\": 80000,\n  \"month\": \"December\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 285, "output_tokens": 57, "total_tokens": 342, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "713ed8d2-2a55-4579-b38f-bddc401c2a7b", "event_id": "713ed8d2-2a55-4579-b38f-bddc401c2a7b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 16565, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_16", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "101202ed-20ea-41a3-9643-4ff31e8dcc7d", "event_id": "d8f692c4-2791-4987-9f57-736b2c6c8314", "parent_event_id": "101202ed-20ea-41a3-9643-4ff31e8dcc7d", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1348, "start_time": "2024-06-20T16:20:20.323Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_17", "variant_name": null}, {"function_name": "Fn_multiple_function_17", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_17\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species\":\"tiger\",\"generations\":100,\"probability\":0.95,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_17_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Predict the potential future geographic distribution of a species under a specified climate change scenario.\n  function_name: 'species_distribution_modeling.project_range_shift' or null,\n  // The species of animal.\n  species: string,\n  // The name of the climate change scenario.\n  climate_scenario: string,\n  // The future time in years for the prediction. (default: 100)\n  future_time: int or null,\n} or {\n  // Calculate the effective population size necessary to maintain genetic diversity in a wild animal population for a specified number of generations with a given probability.\n  function_name: 'population_genetics.calculate_ne' or null,\n  // The species of wild animal.\n  species: string,\n  // The number of generations for which to maintain the genetic diversity.\n  generations: int,\n  // The probability of maintaining genetic diversity.\n  probability: float,\n} or {\n  // Calculate the maximum population size of the species that the environment can sustain indefinitely.\n  function_name: 'ecology.calculate_carrying_capacity' or null,\n  // The area of the habitat in square kilometers.\n  habitat_area: float,\n  // The species of animal.\n  species: string,\n  // The biological productivity of the habitat in animals per square kilometer per year.\n  productivity: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the required minimum population size (Ne) for maintaining the genetic diversity of a wild tiger population for the next 100 generations with a probability of 0.95?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To answer this question, we can use the schema for the \"population_genetics.calculate_ne\" function:\n\n{\n  \"function_name\": \"population_genetics.calculate_ne\",\n  \"species\": \"tiger\",\n  \"generations\": 100,\n  \"probability\": 0.95\n}\n\nThe required parameters are:\n- species: \"tiger\"\n- generations: 100\n- probability: 0.95\n\nThis function will calculate the effective population size (Ne) necessary to maintain the genetic diversity of the wild tiger population for the next 100 generations with a probability of 0.95.", "metadata": {"logprobs": null, "prompt_tokens": 361, "output_tokens": 137, "total_tokens": 498, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "101202ed-20ea-41a3-9643-4ff31e8dcc7d", "event_id": "101202ed-20ea-41a3-9643-4ff31e8dcc7d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 17914, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_17", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ad137350-9023-46e7-a592-413cb66bf1d9", "event_id": "157a3b93-f97d-42ba-a2cb-95fc8ff1e6aa", "parent_event_id": "ad137350-9023-46e7-a592-413cb66bf1d9", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1005, "start_time": "2024-06-20T16:20:21.672Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_18", "variant_name": null}, {"function_name": "Fn_multiple_function_18", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_18\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"from_currency\":\"EUR\",\"to_currency\":\"USD\",\"meta\":\"Value\",\"date\":\"2022-01-01\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_18_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Converts a specified amount of money from one currency to another at the latest rate.\n  function_name: 'currency_conversion.convert' or null,\n  // The currency that you want to convert from.\n  from_currency: string,\n  // The currency that you want to convert to.\n  to_currency: string,\n  // The amount of money that you want to convert.\n  amount: float,\n} or {\n  // Get the latest currency conversion rate from one currency to another.\n  function_name: 'currency_conversion.get_latest_rate' or null,\n  // The currency that you want to convert from.\n  from_currency: string,\n  // The currency that you want to convert to.\n  to_currency: string,\n} or {\n  // Get the currency conversion rate from one currency to another at a specified date.\n  function_name: 'currency_conversion.get_rate' or null,\n  // The currency that you want to convert from.\n  from_currency: string,\n  // The currency that you want to convert to.\n  to_currency: string,\n  // The date at which the conversion rate applies. Default is the current date. (default: today)\n  date: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the conversion rate from Euro to Dollar at January 1, 2022"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema for the request to get the currency conversion rate from Euro to Dollar at January 1, 2022:\n\n{\n  \"function_name\": \"currency_conversion.get_rate\",\n  \"from_currency\": \"EUR\",\n  \"to_currency\": \"USD\",\n  \"date\": \"2022-01-01\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 321, "output_tokens": 82, "total_tokens": 403, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ad137350-9023-46e7-a592-413cb66bf1d9", "event_id": "ad137350-9023-46e7-a592-413cb66bf1d9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 18921, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_18", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "11fa21bb-bd82-4745-bec5-4b0625f2969f", "event_id": "566b4f9a-39e4-4fd5-b5da-1b787f1c9289", "parent_event_id": "11fa21bb-bd82-4745-bec5-4b0625f2969f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 475, "start_time": "2024-06-20T16:20:22.679Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_19", "variant_name": null}, {"function_name": "Fn_multiple_function_19", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_19\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"battle\":\"Battle of Stalingrad\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_19_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get details of a specific historical European war.\n  function_name: 'european_history.war_details' or null,\n  // Name of the war\n  war: string,\n} or {\n  // Get information about a specific historical leader in European history.\n  function_name: 'european_history.leader_info' or null,\n  // Name of the leader\n  leader: string,\n} or {\n  // Get details of a specific historical European battle.\n  function_name: 'european_history.battle_details' or null,\n  // Name of the battle\n  battle: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who were the main participants and what was the location of the Battle of Stalingrad?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"european_history.battle_details\",\n  \"battle\": \"Battle of Stalingrad\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 178, "output_tokens": 35, "total_tokens": 213, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "11fa21bb-bd82-4745-bec5-4b0625f2969f", "event_id": "11fa21bb-bd82-4745-bec5-4b0625f2969f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 19397, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_19", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8c21890e-8fb5-424b-8a64-aefc822ea05f", "event_id": "55b9ec25-23c2-4e71-b51d-31ac8a86c595", "parent_event_id": "8c21890e-8fb5-424b-8a64-aefc822ea05f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1534, "start_time": "2024-06-20T16:20:23.155Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_20", "variant_name": null}, {"function_name": "Fn_multiple_function_20", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_20\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion\":\"Christianity\",\"count\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_20_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves a list of major councils in a specified religion.\n  function_name: 'religion_history.get_councils' or null,\n  // Name of the religion for which to retrieve the councils.\n  religion: string,\n  // Number of top councils to retrieve. (default: 3)\n  count: int,\n} or {\n  // Retrieves a list of major reformations in a specified religion.\n  function_name: 'religion_history.get_reformations' or null,\n  // Name of the religion for which to retrieve the reformations.\n  religion: string,\n  // Number of top reformations to retrieve. (default: 3)\n  count: int,\n} or {\n  // Retrieves a list of major schisms in a specified religion.\n  function_name: 'religion_history.get_schisms' or null,\n  // Name of the religion for which to retrieve the schisms.\n  religion: string,\n  // Number of top schisms to retrieve.\n  count: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the three great Schism in Christianity history?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"religion_history.get_schisms\",\n  \"religion\": \"Christianity\",\n  \"count\": 3\n}\n\nThe three major schisms in the history of Christianity are:\n\n1. The East-West Schism (also called the Great Schism) in 1054 CE, which separated the Christian church into the Western (Catholic) and Eastern (Orthodox) branches.\n\n2. The Protestant Reformation in the 16th century, which split Christianity into Catholic and Protestant branches. \n\n3. The Oxford Movement in the 19th century, which led to the formation of Anglicanism as a distinct branch of Christianity, separating from the Catholic Church.", "metadata": {"logprobs": null, "prompt_tokens": 270, "output_tokens": 166, "total_tokens": 436, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8c21890e-8fb5-424b-8a64-aefc822ea05f", "event_id": "8c21890e-8fb5-424b-8a64-aefc822ea05f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 20932, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_20", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "828136fa-04cd-4a0b-8a81-f767c5f836e7", "event_id": "67358dfb-085b-4fe2-8713-5ae9c0070be1", "parent_event_id": "828136fa-04cd-4a0b-8a81-f767c5f836e7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 853, "start_time": "2024-06-20T16:20:24.691Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_21", "variant_name": null}, {"function_name": "Fn_multiple_function_21", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_21\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"material\":\"marble\",\"size\":3,\"meta\":\"Value\",\"complexity\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_21_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get information about a specific sculptor.\n  function_name: 'sculptor_info.get' or null,\n  // The name of the sculptor.\n  name: string,\n} or {\n  // Calculate the estimated price to commission a sculpture based on the material and size.\n  function_name: 'sculpture_price.calculate' or null,\n  // The material used for the sculpture.\n  material: string,\n  // The size of the sculpture in feet.\n  size: int,\n  // The complexity level of the sculpture. Default is 'medium'. (default: medium)\n  complexity: 'low' or 'medium' or 'high' or null,\n} or {\n  // Check the availability of a specific sculpture in the inventory.\n  function_name: 'sculpture_availability.check' or null,\n  // The name of the sculpture.\n  sculpture_name: string,\n  // The material of the sculpture.\n  material: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the price to commission a sculpture made of marble with a size of 3 feet?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"sculpture_price.calculate\",\n  \"material\": \"marble\",\n  \"size\": 3,\n  \"complexity\": \"medium\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 260, "output_tokens": 54, "total_tokens": 314, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "828136fa-04cd-4a0b-8a81-f767c5f836e7", "event_id": "828136fa-04cd-4a0b-8a81-f767c5f836e7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 21787, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_21", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9a87260b-69b1-4d92-a57d-5c30465d35a6", "event_id": "ca7ee8a0-dc37-48f5-ad4c-6753d3310a27", "parent_event_id": "9a87260b-69b1-4d92-a57d-5c30465d35a6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 3088, "start_time": "2024-06-20T16:20:25.545Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_22", "variant_name": null}, {"function_name": "Fn_multiple_function_22", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_22\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"frequency\":440,\"duration\":5,\"meta\":\"Value\",\"wave_type\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_22_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // This function is for playing a sound wave file.\n  function_name: 'play_sound_wave' or null,\n  // The filename of the sound wave file to be played.\n  wave_file: string,\n  // The volume level at which the sound is to be played (1 is 100%). (default: 1)\n  volume: float or null,\n} or {\n  // This function is for generating a sinusoidal sound wave file of a certain frequency for a specific duration and save it to a WAV file.\n  function_name: 'generate_sound_wave' or null,\n  // The frequency of the sound wave in Hz.\n  frequency: int,\n  // The duration of the sound in seconds.\n  duration: int,\n  // The waveform to be used to generate the sound. (default: sine)\n  wave_type: 'sine' or 'square' or 'sawtooth' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to generate a sound of 440Hz frequency for 5 seconds. What is the function and how can I use it?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Based on the provided schema, the appropriate function to generate a sound wave with the given requirements would be:\n\n{\n  \"function_name\": \"generate_sound_wave\",\n  \"frequency\": 440,\n  \"duration\": 5,\n  \"wave_type\": \"sine\"\n}\n\nTo use this function, you would need to have a library or API that provides the implementation for the \"generate_sound_wave\" function. The general steps would be:\n\n1. Call the \"generate_sound_wave\" function with the specified parameters:\n   - frequency: 440 Hz\n   - duration: 5 seconds\n   - wave_type: \"sine\" (default if not provided)\n\n2. The function should generate a sinusoidal sound wave file in the WAV format and save it to a file or return the audio data.\n\n3. You can then use the generated WAV file to play the sound, or use the audio data directly in your application.\n\nExample usage (pseudocode):\n\n```\n// Call the generate_sound_wave function\nresult = generate_sound_wave(\n  frequency=440,\n  duration=5,\n  wave_type=\"sine\"\n)\n\n// Check the result\nif result.function_name == \"generate_sound_wave\":\n  // The sound wave file has been generated\n  save_wave_file(result.wave_file)\n  play_sound(result.wave_file)\nelse:\n  // An error occurred\n  handle_error()\n```\n\nThe exact implementation details would depend on the library or API you are using to generate and play the sound wave. But the general approach would be to call the \"generate_sound_wave\" function with the appropriate parameters and then use the generated file or audio data to play the sound.", "metadata": {"logprobs": null, "prompt_tokens": 266, "output_tokens": 397, "total_tokens": 663, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9a87260b-69b1-4d92-a57d-5c30465d35a6", "event_id": "9a87260b-69b1-4d92-a57d-5c30465d35a6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 24876, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_22", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "783ebce9-d127-4bc0-b62b-7794b4e5ad94", "event_id": "9d544c25-49ab-4bb9-bb12-ea40261b79ee", "parent_event_id": "783ebce9-d127-4bc0-b62b-7794b4e5ad94", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 698, "start_time": "2024-06-20T16:20:28.634Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_23", "variant_name": null}, {"function_name": "Fn_multiple_function_23", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_23\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"league\":\"NBA\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_23_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Returns the record for the most points scored by a single player in one season of NBA, including the player name, points scored, and season.\n  function_name: 'sports_data.basketball.most_points_single_season' or null,\n  // The specific basketball league for which to fetch the record. In this case, 'NBA'.\n  league: string,\n} or {\n  // Returns the record for the most points scored by a player in his career in NBA, including the player name, total points scored, and career span.\n  function_name: 'sports_data.basketball.most_points_career' or null,\n  // The specific basketball league for which to fetch the record. In this case, 'NBA'.\n  league: string,\n} or {\n  // Returns the record for the most points scored by a single player in one game of NBA, including the player name, points scored, and game date.\n  function_name: 'sports_data.basketball.most_points_single_game' or null,\n  // The specific basketball league for which to fetch the record. In this case, 'NBA'.\n  league: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the record for the most points scored by a single player in an NBA game?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_data.basketball.most_points_single_game\",\n  \"league\": \"NBA\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 298, "output_tokens": 36, "total_tokens": 334, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "783ebce9-d127-4bc0-b62b-7794b4e5ad94", "event_id": "783ebce9-d127-4bc0-b62b-7794b4e5ad94", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 25575, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_23", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "597eb322-8bcc-4098-878d-ea4b0d7f8c88", "event_id": "31446b02-c51b-4ddb-9ce6-c5fdb1b4dd67", "parent_event_id": "597eb322-8bcc-4098-878d-ea4b0d7f8c88", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T16:20:29.334Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_24", "variant_name": null}, {"function_name": "Fn_multiple_function_24", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_24\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"LeBron James\",\"stats_fields\":[\"points\",\"assists\",\"minutes\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_24_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get current statistics for a specified basketball player\n  function_name: 'basketball.player_stats.get' or null,\n  // The name of the player.\n  player_name: string,\n  // List of statistical categories to be fetched, including points, assists, rebounds, minutes.\n  stats_fields: string[],\n} or {\n  // Get the detailed statistical data from a specific basketball game\n  function_name: 'basketball.game_stats.get' or null,\n  // One of the competing teams in the game.\n  team1: string,\n  // One of the competing teams in the game.\n  team2: string,\n  // The date when the game occurred.\n  date: string,\n  // List of statistical categories to be fetched, including total points, total assists, total rebounds, turnovers. Default to empty list\n  stats_fields: string[],\n} or {\n  // Get current statistics for a specific basketball team\n  function_name: 'basketball.team_stats.get' or null,\n  // The name of the team.\n  team_name: string,\n  // List of statistical categories to be fetched, including total points, total assists, total rebounds, win rate.\n  stats_fields: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the current stats for basketball player LeBron James including points per game, assists, and minutes per game."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"basketball.player_stats.get\",\n  \"player_name\": \"LeBron James\",\n  \"stats_fields\": [\n    \"points\",\n    \"assists\",\n    \"minutes\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 332, "output_tokens": 61, "total_tokens": 393, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "597eb322-8bcc-4098-878d-ea4b0d7f8c88", "event_id": "597eb322-8bcc-4098-878d-ea4b0d7f8c88", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 26497, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_24", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "915863de-a0d2-40a4-b5ba-929af980fd98", "event_id": "b6890fd2-e294-43a8-8e01-dd175011c737", "parent_event_id": "915863de-a0d2-40a4-b5ba-929af980fd98", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 966, "start_time": "2024-06-20T16:20:30.255Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_25", "variant_name": null}, {"function_name": "Fn_multiple_function_25", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_25\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start\":\"London\",\"destination\":\"Edinburgh\",\"meta\":\"Value\",\"method\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_25_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Determines the best route between two points.\n  function_name: 'route_planner.calculate_route' or null,\n  // The starting point of the journey.\n  start: string,\n  // The destination of the journey.\n  destination: string,\n  // The method to use when calculating the route (default is 'fastest'). (default: fastest)\n  method: 'fastest' or 'shortest' or 'balanced' or null,\n} or {\n  // Provides details about a chess club, including location.\n  function_name: 'chess_club_details.find' or null,\n  // The name of the chess club.\n  name: string,\n  // The city in which the chess club is located.\n  city: string,\n  // The event hosted by the club. (default: null)\n  event: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the fastest route from London to Edinburgh for playing a chess championship? Also provide an estimate of the distance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"route_planner.calculate_route\",\n  \"start\": \"London\",\n  \"destination\": \"Edinburgh\",\n  \"method\": \"fastest\"\n}\n\nThe approximate distance from London to Edinburgh via the fastest route is around 400 miles (640 km).", "metadata": {"logprobs": null, "prompt_tokens": 243, "output_tokens": 70, "total_tokens": 313, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "915863de-a0d2-40a4-b5ba-929af980fd98", "event_id": "915863de-a0d2-40a4-b5ba-929af980fd98", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 27464, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_25", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4f987a82-4c1f-4632-927d-c0eb0e1603c5", "event_id": "ac2fc123-24db-4fd6-9f63-b4bfe62f9f54", "parent_event_id": "4f987a82-4c1f-4632-927d-c0eb0e1603c5", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1389, "start_time": "2024-06-20T16:20:31.223Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_26", "variant_name": null}, {"function_name": "Fn_multiple_function_26", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_26\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_title\":\"Assassins Creed Valhalla\",\"platform\":\"PlayStation\",\"meta\":\"Value\",\"region\":\"United States\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_26_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the currency used in a specific region in a gaming platform store.\n  function_name: 'video_games.store_currency' or null,\n  // The gaming platform e.g. PlayStation, Xbox, Nintendo Switch\n  platform: string,\n  // The region e.g. United States, United Kingdom, Japan (default: True)\n  region: string or null,\n} or {\n  // Checks if a particular game is currently on sale in a specific gaming platform store and in a specific region.\n  function_name: 'video_games.on_sale' or null,\n  // The title of the video game\n  game_title: string,\n  // The gaming platform e.g. PlayStation, Xbox, Nintendo Switch\n  platform: string,\n  // The region e.g. United States, United Kingdom, Japan. Default United States\n  region: string or null,\n} or {\n  // Fetches the selling price of a specified game in a particular gaming platform store and in a specific region.\n  function_name: 'video_games.store_price' or null,\n  // The title of the video game\n  game_title: string,\n  // The gaming platform e.g. PlayStation, Xbox, Nintendo Switch\n  platform: string,\n  // The region e.g. United States, United Kingdom, Japan. Default to United States\n  region: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the cheapest selling price for the game 'Assassins Creed Valhalla' in the PlayStation Store in the United States?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the cheapest selling price for the game 'Assassins Creed Valhalla' in the PlayStation Store in the United States, we can use the following schema:\n\n{\n  \"function_name\": \"video_games.store_price\",\n  \"game_title\": \"Assassins Creed Valhalla\",\n  \"platform\": \"PlayStation\",\n  \"region\": \"United States\"\n}\n\nThe response would contain the current selling price of the game 'Assassins Creed Valhalla' in the PlayStation Store in the United States.", "metadata": {"logprobs": null, "prompt_tokens": 369, "output_tokens": 132, "total_tokens": 501, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4f987a82-4c1f-4632-927d-c0eb0e1603c5", "event_id": "4f987a82-4c1f-4632-927d-c0eb0e1603c5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 28855, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_26", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "47e61df3-2a8c-4b84-87c3-bd3fa8fc533c", "event_id": "60fcb353-73ed-4287-90f8-81df166141a3", "parent_event_id": "47e61df3-2a8c-4b84-87c3-bd3fa8fc533c", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1944, "start_time": "2024-06-20T16:20:32.613Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_27", "variant_name": null}, {"function_name": "Fn_multiple_function_27", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_27\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Fortnite\",\"platform\":\"Playstation\",\"meta\":\"Value\",\"mission\":null,\"trophy\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_27_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve scores and rankings based on player\u2019s performance in a certain game.\n  function_name: 'game_scores.get' or null,\n  // The name of the game.\n  game: string,\n  // The gaming platform e.g. Xbox, Playstation, PC\n  platform: string,\n  // The level of the game for which you want to retrieve the scores.\n  level: int,\n  // The name of the player for whom you want to retrieve scores. Default ''\n  player: string or null,\n} or {\n  // Retrieve information about different types of rewards that you can receive when playing a certain game.\n  function_name: 'game_rewards.get' or null,\n  // The name of the game.\n  game: string,\n  // The gaming platform e.g. Xbox, Playstation, PC\n  platform: string,\n  // The mission for which you want to know the rewards. Default to ''\n  mission: string or null,\n  // The trophy level for which you want to know the rewards. Default to ''\n  trophy: string or null,\n} or {\n  // List all missions for a certain game.\n  function_name: 'game_missions.list' or null,\n  // The name of the game.\n  game: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the rewards for playing Fortnite on Playstation platform with different missions and trophies"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the rewards for playing Fortnite on the Playstation platform with different missions and trophies, the request would look like this:\n\n{\n  \"function_name\": \"game_rewards.get\",\n  \"game\": \"Fortnite\",\n  \"platform\": \"Playstation\",\n  \"mission\": null,\n  \"trophy\": null\n}\n\nThis request would retrieve information about the different types of rewards that can be obtained when playing Fortnite on the Playstation platform. \n\nIf you want to retrieve rewards for specific missions or trophy levels, you can provide those details as well:\n\n{\n  \"function_name\": \"game_rewards.get\",\n  \"game\": \"Fortnite\", \n  \"platform\": \"Playstation\",\n  \"mission\": \"Rescue the Survivors\",\n  \"trophy\": \"Gold\"\n}\n\nThis would retrieve the rewards for the \"Rescue the Survivors\" mission and the \"Gold\" trophy level in Fortnite on the Playstation platform.", "metadata": {"logprobs": null, "prompt_tokens": 339, "output_tokens": 233, "total_tokens": 572, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "47e61df3-2a8c-4b84-87c3-bd3fa8fc533c", "event_id": "47e61df3-2a8c-4b84-87c3-bd3fa8fc533c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 30800, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_27", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ad3c9c27-1d8a-4d2b-b118-2ab2553d3c40", "event_id": "67b8c17d-de35-4e48-aaad-7f74fdfe348a", "parent_event_id": "ad3c9c27-1d8a-4d2b-b118-2ab2553d3c40", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T16:20:34.558Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_28", "variant_name": null}, {"function_name": "Fn_multiple_function_28", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_28\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Paris, France\",\"end_location\":\"Rome, Italy\",\"meta\":\"Value\",\"mode\":\"transit\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_28_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Estimates the time it will take to travel from one location to another by a specific mode of transportation.\n  function_name: 'maps.route_times' or null,\n  // The string representation of the route.\n  route: string,\n  // The mode of transportation (walk, bike, transit, drive). (default: walk)\n  mode: string or null,\n} or {\n  // Find the shortest path from one location to another by using a specific mode of transportation.\n  function_name: 'maps.shortest_path' or null,\n  // The name or coordinates of the start location.\n  start_location: string,\n  // The name or coordinates of the end location.\n  end_location: string,\n  // The mode of transportation (walk, bike, transit, drive). (default: walk)\n  mode: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the shortest path from Paris, France to Rome, Italy by using a public transportation?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"maps.shortest_path\",\n  \"start_location\": \"Paris, France\",\n  \"end_location\": \"Rome, Italy\",\n  \"mode\": \"transit\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 232, "output_tokens": 62, "total_tokens": 294, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ad3c9c27-1d8a-4d2b-b118-2ab2553d3c40", "event_id": "ad3c9c27-1d8a-4d2b-b118-2ab2553d3c40", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 31619, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_28", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a147af89-d08c-42eb-a2e2-874dfdfbec1a", "event_id": "d0e248f4-ab14-434d-9010-193aa102d31b", "parent_event_id": "a147af89-d08c-42eb-a2e2-874dfdfbec1a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1928, "start_time": "2024-06-20T16:20:35.378Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_29", "variant_name": null}, {"function_name": "Fn_multiple_function_29", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_29\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":2,\"b\":3,\"c\":-4,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_29_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Solve a quadratic equation with given coefficients a, b, and c.\n  function_name: 'solve.quadratic_equation' or null,\n  // Coefficient of x^2.\n  a: int,\n  // Coefficient of x.\n  b: int,\n  // Constant term.\n  c: int,\n} or {\n  // Converts RGB values to Hexadecimal color code.\n  function_name: 'convert.rgb_to_hex' or null,\n  // The Red component.\n  r: int,\n  // The Green component.\n  g: int,\n  // The Blue component.\n  b: int,\n} or {\n  // Reverses a given string.\n  function_name: 'perform.string_reverse' or null,\n  // The string to be reversed.\n  input_string: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the root of quadratic equation with coefficients 2, 3 and -4?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To solve the quadratic equation with coefficients a = 2, b = 3, and c = -4, we can use the quadratic formula:\n\nx = (-b \u00b1 \u221a(b^2 - 4ac)) / (2a)\n\nPlugging in the values:\na = 2\nb = 3\nc = -4\n\nx = (-3 \u00b1 \u221a(3^2 - 4 * 2 * -4)) / (2 * 2)\nx = (-3 \u00b1 \u221a(9 + 32)) / 4\nx = (-3 \u00b1 \u221a41) / 4\n\nThe two solutions are:\nx1 = (-3 + \u221a41) / 4\nx2 = (-3 - \u221a41) / 4\n\nTherefore, the answer in the schema format would be:\n\n{\n  \"function_name\": \"solve.quadratic_equation\",\n  \"a\": 2,\n  \"b\": 3,\n  \"c\": -4\n}\n\nThe roots of the quadratic equation are x1 and x2.", "metadata": {"logprobs": null, "prompt_tokens": 245, "output_tokens": 255, "total_tokens": 500, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a147af89-d08c-42eb-a2e2-874dfdfbec1a", "event_id": "a147af89-d08c-42eb-a2e2-874dfdfbec1a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 33548, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_29", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0803d7cd-8755-443a-8f23-9f3d1e98f1f4", "event_id": "cbca8fb3-9958-4fd0-9d5a-d2bb0f7978db", "parent_event_id": "0803d7cd-8755-443a-8f23-9f3d1e98f1f4", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 638, "start_time": "2024-06-20T16:20:37.307Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_30", "variant_name": null}, {"function_name": "Fn_multiple_function_30", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_30\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function1\":\"3x+2\",\"function2\":\"2x+3\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_30_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the zero points of a function.\n  function_name: 'functions.zero' or null,\n  // Function given as a string with x as the variable, e.g. 3x+2\n  function: string,\n} or {\n  // Locate the intersection points of two functions.\n  function_name: 'functions.intersect' or null,\n  // First function given as a string with x as the variable, e.g. 3x+2\n  function1: string,\n  // Second function given as a string with x as the variable, e.g. 2x+3\n  function2: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the intersection points of the functions y=3x+2 and y=2x+3."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"functions.intersect\",\n  \"function1\": \"3x+2\",\n  \"function2\": \"2x+3\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 188, "output_tokens": 43, "total_tokens": 231, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0803d7cd-8755-443a-8f23-9f3d1e98f1f4", "event_id": "0803d7cd-8755-443a-8f23-9f3d1e98f1f4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 34188, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_30", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2a016bcd-1d0c-4dfd-bf9c-c056bbb94228", "event_id": "baab2b02-95d2-4581-8702-c1f4b24ef25a", "parent_event_id": "2a016bcd-1d0c-4dfd-bf9c-c056bbb94228", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 793, "start_time": "2024-06-20T16:20:37.946Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_31", "variant_name": null}, {"function_name": "Fn_multiple_function_31", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_31\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"length\":12,\"width\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_31_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the area of a rectangle with given length and width\n  function_name: 'rectangle.area' or null,\n  // Length of the rectangle\n  length: int,\n  // Width of the rectangle\n  width: int,\n} or {\n  // Calculate the area of a circle with given radius\n  function_name: 'circle.area' or null,\n  // Radius of the circle\n  radius: float,\n  // Whether the given length is the diameter of the circle, default is false\n  isDiameter: bool or null,\n} or {\n  // Calculate the area of a triangle with given base and height\n  function_name: 'triangle.area' or null,\n  // Base of the triangle\n  base: float,\n  // Height of the triangle\n  height: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the area of a rectangle with length 12 meters and width 5 meters?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"rectangle.area\",\n  \"length\": 12,\n  \"width\": 5\n}\n\nThe area of a rectangle with length 12 meters and width 5 meters is 60 square meters.", "metadata": {"logprobs": null, "prompt_tokens": 223, "output_tokens": 58, "total_tokens": 281, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2a016bcd-1d0c-4dfd-bf9c-c056bbb94228", "event_id": "2a016bcd-1d0c-4dfd-bf9c-c056bbb94228", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 34982, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_31", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4d268aa0-8b61-43a7-b586-dff9531e5fbb", "event_id": "3b83ce36-aba3-4362-8d16-ca89b0a6b2b0", "parent_event_id": "4d268aa0-8b61-43a7-b586-dff9531e5fbb", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1345, "start_time": "2024-06-20T16:20:38.740Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_32", "variant_name": null}, {"function_name": "Fn_multiple_function_32", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_32\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"width\":7,\"length\":10,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_32_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates the area and perimeter of a square given the side length.\n  function_name: 'geometry_square.calculate' or null,\n  // The length of a side of the square.\n  side: int,\n} or {\n  // Calculates the area and circumference of a circle given the radius.\n  function_name: 'geometry_circle.calculate' or null,\n  // The radius of the circle.\n  radius: int,\n} or {\n  // Calculates the area and perimeter of a rectangle given the width and length.\n  function_name: 'geometry_rectangle.calculate' or null,\n  // The width of the rectangle.\n  width: int,\n  // The length of the rectangle.\n  length: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the area and perimeter of a rectangle with width of 7 units and length of 10 units?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry_rectangle.calculate\",\n  \"width\": 7,\n  \"length\": 10\n}\n\nThe area and perimeter of a rectangle with a width of 7 units and a length of 10 units can be calculated as follows:\n\nArea = width * length\n= 7 * 10\n= 70 units^2\n\nPerimeter = 2 * (width + length)\n= 2 * (7 + 10)\n= 2 * 17\n= 34 units\n\nSo, the area of the rectangle is 70 units^2 and the perimeter is 34 units.", "metadata": {"logprobs": null, "prompt_tokens": 221, "output_tokens": 155, "total_tokens": 376, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4d268aa0-8b61-43a7-b586-dff9531e5fbb", "event_id": "4d268aa0-8b61-43a7-b586-dff9531e5fbb", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 36329, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_32", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e0c3cf07-179d-4ae7-a2db-25f7f418a153", "event_id": "ca7d6fd8-00fc-4490-b21b-69f0bbcff16a", "parent_event_id": "e0c3cf07-179d-4ae7-a2db-25f7f418a153", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T16:20:40.087Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_33", "variant_name": null}, {"function_name": "Fn_multiple_function_33", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_33\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":4,\"height\":7,\"meta\":\"Value\",\"round_off\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_33_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the volume of a cone given the radius and height.\n  function_name: 'geometry.calculate_cone_volume' or null,\n  // Radius of the cone base.\n  radius: int,\n  // Height of the cone.\n  height: int,\n  // Number of decimal places to round off the answer. Default 0\n  round_off: int or null,\n} or {\n  // Calculate the mass of a cone given the radius, height, and density.\n  function_name: 'physics.calculate_cone_mass' or null,\n  // Radius of the cone base.\n  radius: float,\n  // Height of the cone.\n  height: float,\n  // Density of the material the cone is made of.\n  density: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the volume of a cone with radius 4 and height 7."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.calculate_cone_volume\",\n  \"radius\": 4,\n  \"height\": 7,\n  \"round_off\": 0\n}", "metadata": {"logprobs": null, "prompt_tokens": 214, "output_tokens": 47, "total_tokens": 261, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e0c3cf07-179d-4ae7-a2db-25f7f418a153", "event_id": "e0c3cf07-179d-4ae7-a2db-25f7f418a153", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 37146, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_33", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7c429155-ab62-4e64-8988-226621b07904", "event_id": "5493cc64-fd9b-4d71-a7d7-b2929463612e", "parent_event_id": "7c429155-ab62-4e64-8988-226621b07904", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 820, "start_time": "2024-06-20T16:20:40.905Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_34", "variant_name": null}, {"function_name": "Fn_multiple_function_34", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_34\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"func\":\"3*x**2\",\"a\":1,\"b\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_34_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the derivative of a single-variable function.\n  function_name: 'calculate_derivative' or null,\n  // The function to be differentiated.\n  func: string,\n  // The x-value at which the derivative should be calculated.\n  x_value: int,\n  // The order of the derivative (optional). Default is 1st order. (default: 1)\n  order: int or null,\n} or {\n  // Calculate the definite integral of a single-variable function.\n  function_name: 'calculate_integral' or null,\n  // The function to be integrated.\n  func: string,\n  // The lower bound of the integration.\n  a: int,\n  // The upper bound of the integration.\n  b: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the integral of the function f(x) = 3x^2 from 1 to 2."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"calculate_integral\",\n  \"func\": \"3*x**2\",\n  \"a\": 1,\n  \"b\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 222, "output_tokens": 55, "total_tokens": 277, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7c429155-ab62-4e64-8988-226621b07904", "event_id": "7c429155-ab62-4e64-8988-226621b07904", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 37967, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_34", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8d5a8334-d5a8-4cec-b19c-a22b95fbf12f", "event_id": "980a1d0f-df47-48e9-a2d8-423b43df3b64", "parent_event_id": "8d5a8334-d5a8-4cec-b19c-a22b95fbf12f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T16:20:41.726Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_35", "variant_name": null}, {"function_name": "Fn_multiple_function_35", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_35\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":18,\"num2\":12,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_35_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates the greatest common divisor of two numbers.\n  function_name: 'math.gcd' or null,\n  // The first number.\n  num1: int,\n  // The second number.\n  num2: int,\n} or {\n  // Calculates the square root of a number.\n  function_name: 'math.sqrt' or null,\n  // The number.\n  num: float,\n  // The number of decimal places in the result. Default to 0\n  accuracy: int or null,\n} or {\n  // Calculates the least common multiple of two numbers.\n  function_name: 'math.lcm' or null,\n  // The first number.\n  num1: int,\n  // The second number.\n  num2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Least Common Multiple (LCM) of 18 and 12."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.lcm\",\n  \"num1\": 18,\n  \"num2\": 12\n}", "metadata": {"logprobs": null, "prompt_tokens": 225, "output_tokens": 46, "total_tokens": 271, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8d5a8334-d5a8-4cec-b19c-a22b95fbf12f", "event_id": "8d5a8334-d5a8-4cec-b19c-a22b95fbf12f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 38888, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_35", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4471f54e-ba34-47b7-b747-e5aed5476058", "event_id": "c11860ff-2bbd-4543-bcd3-9e7b1ac2d750", "parent_event_id": "4471f54e-ba34-47b7-b747-e5aed5476058", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1126, "start_time": "2024-06-20T16:20:42.647Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_36", "variant_name": null}, {"function_name": "Fn_multiple_function_36", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_36\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":128,\"num2\":256,\"meta\":\"Value\",\"algorithm\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_36_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the least common multiple (lcm) between two integers.\n  function_name: 'calculate_lcm' or null,\n  // First number to calculate lcm for.\n  num1: int,\n  // Second number to calculate lcm for.\n  num2: int,\n  // The specific method to use in the calculation. Supported values: 'standard', 'reduced'. Default 'standard'\n  method: string or null,\n} or {\n  // Calculate the greatest common divisor (gcd) between two integers.\n  function_name: 'calculate_gcd' or null,\n  // First number to calculate gcd for.\n  num1: int,\n  // Second number to calculate gcd for.\n  num2: int,\n  // The specific algorithm to use in the calculation. Supported values: 'euclidean', 'binary'. Default 'euclidean'\n  algorithm: 'euclidean' or 'binary' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the greatest common divisor between 128 and 256."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_gcd\",\n  \"num1\": 128,\n  \"num2\": 256,\n  \"algorithm\": \"euclidean\"\n}\n\nThe greatest common divisor (GCD) between 128 and 256 using the Euclidean algorithm is 128.", "metadata": {"logprobs": null, "prompt_tokens": 260, "output_tokens": 86, "total_tokens": 346, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4471f54e-ba34-47b7-b747-e5aed5476058", "event_id": "4471f54e-ba34-47b7-b747-e5aed5476058", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 40015, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_36", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a87a6557-fa6c-4d31-a0af-997481b649c1", "event_id": "d70f921f-a9c0-4bc7-931b-f339e1ada98b", "parent_event_id": "a87a6557-fa6c-4d31-a0af-997481b649c1", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2976, "start_time": "2024-06-20T16:20:43.774Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_37", "variant_name": null}, {"function_name": "Fn_multiple_function_37", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_37\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance\":20,\"time\":4,\"meta\":\"Value\",\"initial_speed\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_37_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates the acceleration of an object under given conditions.\n  function_name: 'kinematics.calculate_acceleration' or null,\n  // The initial speed of the object.\n  initial_speed: float,\n  // The final speed of the object.\n  final_speed: float,\n  // The time in seconds it took the object to reach the final speed.\n  time: float,\n  // The distance in meters the object has traveled.\n  distance: float or null,\n} or {\n  // Calculates the speed of an object that starts from rest under a constant acceleration over a specified distance.\n  function_name: 'kinematics.calculate_speed_from_rest' or null,\n  // The distance in meters the object has traveled.\n  distance: int,\n  // The time in seconds it took the object to travel.\n  time: int,\n  // The initial speed of the object.\n  initial_speed: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out how fast an object was going if it started from rest and traveled a distance of 20 meters over 4 seconds due to a constant acceleration?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the speed of an object that starts from rest and travels a distance of 20 meters over 4 seconds due to a constant acceleration, we can use the following schema:\n\n{\n  \"function_name\": \"kinematics.calculate_speed_from_rest\",\n  \"distance\": 20,\n  \"time\": 4,\n  \"initial_speed\": null\n}\n\nIn this schema, the \"function_name\" is set to \"kinematics.calculate_speed_from_rest\" because we are calculating the speed of an object that starts from rest and travels a distance under constant acceleration.\n\nThe \"distance\" is 20 meters, and the \"time\" is 4 seconds.\n\nThe \"initial_speed\" is set to null because the object starts from rest.\n\nTo calculate the final speed, we can use the kinematic equation:\n\nv = sqrt(2 * a * d)\n\nWhere:\n- v is the final speed\n- a is the acceleration\n- d is the distance traveled\n\nRearranging the equation to solve for the acceleration:\n\na = v^2 / (2 * d)\n\nSubstituting the known values:\n\na = (v^2) / (2 * 20)\nv = sqrt(2 * a * 20)\n\nSince the object starts from rest, the initial speed is 0 m/s. Therefore, the final speed can be calculated as:\n\nv = sqrt(2 * a * 20)\nv = sqrt(2 * (20 / 4^2) * 20)\nv = sqrt(10) = 3.16 m/s\n\nSo, the object was traveling at a speed of 3.16 m/s after 4 seconds of constant acceleration over a distance of 20 meters.", "metadata": {"logprobs": null, "prompt_tokens": 272, "output_tokens": 407, "total_tokens": 679, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a87a6557-fa6c-4d31-a0af-997481b649c1", "event_id": "a87a6557-fa6c-4d31-a0af-997481b649c1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 42992, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_37", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c749a539-daaa-46df-ada3-8d887eb11f3f", "event_id": "fcca4458-d851-4fd2-9d4e-d97c97f6e8ff", "parent_event_id": "c749a539-daaa-46df-ada3-8d887eb11f3f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2091, "start_time": "2024-06-20T16:20:46.751Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_38", "variant_name": null}, {"function_name": "Fn_multiple_function_38", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_38\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":40,\"time\":6,\"meta\":\"Value\",\"acceleration\":-9.81}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_38_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the velocity of a wave based on its frequency and wavelength.\n  function_name: 'physics.wave_velocity' or null,\n  // The frequency of the wave in Hz.\n  frequency: float,\n  // The wavelength of the wave in m.\n  wavelength: float,\n} or {\n  // Find the final velocity of an object moving under constant acceleration.\n  function_name: 'kinematics.final_velocity' or null,\n  // The initial velocity of the object in m/s.\n  initial_velocity: int,\n  // The time in seconds the object has been moving.\n  time: int,\n  // The acceleration of the object in m/s^2. Default value is -9.81 (Earth's gravity)\n  acceleration: float or null,\n} or {\n  // Find the distance traveled by an object moving under constant acceleration.\n  function_name: 'kinematics.distance' or null,\n  // The initial velocity of the object in m/s.\n  initial_velocity: float,\n  // The time in seconds the object has been moving.\n  time: int,\n  // The acceleration of the object in m/s^2. Default value is -9.81 (Earth's gravity)\n  acceleration: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the final velocity of an object thrown up at 40 m/s after 6 seconds."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the final velocity of an object thrown up at 40 m/s after 6 seconds, we can use the kinematics formula for final velocity:\n\nv = u + at\n\nwhere:\n- v is the final velocity (what we want to find)\n- u is the initial velocity (40 m/s)\n- a is the acceleration (in this case, the acceleration due to gravity, which is -9.81 m/s^2)\n- t is the time (6 seconds)\n\nPlugging in the values:\n\nv = u + at\nv = 40 + (-9.81 * 6)\nv = 40 + (-58.86)\nv = -18.86 m/s\n\nTherefore, the final velocity of the object thrown up at 40 m/s after 6 seconds is -18.86 m/s.\n\nThe answer in the requested schema would be:\n\n{\n  \"function_name\": \"kinematics.final_velocity\",\n  \"initial_velocity\": 40,\n  \"time\": 6,\n  \"acceleration\": -9.81\n}", "metadata": {"logprobs": null, "prompt_tokens": 337, "output_tokens": 259, "total_tokens": 596, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c749a539-daaa-46df-ada3-8d887eb11f3f", "event_id": "c749a539-daaa-46df-ada3-8d887eb11f3f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 45084, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_38", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cb13c576-52ca-4cac-897b-01e2bd7b540f", "event_id": "b9d94c03-6f0b-45f9-9205-ce8b232b2e21", "parent_event_id": "cb13c576-52ca-4cac-897b-01e2bd7b540f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1274, "start_time": "2024-06-20T16:20:48.843Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_39", "variant_name": null}, {"function_name": "Fn_multiple_function_39", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_39\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"book_name\":\"The Alchemist\",\"city\":\"New York\",\"meta\":\"Value\",\"availability\":false,\"genre\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_39_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Reserves a book in the library if available.\n  function_name: 'library.reserve_book' or null,\n  // The id of the book to reserve.\n  book_id: string,\n  // The id of the library branch to reserve from.\n  branch_id: string,\n  // The date the book is to be returned (optional). Default is ''\n  return_date: string or null,\n} or {\n  // Searches for a book in the library within the specified city.\n  function_name: 'library.search_book' or null,\n  // The name of the book to search for.\n  book_name: string,\n  // The city to search within.\n  city: string,\n  // If true, search for available copies. If false or omitted, search for any copy regardless of availability. Default is false\n  availability: bool or null,\n  // The genre of the book to filter search (optional). Default is ''\n  genre: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a book 'The Alchemist' in the library branches within New York city."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema-based answer for the given question:\n\n{\n  \"function_name\": \"library.search_book\",\n  \"book_name\": \"The Alchemist\",\n  \"city\": \"New York\",\n  \"availability\": false,\n  \"genre\": null\n}\n\nThis query will search for the book \"The Alchemist\" in the library branches located within the city of New York, regardless of the book's availability status.", "metadata": {"logprobs": null, "prompt_tokens": 267, "output_tokens": 104, "total_tokens": 371, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cb13c576-52ca-4cac-897b-01e2bd7b540f", "event_id": "cb13c576-52ca-4cac-897b-01e2bd7b540f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 46360, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_39", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f4e2df9f-cca0-4495-8ddc-6c6521bdffa1", "event_id": "bdf3bbe2-f3de-4c79-82fe-9199f1dcc469", "parent_event_id": "f4e2df9f-cca0-4495-8ddc-6c6521bdffa1", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 653, "start_time": "2024-06-20T16:20:50.119Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_40", "variant_name": null}, {"function_name": "Fn_multiple_function_40", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_40\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"source\":\"New York\",\"destination\":\"Philadelphia\",\"meta\":\"Value\",\"max_cost\":50}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_40_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Order grocery items from a specific location with optional delivery price limit\n  function_name: 'grocery_delivery.order' or null,\n  // The location of the grocery store\n  location: string,\n  // List of items to order\n  items: string[],\n  // The maximum delivery cost. It is optional. Default 1000000\n  max_delivery_cost: float or null,\n} or {\n  // Find ride from source to destination with an optional cost limit\n  function_name: 'ride_hailing.get_rides' or null,\n  // The starting point of the journey\n  source: string,\n  // The endpoint of the journey\n  destination: string,\n  // The maximum cost of the ride. It is optional. Default is 1000000\n  max_cost: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a ride from New York to Philadelphia with maximum cost of $50"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"ride_hailing.get_rides\",\n  \"source\": \"New York\",\n  \"destination\": \"Philadelphia\",\n  \"max_cost\": 50\n}", "metadata": {"logprobs": null, "prompt_tokens": 219, "output_tokens": 49, "total_tokens": 268, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f4e2df9f-cca0-4495-8ddc-6c6521bdffa1", "event_id": "f4e2df9f-cca0-4495-8ddc-6c6521bdffa1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 47015, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_40", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1cc13a00-c76d-40d1-b967-81cb309ad033", "event_id": "5dbcbbc6-d579-4b19-876d-822c78c5d28f", "parent_event_id": "1cc13a00-c76d-40d1-b967-81cb309ad033", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2363, "start_time": "2024-06-20T16:20:50.774Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_41", "variant_name": null}, {"function_name": "Fn_multiple_function_41", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_41\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"current\":12,\"distance\":8,\"meta\":\"Value\",\"mu0\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_41_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate magnetic field strength using Ampere's Circuital Law. Input the current enclosed by a circular path and the distance from the center of the circle. Can be applied to a cylindrical or spherical symmetry of consistent magnetic field. \n  function_name: 'electromagnetism.ampere_law' or null,\n  // The total current enclosed by the loop. In Amperes.\n  enclosed_current: float,\n  // The radius of the circle or the distance from the center of the circular path. In meters.\n  radius: float,\n  // Permeability of free space. Its value is default approximated to be 0.000001256 H/m. Optional\n  mu0: float or null,\n} or {\n  // Calculate magnetic field strength using Biot-Savart law. Input the current in Ampere and the distance in meters.\n  function_name: 'electromagnetism.biot_savart_law' or null,\n  // The current in the conductor, in Amperes.\n  current: int,\n  // Distance from the current carrying conductor, in meters.\n  distance: int,\n  // Permeability of free space. Its value is default approximated to be 0.000001256 H/m. Optional\n  mu0: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the strength of magnetic field given distance is 8 meters and current is 12 Amperes?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the strength of the magnetic field given the distance and current, we can use the Biot-Savart law.\n\n{\n  \"function_name\": \"electromagnetism.biot_savart_law\",\n  \"current\": 12,\n  \"distance\": 8,\n  \"mu0\": null\n}\n\nThe formula for the Biot-Savart law is:\n\nB = (\u03bc0 * I) / (2 * \u03c0 * r)\n\nWhere:\n- B is the magnetic field strength (in Teslas)\n- \u03bc0 is the permeability of free space (approximately 4\u03c0 \u00d7 10^-7 H/m)\n- I is the current (in Amperes)\n- r is the distance from the current-carrying conductor (in meters)\n\nPlugging in the values:\n- Current (I) = 12 A\n- Distance (r) = 8 m\n- \u03bc0 = 4\u03c0 \u00d7 10^-7 H/m\n\nB = (4\u03c0 \u00d7 10^-7 H/m \u00d7 12 A) / (2 \u00d7 \u03c0 \u00d7 8 m)\nB = 1.5 \u00d7 10^-7 T\n\nTherefore, the strength of the magnetic field at a distance of 8 meters from a current of 12 Amperes is approximately 1.5 \u00d7 10^-7 Teslas.", "metadata": {"logprobs": null, "prompt_tokens": 342, "output_tokens": 332, "total_tokens": 674, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1cc13a00-c76d-40d1-b967-81cb309ad033", "event_id": "1cc13a00-c76d-40d1-b967-81cb309ad033", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 49380, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_41", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ccb24235-26e3-411c-97b1-4338081bae7b", "event_id": "c75d621f-7d7c-4b99-acd7-b4532a022960", "parent_event_id": "ccb24235-26e3-411c-97b1-4338081bae7b", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 672, "start_time": "2024-06-20T16:20:53.139Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_42", "variant_name": null}, {"function_name": "Fn_multiple_function_42", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_42\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"I\":10,\"r\":0.01,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_42_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the electric field based on the amount of charge and distance from the charge\n  function_name: 'electric_field.calculate' or null,\n  // The amount of charge in coulombs.\n  Q: float,\n  // The distance from the charge in meters.\n  r: float,\n} or {\n  // Calculate the magnetic field based on the current flowing and the radial distance using Ampere\u2019s law\n  function_name: 'magnetic_field.calculate' or null,\n  // The electric current flowing in Amperes.\n  I: int,\n  // The radial distance from the line of current in meters.\n  r: float,\n} or {\n  // Calculate the electric force between two charges at a distance\n  function_name: 'electric_force.calculate' or null,\n  // The amount of the first charge in coulombs.\n  Q1: float,\n  // The amount of the second charge in coulombs.\n  Q2: float,\n  // The distance between the two charges in meters.\n  r: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the magnetic field at point P using Ampere\u2019s law where current I is 10 Amperes and r is 0.01 meter."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"magnetic_field.calculate\",\n  \"I\": 10,\n  \"r\": 0.01\n}", "metadata": {"logprobs": null, "prompt_tokens": 297, "output_tokens": 37, "total_tokens": 334, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ccb24235-26e3-411c-97b1-4338081bae7b", "event_id": "ccb24235-26e3-411c-97b1-4338081bae7b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 50054, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_42", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "41f199d9-9256-4708-a4d3-925a240320a9", "event_id": "4832cbe7-53ae-410d-8c01-ca8b5a5ae417", "parent_event_id": "41f199d9-9256-4708-a4d3-925a240320a9", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1622, "start_time": "2024-06-20T16:20:53.813Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_43", "variant_name": null}, {"function_name": "Fn_multiple_function_43", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_43\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"quantity1\":2,\"temperature1\":300,\"quantity2\":3,\"temperature2\":400,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_43_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the final temperature when different quantities of the same gas at different temperatures are mixed.\n  function_name: 'calculate_final_temperature' or null,\n  // The quantity of the first sample of gas.\n  quantity1: int,\n  // The temperature of the first sample of gas.\n  temperature1: int,\n  // The quantity of the second sample of gas.\n  quantity2: int,\n  // The temperature of the second sample of gas.\n  temperature2: int,\n} or {\n  // Calculate the mass of a gas given its quantity and molar mass.\n  function_name: 'calculate_mass' or null,\n  // The quantity of the gas.\n  quantity: int,\n  // The molar mass of the gas.\n  molar_mass: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final temperature when 2 moles of gas at 300 K are mixed with 3 moles of the same gas at 400 K."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_final_temperature\",\n  \"quantity1\": 2,\n  \"temperature1\": 300,\n  \"quantity2\": 3,\n  \"temperature2\": 400\n}\n\nTo calculate the final temperature when two samples of the same gas at different temperatures are mixed, we can use the formula:\n\n(quantity1 \u00d7 temperature1 + quantity2 \u00d7 temperature2) / (quantity1 + quantity2) = final_temperature\n\nPlugging in the values given in the question:\n\n(2 \u00d7 300 + 3 \u00d7 400) / (2 + 3) = 360 K\n\nSo the final temperature when 2 moles of gas at 300 K are mixed with 3 moles of the same gas at 400 K is 360 K.", "metadata": {"logprobs": null, "prompt_tokens": 236, "output_tokens": 192, "total_tokens": 428, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "41f199d9-9256-4708-a4d3-925a240320a9", "event_id": "41f199d9-9256-4708-a4d3-925a240320a9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 51678, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_43", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2dfd883c-b5b2-494c-96f1-89c8fb3dd881", "event_id": "7f99e42b-7dff-4250-a369-adf65a0a4d72", "parent_event_id": "2dfd883c-b5b2-494c-96f1-89c8fb3dd881", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2366, "start_time": "2024-06-20T16:20:55.437Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_44", "variant_name": null}, {"function_name": "Fn_multiple_function_44", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_44\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mols\":5,\"substance\":\"C6H12O6\",\"meta\":\"Value\",\"joules_per_mol\":2800}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_44_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the biomass from the energy given the energy conversion efficiency.\n  function_name: 'biological.calc_biomass' or null,\n  // The total energy produced.\n  energy: float,\n  // The conversion efficiency, default value is 10%. (default: 0.1)\n  efficiency: float or null,\n} or {\n  // Calculate energy from amount of substance based on its molecular composition.\n  function_name: 'biological.calc_energy' or null,\n  // Amount of substance in moles.\n  mols: int,\n  // The chemical formula of the substance.\n  substance: string,\n  // The energy produced or required for the reaction, default value for glucose is 2800 kJ/mol (default: 2800)\n  joules_per_mol: int or null,\n} or {\n  // Calculate the work from energy.\n  function_name: 'physical.calc_work' or null,\n  // The total energy produced.\n  energy: float,\n  // The distance over which the work is done.\n  distance: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the energy produced by 5 mol of glucose (C6H12O6)?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the energy produced by 5 mol of glucose (C6H12O6), we can use the following schema:\n\n{\n  \"function_name\": \"biological.calc_energy\",\n  \"mols\": 5,\n  \"substance\": \"C6H12O6\",\n  \"joules_per_mol\": 2800\n}\n\nExplanation:\n- The \"function_name\" is set to \"biological.calc_energy\" to indicate that we want to calculate the energy from the amount of substance (in this case, glucose).\n- The \"mols\" field is set to 5, which represents the amount of glucose in moles.\n- The \"substance\" field is set to \"C6H12O6\", which is the chemical formula for glucose.\n- The \"joules_per_mol\" field is set to the default value of 2800 kJ/mol, which is the energy produced per mole of glucose.\n\nTo calculate the total energy produced, we can multiply the number of moles (5) by the energy produced per mole (2800 kJ/mol):\n\nTotal energy = 5 mol \u00d7 2800 kJ/mol = 14,000 kJ\n\nTherefore, the energy produced by 5 mol of glucose (C6H12O6) is 14,000 kJ.", "metadata": {"logprobs": null, "prompt_tokens": 290, "output_tokens": 305, "total_tokens": 595, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2dfd883c-b5b2-494c-96f1-89c8fb3dd881", "event_id": "2dfd883c-b5b2-494c-96f1-89c8fb3dd881", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 54046, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_44", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4b922a4e-a34a-4d9c-b258-6f4b5d2dd4fe", "event_id": "1d0e9b92-af96-4758-8ef3-1c346f6b8ddd", "parent_event_id": "4b922a4e-a34a-4d9c-b258-6f4b5d2dd4fe", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 773, "start_time": "2024-06-20T16:20:57.805Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_45", "variant_name": null}, {"function_name": "Fn_multiple_function_45", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_45\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight_earth_kg\":70,\"planet\":\"Mars\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_45_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Convert a value from one unit to another.\n  function_name: 'unit_conversion.convert' or null,\n  // The value to be converted.\n  value: float,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n} or {\n  // Convert a value from one currency to another.\n  function_name: 'currency_conversion' or null,\n  // The amount to be converted.\n  amount: float,\n  // The currency to convert from.\n  from_currency: string,\n  // The currency to convert to.\n  to_currency: string,\n} or {\n  // Calculate your weight on different planets given your weight on earth\n  function_name: 'calculate.weight_in_space' or null,\n  // Your weight on Earth in Kilograms.\n  weight_earth_kg: int,\n  // The planet you want to know your weight on.\n  planet: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much will I weigh on Mars if my weight on Earth is 70 kg?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate.weight_in_space\",\n  \"weight_earth_kg\": 70,\n  \"planet\": \"Mars\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 273, "output_tokens": 52, "total_tokens": 325, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4b922a4e-a34a-4d9c-b258-6f4b5d2dd4fe", "event_id": "4b922a4e-a34a-4d9c-b258-6f4b5d2dd4fe", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 54821, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_45", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "be9bcb9b-9f82-4d7d-b8a9-d54637067e7f", "event_id": "a3929b16-b9c2-4400-acaf-70aea448788a", "parent_event_id": "be9bcb9b-9f82-4d7d-b8a9-d54637067e7f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 668, "start_time": "2024-06-20T16:20:58.579Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_46", "variant_name": null}, {"function_name": "Fn_multiple_function_46", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_46\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"era_name\":\"Ice age\",\"meta\":\"Value\",\"calculate_years_ago\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_46_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get the estimated date of a geological era.\n  function_name: 'geology.get_era' or null,\n  // The name of the geological era. e.g Ice age\n  era_name: string,\n  // True if years ago is to be calculated. False by default\n  calculate_years_ago: bool or null,\n} or {\n  // Get the date of an historical event.\n  function_name: 'history.get_event_date' or null,\n  // The name of the event.\n  event_name: string,\n  // True if years ago is to be calculated. False by default\n  calculate_years_ago: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate how many years ago was the Ice age?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"geology.get_era\",\n  \"era_name\": \"Ice age\",\n  \"calculate_years_ago\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 184, "output_tokens": 51, "total_tokens": 235, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "be9bcb9b-9f82-4d7d-b8a9-d54637067e7f", "event_id": "be9bcb9b-9f82-4d7d-b8a9-d54637067e7f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 55490, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_46", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4edba174-14f7-4fa3-b956-c2d33090c9fa", "event_id": "e17fcc62-b7b2-4578-a607-f21e8cd80ed9", "parent_event_id": "4edba174-14f7-4fa3-b956-c2d33090c9fa", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 617, "start_time": "2024-06-20T16:20:59.249Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_47", "variant_name": null}, {"function_name": "Fn_multiple_function_47", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_47\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"elements\":[\"Sam\",\"Alice\",\"Jack\"],\"meta\":\"Value\",\"order\":\"asc\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_47_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Filters elements of a list based on a given condition\n  function_name: 'filter_list' or null,\n  // The list of elements to filter.\n  elements: string[],\n  // The condition to filter the elements on.\n  condition: string,\n} or {\n  // Add all elements of a numeric list\n  function_name: 'sum_elements' or null,\n  // The list of numeric elements to add.\n  elements: int[],\n} or {\n  // Sort the elements of a list in ascending or descending order\n  function_name: 'sort_list' or null,\n  // The list of elements to sort.\n  elements: string[],\n  // The order in which to sort the elements. This can be 'asc' for ascending order, or 'desc' for descending order. (default: asc)\n  order: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Sort this list of names in ascending order: ['Sam', 'Alice', 'Jack']"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sort_list\",\n  \"elements\": [\"Sam\", \"Alice\", \"Jack\"],\n  \"order\": \"asc\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 246, "output_tokens": 41, "total_tokens": 287, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4edba174-14f7-4fa3-b956-c2d33090c9fa", "event_id": "4edba174-14f7-4fa3-b956-c2d33090c9fa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 56109, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_47", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b0498db1-1d53-4933-987d-96c5a22c86af", "event_id": "ba29fb02-f356-4fdc-b921-cdc85c43fad2", "parent_event_id": "b0498db1-1d53-4933-987d-96c5a22c86af", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 668, "start_time": "2024-06-20T16:20:59.868Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_48", "variant_name": null}, {"function_name": "Fn_multiple_function_48", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_48\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"vector1\":[3,2,1],\"vector2\":[1,2,3],\"meta\":\"Value\",\"rounding\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_48_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the cosine similarity between two vectors.\n  function_name: 'cosine_similarity.calculate' or null,\n  // The first vector for calculating cosine similarity.\n  vector1: int[],\n  // The second vector for calculating cosine similarity.\n  vector2: int[],\n  // Optional: The number of decimals to round off the result. Default 0\n  rounding: int or null,\n} or {\n  // Calculate the correlation coefficient between two arrays of numbers.\n  function_name: 'correlation.calculate' or null,\n  // The first array of numbers.\n  array1: int[],\n  // The second array of numbers.\n  array2: int[],\n  // Optional: The type of correlation coefficient to calculate. Default is 'pearson'.\n  type: 'pearson' or 'spearman' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the cosine similarity between vector A [3, 2, 1] and vector B [1, 2, 3]."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"cosine_similarity.calculate\",\n  \"vector1\": [3, 2, 1],\n  \"vector2\": [1, 2, 3],\n  \"rounding\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 249, "output_tokens": 69, "total_tokens": 318, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b0498db1-1d53-4933-987d-96c5a22c86af", "event_id": "b0498db1-1d53-4933-987d-96c5a22c86af", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 56778, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_48", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b7247987-97aa-47c0-9dbc-d64ee73a3b6e", "event_id": "8813f0f3-604a-41df-ad57-02c2d7e9c64a", "parent_event_id": "b7247987-97aa-47c0-9dbc-d64ee73a3b6e", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 644, "start_time": "2024-06-20T16:21:00.537Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_49", "variant_name": null}, {"function_name": "Fn_multiple_function_49", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_49\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York City, NY\",\"preferences\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_49_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby stores based on specific preferences such as being pet-friendly and having disabled access facilities.\n  function_name: 'store.find_nearby' or null,\n  // The city, for example, New York City, NY\n  location: string,\n  // Your preferences for the store.\n  preferences: [\n    'Pet-friendly' or 'Disabled Access' or '24 hours' or 'Cafe Inside'\n  ],\n} or {\n  // Locate nearby libraries based on specific preferences such as being pet-friendly and having disabled access facilities.\n  function_name: 'library.find_nearby' or null,\n  // The city, for example, New York City, NY\n  location: string,\n  // Your preferences for the library.\n  preferences: [\n    'Pet-friendly' or 'Disabled Access' or '24 hours' or 'Cafe Inside'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a pet-friendly library with facilities for disabled people in New York City."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"library.find_nearby\",\n  \"location\": \"New York City, NY\",\n  \"preferences\": [\n    \"Pet-friendly\",\n    \"Disabled Access\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 246, "output_tokens": 55, "total_tokens": 301, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b7247987-97aa-47c0-9dbc-d64ee73a3b6e", "event_id": "b7247987-97aa-47c0-9dbc-d64ee73a3b6e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 57423, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_49", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "61dd7b17-b6b7-4c98-b38e-311ed0dce6d9", "event_id": "7d3fe83d-2dc5-4720-8abf-23246d7d9ace", "parent_event_id": "61dd7b17-b6b7-4c98-b38e-311ed0dce6d9", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2660, "start_time": "2024-06-20T16:21:01.182Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_50", "variant_name": null}, {"function_name": "Fn_multiple_function_50", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_50\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principle_amount\":1500,\"duration\":2,\"annual_rate\":2.5,\"meta\":\"Value\",\"compound_freq\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_50_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Compute compound interest.\n  function_name: 'calc_Compound_Interest' or null,\n  // The principle amount that is invested.\n  principle_amount: int,\n  // Duration of time period in years.\n  duration: int,\n  // Interest rate in percentage.\n  annual_rate: float,\n  // The number of times that interest is compounded per unit time. (default: 1)\n  compound_freq: int or null,\n} or {\n  // Calculates the future value of an investment given an interest rate and time period.\n  function_name: 'future_value' or null,\n  // The initial investment amount.\n  initial_investment: float,\n  // The annual interest rate (as a decimal).\n  interest_rate: float,\n  // The number of time periods the money is invested for.\n  time: int,\n  // The number of times that interest is compounded per time period. (default: 1)\n  num_compoundings: int or null,\n} or {\n  // Compute simple interest.\n  function_name: 'calc_Simple_Interest' or null,\n  // The principle amount that is invested.\n  principle_amount: float,\n  // Duration of time period in years.\n  duration: float,\n  // Interest rate in percentage.\n  annual_rate: float,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the compound interest for an amount of 1500 for a duration of 2 years with an annual interest rate of 2.5%."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calc_Compound_Interest\",\n  \"principle_amount\": 1500,\n  \"duration\": 2,\n  \"annual_rate\": 2.5,\n  \"compound_freq\": 1\n}\n\nTo calculate the compound interest for the given scenario:\n\nPrinciple amount (P) = $1500\nTime period (t) = 2 years\nAnnual interest rate (r) = 2.5% or 0.025\nCompounding frequency (n) = 1 (annual)\n\nThe formula for compound interest is:\nA = P(1 + r/n)^(n*t)\n\nWhere:\nA = Final amount (principal + interest)\nP = Principal amount\nr = Annual interest rate\nn = Number of times interest is compounded per year\nt = Time period in years\n\nPlugging in the values:\nA = 1500 * (1 + 0.025/1)^(1*2)\nA = 1500 * (1.025)^2\nA = 1500 * 1.050625\nA = $1,575.94\n\nTherefore, the compound interest earned over the 2-year period is $1,575.94 - $1,500 = $75.94.", "metadata": {"logprobs": null, "prompt_tokens": 364, "output_tokens": 300, "total_tokens": 664, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "61dd7b17-b6b7-4c98-b38e-311ed0dce6d9", "event_id": "61dd7b17-b6b7-4c98-b38e-311ed0dce6d9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 60085, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_50", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "40bd3d9b-a7ef-4706-ab15-7013bbc07dff", "event_id": "98463ba3-94ac-4e3e-9a02-225b9740dbd9", "parent_event_id": "40bd3d9b-a7ef-4706-ab15-7013bbc07dff", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1468, "start_time": "2024-06-20T16:21:03.843Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_51", "variant_name": null}, {"function_name": "Fn_multiple_function_51", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_51\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"months\":1,\"features\":[],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_51_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Predict the house prices for a specific location and time frame.\n  function_name: 'house_price_forecast' or null,\n  // The city that you want to get the house price prediction for.\n  location: string,\n  // Number of future months for the prediction.\n  months: int,\n  // Additional features considered for prediction. Not required. Default empty array\n  features: [\n    'SqFt' or 'Bedrooms' or 'Bathrooms' or 'Location'\n  ],\n} or {\n  // Retrieve a weather forecast for a specific location and time frame.\n  function_name: 'weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n} or {\n  // Predict the stock prices for a specific company and time frame.\n  function_name: 'stock_market_forecast' or null,\n  // The company that you want to get the stock price prediction for.\n  company: string,\n  // Number of future days for the prediction.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the house prices for the next month in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the schema:\n\n{\n  \"function_name\": \"house_price_forecast\",\n  \"location\": \"New York\",\n  \"months\": 1,\n  \"features\": []\n}\n\nThis request is asking to predict the house prices for the next month in New York city. The function_name is set to \"house_price_forecast\" to indicate that this is a request for a house price prediction. The location is set to \"New York\" and the number of months for the prediction is 1, indicating the next month. The features array is left empty, as no additional features are provided in the question.", "metadata": {"logprobs": null, "prompt_tokens": 299, "output_tokens": 141, "total_tokens": 440, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "40bd3d9b-a7ef-4706-ab15-7013bbc07dff", "event_id": "40bd3d9b-a7ef-4706-ab15-7013bbc07dff", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 61554, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_51", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3e71e104-df89-4b91-a627-edb7acab87a0", "event_id": "18687f4f-7444-4601-844f-1371eac16b00", "parent_event_id": "3e71e104-df89-4b91-a627-edb7acab87a0", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 987, "start_time": "2024-06-20T16:21:05.313Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_52", "variant_name": null}, {"function_name": "Fn_multiple_function_52", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_52\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"desired_sum\":7,\"sides_per_die\":6,\"meta\":\"Value\",\"n_rolls\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_52_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the probability of a specific sum appearing from rolling two dice.\n  function_name: 'dice_roll_probability' or null,\n  // The sum for which to calculate the probability.\n  desired_sum: int,\n  // Number of dice to be rolled. Default is 1\n  n_rolls: int or null,\n  // Number of sides on each die.\n  sides_per_die: int,\n} or {\n  // Calculate the probability of a specific outcome appearing from flipping a coin.\n  function_name: 'flip_coin_probability' or null,\n  // The outcome for which to calculate the probability.\n  desired_outcome: string,\n  // Number of coins to be flipped. Default 1\n  n_flips: int or null,\n} or {\n  // Calculate the probability of a specific card appearing from a shuffled deck.\n  function_name: 'shuffle_card_probability' or null,\n  // The card for which to calculate the probability.\n  desired_card: string,\n  // Number of decks to shuffle. Default 1\n  n_decks: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the probability of rolling a sum of 7 on a roll of two dice."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"dice_roll_probability\",\n  \"desired_sum\": 7,\n  \"n_rolls\": 2,\n  \"sides_per_die\": 6\n}", "metadata": {"logprobs": null, "prompt_tokens": 297, "output_tokens": 61, "total_tokens": 358, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3e71e104-df89-4b91-a627-edb7acab87a0", "event_id": "3e71e104-df89-4b91-a627-edb7acab87a0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 62543, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_52", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "615fd337-8d3f-4135-86a2-8ffd2ef9e742", "event_id": "4ea93c47-c85e-42c1-960a-54aa15d8405f", "parent_event_id": "615fd337-8d3f-4135-86a2-8ffd2ef9e742", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 733, "start_time": "2024-06-20T16:21:06.301Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_53", "variant_name": null}, {"function_name": "Fn_multiple_function_53", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_53\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"amount\":100,\"from_currency\":\"EUR\",\"to_currency\":\"USD\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_53_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Convert a value from one unit to another.\n  function_name: 'unit_conversion' or null,\n  // The value to be converted.\n  value: float,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n} or {\n  // Convert a value from one currency to another.\n  function_name: 'currency_conversion' or null,\n  // The amount to be converted.\n  amount: int,\n  // The currency to convert from.\n  from_currency: string,\n  // The currency to convert to.\n  to_currency: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: I have 100 euro. How much is it in USD?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"currency_conversion\",\n  \"amount\": 100,\n  \"from_currency\": \"EUR\",\n  \"to_currency\": \"USD\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 187, "output_tokens": 46, "total_tokens": 233, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "615fd337-8d3f-4135-86a2-8ffd2ef9e742", "event_id": "615fd337-8d3f-4135-86a2-8ffd2ef9e742", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 63277, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_53", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1d1c1f4e-29ff-4694-99bb-1a2219b3c352", "event_id": "75f3e357-35f3-466b-b135-c9cbc9a5f6fc", "parent_event_id": "1d1c1f4e-29ff-4694-99bb-1a2219b3c352", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 952, "start_time": "2024-06-20T16:21:07.036Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_54", "variant_name": null}, {"function_name": "Fn_multiple_function_54", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_54\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"independent_var\":[\"interest_rates\",\"unemployment_rates\"],\"dependent_var\":\"house_prices\",\"meta\":\"Value\",\"forecast_period\":5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_54_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Applies linear regression to a given set of independent variables to make a prediction.\n  function_name: 'linear_regression' or null,\n  // The independent variables.\n  independent_var: string[],\n  // The dependent variable.\n  dependent_var: string,\n  // The number of years to forecast the prices. Default 1\n  forecast_period: int or null,\n} or {\n  // Applies Random Forest Regression to a given set of independent variables to make a prediction.\n  function_name: 'random_forest_regression' or null,\n  // The independent variables.\n  independent_var: string[],\n  // The dependent variable.\n  dependent_var: string,\n  // The number of trees in the forest. Default 1\n  n_estimators: int or null,\n  // The number of years to forecast the prices. Default 1\n  forecast_period: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the house prices for next 5 years based on interest rates and unemployment rates."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"linear_regression\",\n  \"independent_var\": [\"interest_rates\", \"unemployment_rates\"],\n  \"dependent_var\": \"house_prices\",\n  \"forecast_period\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 249, "output_tokens": 56, "total_tokens": 305, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1d1c1f4e-29ff-4694-99bb-1a2219b3c352", "event_id": "1d1c1f4e-29ff-4694-99bb-1a2219b3c352", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 64231, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_54", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "097bb9fe-c90c-4bfa-9dd4-9d7898ddd405", "event_id": "2ec5ffd8-20d9-42b2-b3cd-19edf17bf2b6", "parent_event_id": "097bb9fe-c90c-4bfa-9dd4-9d7898ddd405", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 869, "start_time": "2024-06-20T16:21:07.990Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_55", "variant_name": null}, {"function_name": "Fn_multiple_function_55", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_55\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Apple Inc\",\"years\":5,\"meta\":\"Value\",\"frequency\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_55_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get historical dividend data of a specific company within a particular duration.\n  function_name: 'corporate_finance.dividend_data' or null,\n  // The company that you want to get the dividend data for.\n  company: string,\n  // Number of past years for which to retrieve the data.\n  years: int,\n  // The frequency of the dividend payment. Default annually\n  frequency: 'quarterly' or 'annually' or null,\n} or {\n  // Retrieve stock market data for a specific company and time frame.\n  function_name: 'stock_market_data' or null,\n  // The company that you want to get the stock market data for.\n  company: string,\n  // Number of past days for which to retrieve the data.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find out the historical dividend payments of Apple Inc for last five years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"corporate_finance.dividend_data\",\n  \"company\": \"Apple Inc\",\n  \"years\": 5,\n  \"frequency\": \"annually\"\n}\n\nThis will retrieve the historical dividend data for Apple Inc. for the last 5 years, with the dividend payment frequency being on an annual basis.", "metadata": {"logprobs": null, "prompt_tokens": 214, "output_tokens": 88, "total_tokens": 302, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "097bb9fe-c90c-4bfa-9dd4-9d7898ddd405", "event_id": "097bb9fe-c90c-4bfa-9dd4-9d7898ddd405", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 65102, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_55", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "af9077f5-50b8-429d-9bd3-e819ded8e3e6", "event_id": "bb485cb5-8345-485b-ba8a-403e87fe88c4", "parent_event_id": "af9077f5-50b8-429d-9bd3-e819ded8e3e6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T16:21:08.861Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_56", "variant_name": null}, {"function_name": "Fn_multiple_function_56", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_56\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Google\",\"days\":3,\"meta\":\"Value\",\"model\":\"regression\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_56_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Predict the future stock price for a specific company and time frame.\n  function_name: 'stock_forecast' or null,\n  // The company that you want to get the stock price prediction for.\n  company: string,\n  // Number of future days for which to predict the stock price.\n  days: int,\n  // The model to use for prediction. Default 'regression'\n  model: string or null,\n} or {\n  // Retrieve a weather forecast for a specific location and time frame.\n  function_name: 'weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the stock price for Google for the next 3 days."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"stock_forecast\",\n  \"company\": \"Google\",\n  \"days\": 3,\n  \"model\": \"regression\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 201, "output_tokens": 52, "total_tokens": 253, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "af9077f5-50b8-429d-9bd3-e819ded8e3e6", "event_id": "af9077f5-50b8-429d-9bd3-e819ded8e3e6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 65820, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_56", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e55f7160-3589-41ef-80cc-1d822ac2f391", "event_id": "186b6e79-5de3-4b9c-81d6-fea9eaba2f61", "parent_event_id": "e55f7160-3589-41ef-80cc-1d822ac2f391", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 808, "start_time": "2024-06-20T16:21:09.579Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_57", "variant_name": null}, {"function_name": "Fn_multiple_function_57", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_57\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Apple\",\"days\":60,\"meta\":\"Value\",\"data_source\":\"yahoo finance\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_57_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the total volume of stocks traded over a certain period of time\n  function_name: 'volume_traded' or null,\n  // Name of the company to get data for\n  company: string,\n  // Number of past days to calculate volume traded for\n  days: int,\n  // Source to fetch the financial data. default is 'yahoo finance'\n  data_source: string or null,\n} or {\n  // Calculate the total revenue of a company over a specific period of time\n  function_name: 'total_revenue' or null,\n  // Name of the company to get data for\n  company: string,\n  // Number of past days to calculate total revenue for\n  days: int,\n  // Source to fetch the financial data. default is 'google finance'\n  data_source: string or null,\n} or {\n  // Calculate the average closing price of a specific company over a given period of time\n  function_name: 'avg_closing_price' or null,\n  // Name of the company to get data for\n  company: string,\n  // Number of past days to calculate average closing price for\n  days: int,\n  // Source to fetch the stock data. default is 'yahoo finance'\n  data_source: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the average closing price of Apple stock in the past 60 days"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"avg_closing_price\",\n  \"company\": \"Apple\",\n  \"days\": 60,\n  \"data_source\": \"yahoo finance\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 324, "output_tokens": 57, "total_tokens": 381, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e55f7160-3589-41ef-80cc-1d822ac2f391", "event_id": "e55f7160-3589-41ef-80cc-1d822ac2f391", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 66629, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_57", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "49625378-1fd5-4fe9-a283-9356ac506dac", "event_id": "8cf7b918-334e-47e3-8854-08093973b674", "parent_event_id": "49625378-1fd5-4fe9-a283-9356ac506dac", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 749, "start_time": "2024-06-20T16:21:10.388Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_58", "variant_name": null}, {"function_name": "Fn_multiple_function_58", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_58\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principle\":1000,\"rate\":0.05,\"time\":10,\"n\":4,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_58_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculates compound interest.\n  function_name: 'financial.compound_interest' or null,\n  // The initial amount of money that is being compounded.\n  principle: int,\n  // The annual interest rate, as a decimal. E.g., an annual interest rate of 5% would be represented as 0.05.\n  rate: float,\n  // The amount of time, in years, that the money is to be compounded for.\n  time: int,\n  // The number of times interest applied per time period.\n  n: int,\n} or {\n  // Calculates simple interest.\n  function_name: 'financial.simple_interest' or null,\n  // The initial amount of money that interest is being calculated for.\n  principle: float,\n  // The annual interest rate, as a decimal. E.g., an annual interest rate of 5% would be represented as 0.05.\n  rate: float,\n  // The amount of time, in years, that the money is to be compounded for.\n  time: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can you please calculate the compound interest for a principle of $1000, annual rate of 5% over 10 years with 4 compound per year."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"financial.compound_interest\",\n  \"principle\": 1000,\n  \"rate\": 0.05,\n  \"time\": 10,\n  \"n\": 4\n}", "metadata": {"logprobs": null, "prompt_tokens": 299, "output_tokens": 54, "total_tokens": 353, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "49625378-1fd5-4fe9-a283-9356ac506dac", "event_id": "49625378-1fd5-4fe9-a283-9356ac506dac", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 67380, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_58", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "57dd8424-b5dc-4e4e-a5db-ba03e94eef3f", "event_id": "568bdde8-d6e2-4207-92e7-2f800346e34d", "parent_event_id": "57dd8424-b5dc-4e4e-a5db-ba03e94eef3f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 654, "start_time": "2024-06-20T16:21:11.139Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_59", "variant_name": null}, {"function_name": "Fn_multiple_function_59", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_59\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Los Angeles, CA\",\"expertise\":\"Divorce\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_59_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for a doctor based on area of expertise and location\n  function_name: 'doctor.search' or null,\n  // The city and state, e.g. Los Angeles, CA\n  location: string,\n  // Medical specialization. For example, 'Cardiology', 'Orthopedics', 'Gynecology'.\n  specialization: string,\n} or {\n  // Search for a lawyer based on area of expertise and location\n  function_name: 'lawyer.search' or null,\n  // The city and state, e.g. Los Angeles, CA\n  location: string,\n  // Area of legal expertise. For example, 'Marriage', 'Criminal', 'Business'.\n  expertise: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for divorce law specialists in Los Angeles"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"lawyer.search\",\n  \"location\": \"Los Angeles, CA\",\n  \"expertise\": \"Divorce\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 198, "output_tokens": 38, "total_tokens": 236, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "57dd8424-b5dc-4e4e-a5db-ba03e94eef3f", "event_id": "57dd8424-b5dc-4e4e-a5db-ba03e94eef3f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 68035, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_59", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b637d9c0-0b7f-4f37-ac0b-0ea3d54d38ad", "event_id": "1e7add7e-bd64-473b-b4c0-468d9656e66a", "parent_event_id": "b637d9c0-0b7f-4f37-ac0b-0ea3d54d38ad", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 601, "start_time": "2024-06-20T16:21:11.794Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_60", "variant_name": null}, {"function_name": "Fn_multiple_function_60", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_60\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"specialization\":[\"criminal law\"],\"meta\":\"Value\",\"experience\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_60_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Rent a car near you based on your preference.\n  function_name: 'car_rental' or null,\n  // Your location\n  location: string,\n  // Type of cars that you want to rent.\n  car_type: string[],\n  // Preferred fuel type of car. Gas, diesel, electric, hybrid etc. Default 'gas'\n  fuel_type: string or null,\n} or {\n  // Locate lawyers near you based on their specialization.\n  function_name: 'lawyer_finder' or null,\n  // Your location\n  location: string,\n  // Specializations of lawyer that you are looking for.\n  specialization: string[],\n  // Experience in years that lawyer has. Default 1\n  experience: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find lawyers specializing in criminal law near me in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"lawyer_finder\",\n  \"location\": \"New York\",\n  \"specialization\": [\"criminal law\"],\n  \"experience\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 212, "output_tokens": 43, "total_tokens": 255, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b637d9c0-0b7f-4f37-ac0b-0ea3d54d38ad", "event_id": "b637d9c0-0b7f-4f37-ac0b-0ea3d54d38ad", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 68638, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_60", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "38dc58cf-cc0e-4aea-9750-b12fdc66b964", "event_id": "a623a7a3-3505-4387-b612-e6f92c20b6ef", "parent_event_id": "38dc58cf-cc0e-4aea-9750-b12fdc66b964", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 679, "start_time": "2024-06-20T16:21:12.397Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_61", "variant_name": null}, {"function_name": "Fn_multiple_function_61", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_61\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York City\",\"days\":7,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_61_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for events happening in a specific location for a future date.\n  function_name: 'event_search' or null,\n  // The city that you want to get the event information for.\n  location: string,\n  // Number of future days for which to retrieve the event information.\n  days: int,\n} or {\n  // Retrieve movie showtimes for a specific location and for a future date.\n  function_name: 'movie_showtimes' or null,\n  // The city that you want to get the movie showtimes for.\n  location: string,\n  // Number of future days for which to retrieve the showtimes.\n  days: int,\n} or {\n  // Retrieve forecast of humidity and temperature for a specific location and for a future date.\n  function_name: 'humidity_temperature_forecast' or null,\n  // The city that you want to get the humidity and temperature forecast for.\n  location: string,\n  // Number of future days for which to retrieve the forecast.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What will be the humidity and temperature for New York City after 7 days?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"humidity_temperature_forecast\",\n  \"location\": \"New York City\",\n  \"days\": 7\n}", "metadata": {"logprobs": null, "prompt_tokens": 276, "output_tokens": 37, "total_tokens": 313, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "38dc58cf-cc0e-4aea-9750-b12fdc66b964", "event_id": "38dc58cf-cc0e-4aea-9750-b12fdc66b964", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 69319, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_61", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "be078665-d71d-4c2a-b2b4-72d3725cc549", "event_id": "dd684dfe-6c02-4656-95ac-5e80f42b81af", "parent_event_id": "be078665-d71d-4c2a-b2b4-72d3725cc549", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 923, "start_time": "2024-06-20T16:21:13.078Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_62", "variant_name": null}, {"function_name": "Fn_multiple_function_62", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_62\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Portland, OR\",\"specialization\":\"small space garden design\",\"meta\":\"Value\",\"years_experience\":5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_62_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for a home renovation expert based on the location and specialization\n  function_name: 'home_renovation_expert.find_specialty' or null,\n  // City and state where the professional is based, e.g. Portland, OR.\n  location: string,\n  // A specific area of expertise, such as kitchen or bathroom renovation.\n  specialization: string,\n  // Number of years the professional has been practicing in their field. (optional)\n  years_experience: int or null,\n} or {\n  // Search for a landscape architect based on the location and specialization\n  function_name: 'landscape_architect.find_specialty' or null,\n  // City and state where the professional is based, e.g. Portland, OR.\n  location: string,\n  // A specific area of expertise. Common areas include residential design, commercial design, urban design, and park design.\n  specialization: string,\n  // Number of years the professional has been practicing in their field. (optional)\n  years_experience: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a Landscape Architect who is experienced 5 years in small space garden design in Portland"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"landscape_architect.find_specialty\",\n  \"location\": \"Portland, OR\",\n  \"specialization\": \"small space garden design\",\n  \"years_experience\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 275, "output_tokens": 63, "total_tokens": 338, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "be078665-d71d-4c2a-b2b4-72d3725cc549", "event_id": "be078665-d71d-4c2a-b2b4-72d3725cc549", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 70243, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_62", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "99a464fe-29a3-4ccb-b45f-d8e0a36d5dbd", "event_id": "b297f570-4250-44d8-9624-42b6a3693336", "parent_event_id": "99a464fe-29a3-4ccb-b45f-d8e0a36d5dbd", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 789, "start_time": "2024-06-20T16:21:14.002Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_63", "variant_name": null}, {"function_name": "Fn_multiple_function_63", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_63\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Boston, MA\",\"features\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_63_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby nature parks based on specific criteria like camping availability and scenic views.\n  function_name: 'nature_park.find_nearby' or null,\n  // The city and state, e.g. Boston, MA.\n  location: string,\n  // Preferred features in nature park.\n  features: [\n    'Camping' or 'Scenic View' or 'Trails' or 'Picnic Areas'\n  ],\n} or {\n  // Locate nearby restaurants based on specific criteria.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Boston, MA.\n  location: string,\n  // Preferred amenities in restaurant. Default empty array []\n  amenities: [\n    'Delivery' or 'Outdoor Seating' or 'Vegetarian Options'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the closest nature park that allows camping and has scenic views in Boston, MA."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"nature_park.find_nearby\",\n  \"location\": \"Boston, MA\",\n  \"features\": [\n    \"Camping\",\n    \"Scenic View\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 241, "output_tokens": 54, "total_tokens": 295, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "99a464fe-29a3-4ccb-b45f-d8e0a36d5dbd", "event_id": "99a464fe-29a3-4ccb-b45f-d8e0a36d5dbd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 71033, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_63", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "850e86f6-2c7e-42cf-8e23-82fd6cafd441", "event_id": "1699e816-630d-476f-a1c4-bcc4cad97516", "parent_event_id": "850e86f6-2c7e-42cf-8e23-82fd6cafd441", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 620, "start_time": "2024-06-20T16:21:14.792Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_64", "variant_name": null}, {"function_name": "Fn_multiple_function_64", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_64\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"days\":7,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_64_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve an air quality forecast for a specific location and time frame.\n  function_name: 'air_quality_forecast' or null,\n  // The city that you want to get the air quality forecast for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n} or {\n  // Retrieve a weather forecast for a specific location and time frame.\n  function_name: 'weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n} or {\n  // Retrieve news articles for a specific topic.\n  function_name: 'news' or null,\n  // The topic that you want to get the news for.\n  topic: string,\n  // Number of past days for which to retrieve the news.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What will be the air quality index of New York for the next week?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"air_quality_forecast\",\n  \"location\": \"New York\",\n  \"days\": 7\n}", "metadata": {"logprobs": null, "prompt_tokens": 244, "output_tokens": 46, "total_tokens": 290, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "850e86f6-2c7e-42cf-8e23-82fd6cafd441", "event_id": "850e86f6-2c7e-42cf-8e23-82fd6cafd441", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 71655, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_64", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "71d5dd05-fb53-4701-8979-8b04d2f9957b", "event_id": "79eef6bd-ffbc-4d58-8868-7f25dd8402d8", "parent_event_id": "71d5dd05-fb53-4701-8979-8b04d2f9957b", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T16:21:15.414Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_65", "variant_name": null}, {"function_name": "Fn_multiple_function_65", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_65\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Tokyo\",\"meta\":\"Value\",\"date\":\"Tomorrow\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_65_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve UV index data for a specified location and date.\n  function_name: 'uv_index.get_future' or null,\n  // The location to retrieve the UV index for.\n  location: string,\n  // The date for the UV index. (default: Tomorrow)\n  date: string or null,\n} or {\n  // Retrieve rainfall data for a specified location and date.\n  function_name: 'rainfall_prediction' or null,\n  // The location to retrieve the rainfall prediction for.\n  location: string,\n  // The date for the rainfall prediction. Default 'Tomorrow'\n  date: string or null,\n} or {\n  // Retrieve snowfall data for a specified location and date.\n  function_name: 'snowfall_prediction' or null,\n  // The location to retrieve the snowfall prediction for.\n  location: string,\n  // The date for the snowfall prediction. Default 'Tomorrow'\n  date: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me the UV index for Tokyo for tomorrow."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the schema you provided:\n\n{\n  \"function_name\": \"uv_index.get_future\",\n  \"location\": \"Tokyo\",\n  \"date\": \"Tomorrow\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 255, "output_tokens": 50, "total_tokens": 305, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "71d5dd05-fb53-4701-8979-8b04d2f9957b", "event_id": "71d5dd05-fb53-4701-8979-8b04d2f9957b", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 72472, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_65", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6fcab018-5c85-4f86-8156-ede554829554", "event_id": "301f65ea-d4d9-4d72-9df9-e3a2dde67b85", "parent_event_id": "6fcab018-5c85-4f86-8156-ede554829554", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 908, "start_time": "2024-06-20T16:21:16.231Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_66", "variant_name": null}, {"function_name": "Fn_multiple_function_66", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_66\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"origin\":\"New York City\",\"destination\":\"Los Angeles\",\"meta\":\"Value\",\"unit\":\"miles\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_66_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the time difference between two cities.\n  function_name: 'timezones.get_difference' or null,\n  // The first city.\n  city1: string,\n  // The second city.\n  city2: string,\n} or {\n  // Find the distance between two cities on the globe.\n  function_name: 'geodistance.find' or null,\n  // The originating city for the distance calculation.\n  origin: string,\n  // The destination city for the distance calculation.\n  destination: string,\n  // The unit of measure for the distance calculation. (default: miles)\n  unit: string or null,\n} or {\n  // Find flights between two cities.\n  function_name: 'flights.search' or null,\n  // The city to depart from.\n  from_city: string,\n  // The city to arrive at.\n  to_city: string,\n  // The date to fly. (default: next monday)\n  date: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the distance between New York City and Los Angeles."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geodistance.find\",\n  \"origin\": \"New York City\",\n  \"destination\": \"Los Angeles\",\n  \"unit\": \"miles\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 265, "output_tokens": 47, "total_tokens": 312, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6fcab018-5c85-4f86-8156-ede554829554", "event_id": "6fcab018-5c85-4f86-8156-ede554829554", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 73382, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_66", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a3fc9f5e-9747-4192-9a3a-b77b4e958e2a", "event_id": "6e156e3b-cb90-4cfb-a592-1942cb58c1d6", "parent_event_id": "a3fc9f5e-9747-4192-9a3a-b77b4e958e2a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 729, "start_time": "2024-06-20T16:21:17.141Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_67", "variant_name": null}, {"function_name": "Fn_multiple_function_67", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_67\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Las Vegas\",\"end_location\":\"Los Angeles\",\"meta\":\"Value\",\"time_period\":\"weekend\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_67_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate distance between two locations.\n  function_name: 'calculate_distance' or null,\n  // Starting point of the journey.\n  start_point: string,\n  // Ending point of the journey.\n  end_point: string,\n} or {\n  // Estimate traffic from one location to another for a specific time period.\n  function_name: 'traffic_estimate' or null,\n  // Starting location for the journey.\n  start_location: string,\n  // Ending location for the journey.\n  end_location: string,\n  // Specify a time frame to estimate the traffic, 'now' for current, 'weekend' for the coming weekend. Default 'now'\n  time_period: string or null,\n} or {\n  // Retrieve a weather forecast for a specific location and time frame.\n  function_name: 'weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much traffic should I expect from Las Vegas to Los Angeles this weekend?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"traffic_estimate\",\n  \"start_location\": \"Las Vegas\",\n  \"end_location\": \"Los Angeles\",\n  \"time_period\": \"weekend\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 277, "output_tokens": 50, "total_tokens": 327, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a3fc9f5e-9747-4192-9a3a-b77b4e958e2a", "event_id": "a3fc9f5e-9747-4192-9a3a-b77b4e958e2a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 74112, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_67", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7d164903-9cc9-494d-b655-e6a058c32a2a", "event_id": "9d64041c-b06e-4cfc-9957-6bf454f62919", "parent_event_id": "7d164903-9cc9-494d-b655-e6a058c32a2a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 677, "start_time": "2024-06-20T16:21:17.871Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_68", "variant_name": null}, {"function_name": "Fn_multiple_function_68", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_68\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"text\":\"Hello, how are you?\",\"source_language\":\"en\",\"target_language\":\"fr\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_68_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Translate text from a specified source language to a specified target language.\n  function_name: 'translate' or null,\n  // The text to be translated.\n  text: string,\n  // The language the text is currently in.\n  source_language: string,\n  // The language the text will be translated to.\n  target_language: string,\n} or {\n  // Analyze the sentiment of a specified text.\n  function_name: 'sentiment_analysis' or null,\n  // The text whose sentiment is to be analyzed.\n  text: string,\n} or {\n  // Count the number of words in the given text.\n  function_name: 'word_count' or null,\n  // The text that the number of words is to be calculated.\n  text: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Translate Hello, how are you? from English to French."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"translate\",\n  \"text\": \"Hello, how are you?\",\n  \"source_language\": \"en\",\n  \"target_language\": \"fr\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 216, "output_tokens": 49, "total_tokens": 265, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7d164903-9cc9-494d-b655-e6a058c32a2a", "event_id": "7d164903-9cc9-494d-b655-e6a058c32a2a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 74791, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_68", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "da1ad267-b559-4c7a-84d6-fc34d4fab799", "event_id": "791ad683-68c6-470f-a289-fb649a4c6e8c", "parent_event_id": "da1ad267-b559-4c7a-84d6-fc34d4fab799", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1748, "start_time": "2024-06-20T16:21:18.550Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_69", "variant_name": null}, {"function_name": "Fn_multiple_function_69", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_69\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York public library\",\"genre\":\"historical fiction\",\"meta\":\"Value\",\"title\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_69_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for a book in a given library with optional parameters\n  function_name: 'library.search_books' or null,\n  // Name or city of library\n  location: string,\n  // Genre of the book\n  genre: string,\n  // Title of the book. Default ''\n  title: string or null,\n} or {\n  // Search for a book in the Google Books library with optional parameters\n  function_name: 'google.books_search' or null,\n  // Genre of the book\n  genre: string,\n  // Title of the book. Default ''\n  title: string or null,\n} or {\n  // Search for a book in the Open Library with optional parameters\n  function_name: 'openlibrary.books_search' or null,\n  // Genre of the book\n  genre: string,\n  // Title of the book. Default ''\n  title: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can I find a historical fiction book at the New York public library?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find a historical fiction book at the New York Public Library, you can use the following search schema:\n\n{\n  \"function_name\": \"library.search_books\",\n  \"location\": \"New York public library\",\n  \"genre\": \"historical fiction\",\n  \"title\": null\n}\n\nThis schema indicates that you want to search for books at the New York Public Library, with the genre set to \"historical fiction\", and the title left as optional (null).\n\nThe key elements are:\n\n- `function_name`: \"library.search_books\" to indicate you want to search a specific library's collection\n- `location`: \"New York public library\" to specify the library you want to search\n- `genre`: \"historical fiction\" to filter the search results to that genre\n- `title`: null to leave the title as an optional search parameter\n\nThis will allow you to search the New York Public Library's collection for historical fiction books that match your criteria.", "metadata": {"logprobs": null, "prompt_tokens": 243, "output_tokens": 209, "total_tokens": 452, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "da1ad267-b559-4c7a-84d6-fc34d4fab799", "event_id": "da1ad267-b559-4c7a-84d6-fc34d4fab799", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 76541, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_69", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "27d0e836-95e5-4796-983a-2c23888b0da0", "event_id": "0b424187-e20b-4f08-a7a7-9beb91b031cc", "parent_event_id": "27d0e836-95e5-4796-983a-2c23888b0da0", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1685, "start_time": "2024-06-20T16:21:20.300Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_70", "variant_name": null}, {"function_name": "Fn_multiple_function_70", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_70\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"talkative\":true,\"nervous\":true,\"artistic_interests\":false,\"lazy\":true,\"forgiving\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_70_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Analyse personality based on the Myers-Briggs Type Indicator (MBTI) which sorts for preferences and generates a 4-letter personality type.\n  function_name: 'MBTI.analyse' or null,\n  // Preference of user between thinking and feeling.\n  thinking_vs_feeling: string,\n  // Preference of user between introverted and extroverted.\n  introverted_vs_extroverted: string,\n  // Preference of user between judging and perceiving.\n  judging_vs_perceiving: string,\n  // Preference of user between sensing and intuition.\n  sensing_vs_intuition: string,\n} or {\n  // Analyse personality based on the five-factor model, also known as the Big Five, which measures openness, conscientiousness, extraversion, agreeableness, and neuroticism.\n  function_name: 'five_factor_model.analyse' or null,\n  // Indicates if the user is talkative.\n  talkative: bool,\n  // Indicates if the user gets nervous easily.\n  nervous: bool,\n  // Indicates if the user has many artistic interests.\n  artistic_interests: bool,\n  // Indicates if the user tends to be lazy.\n  lazy: bool,\n  // Indicates if the user is forgiving.\n  forgiving: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: Determine my personality type based on the five factor model with given information: I'm talkative, gets nervous easily, has few artistic interests, tend to be lazy and has a forgiving nature."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Based on the information provided, your personality type according to the five-factor model is:\n\n{\n  function_name: 'five_factor_model.analyse',\n  talkative: true,\n  nervous: true,\n  artistic_interests: false,\n  lazy: true,\n  forgiving: true\n}\n\nThis profile suggests the following about your personality:\n\n- Extraversion: You are talkative, indicating a high level of extraversion.\n- Neuroticism: You get nervous easily, indicating a high level of neuroticism.\n- Openness to Experience: You have few artistic interests, indicating a low level of openness to experience.\n- Conscientiousness: You tend to be lazy, indicating a low level of conscientiousness.\n- Agreeableness: You have a forgiving nature, indicating a high level of agreeableness.\n\nOverall, this profile suggests that you are an extraverted, neurotic, closed-off, lazy, and agreeable individual according to the five-factor model of personality.", "metadata": {"logprobs": null, "prompt_tokens": 377, "output_tokens": 234, "total_tokens": 611, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "27d0e836-95e5-4796-983a-2c23888b0da0", "event_id": "27d0e836-95e5-4796-983a-2c23888b0da0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 78227, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_70", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0b751bad-6bba-4d58-b308-87f815ae665f", "event_id": "05b50d9f-af92-4c5f-abef-5b52e493520a", "parent_event_id": "0b751bad-6bba-4d58-b308-87f815ae665f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 901, "start_time": "2024-06-20T16:21:21.986Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_71", "variant_name": null}, {"function_name": "Fn_multiple_function_71", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_71\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"France\",\"century\":18,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_71_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Provides a list of major historical events based on the specified country and century.\n  function_name: 'european_history.get_events' or null,\n  // Country name.\n  country: string,\n  // Century as an integer. For example, for the 1700s, input '18'.\n  century: int,\n  // Type of the event such as 'war', 'invention', 'revolution' etc. This field is optional. Default is 'all'\n  event_type: string or null,\n} or {\n  // Provides information on cultural trends, art movements, philosophical ideas based on the specified country and century.\n  function_name: 'european_history.get_culture' or null,\n  // Country name.\n  country: string,\n  // Century as an integer. For example, for the 1700s, input '18'.\n  century: int,\n  // Aspect of culture such as 'literature', 'art', 'philosophy' etc. This field is optional. Default 'any'\n  aspect: string or null,\n} or {\n  // Provides a list of monarchs based on the specified country and century.\n  function_name: 'european_history.get_monarchs' or null,\n  // Country name.\n  country: string,\n  // Century as an integer. For example, for the 1700s, input '18'.\n  century: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who were the kings of France during the 18th century?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"european_history.get_monarchs\",\n  \"country\": \"France\",\n  \"century\": 18\n}", "metadata": {"logprobs": null, "prompt_tokens": 361, "output_tokens": 48, "total_tokens": 409, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0b751bad-6bba-4d58-b308-87f815ae665f", "event_id": "0b751bad-6bba-4d58-b308-87f815ae665f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 79130, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_71", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dabe4024-0eb4-4c78-8c0b-5cde88cff101", "event_id": "6124e636-84c9-43af-8d7e-c93f3f61f2b6", "parent_event_id": "dabe4024-0eb4-4c78-8c0b-5cde88cff101", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 920, "start_time": "2024-06-20T16:21:22.889Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_72", "variant_name": null}, {"function_name": "Fn_multiple_function_72", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_72\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"year\":1954,\"category\":\"veterans\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_72_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve statistical data for a specific year and statistical category\n  function_name: 'get_bureau_statistics' or null,\n  // The year for which to retrieve the statistical data\n  year: int,\n  // The statistical category (e.g., employment, crime, health)\n  category: string,\n} or {\n  // Retrieve population data for a specific year and population category\n  function_name: 'get_population' or null,\n  // The year for which to retrieve the population data\n  year: int,\n  // The population category (e.g., total, veterans, women)\n  category: string,\n} or {\n  // Retrieve demographic data for a specific year and demographic category\n  function_name: 'get_demographics' or null,\n  // The year for which to retrieve the demographic data\n  year: int,\n  // The demographic category (e.g., gender, race, age)\n  category: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many veterans were there in the United States in the year 1954?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To retrieve the number of veterans in the United States for the year 1954, the request would be in the following schema:\n\n{\n  \"function_name\": \"get_population\",\n  \"year\": 1954,\n  \"category\": \"veterans\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 253, "output_tokens": 62, "total_tokens": 315, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dabe4024-0eb4-4c78-8c0b-5cde88cff101", "event_id": "dabe4024-0eb4-4c78-8c0b-5cde88cff101", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 80052, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_72", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b3197c67-01ba-4f9a-ba42-bf5ae2236074", "event_id": "db3754ea-0579-4f60-9d8c-92a399770f92", "parent_event_id": "b3197c67-01ba-4f9a-ba42-bf5ae2236074", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 555, "start_time": "2024-06-20T16:21:23.811Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_73", "variant_name": null}, {"function_name": "Fn_multiple_function_73", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_73\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"state\":\"California\",\"year\":1970,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_73_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve historical population data for a specific U.S. state and year.\n  function_name: 'us_history.population_by_state_year' or null,\n  // The U.S. state for which to retrieve the population.\n  state: string,\n  // The year for which to retrieve the population.\n  year: int,\n} or {\n  // Retrieve historical GDP data for a specific U.S. state and year.\n  function_name: 'us_economy.gdp_by_state_year' or null,\n  // The U.S. state for which to retrieve the GDP.\n  state: string,\n  // The year for which to retrieve the GDP.\n  year: int,\n  // The type of adjustment for inflation, 'Real' or 'Nominal'. Optional, 'Nominal' by default.\n  adjustment: 'Real' or 'Nominal' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What was the population of California in 1970?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"us_history.population_by_state_year\",\n  \"state\": \"California\",\n  \"year\": 1970\n}", "metadata": {"logprobs": null, "prompt_tokens": 244, "output_tokens": 42, "total_tokens": 286, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b3197c67-01ba-4f9a-ba42-bf5ae2236074", "event_id": "b3197c67-01ba-4f9a-ba42-bf5ae2236074", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 80609, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_73", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3e9438bd-3837-4b26-9f19-5a7908421938", "event_id": "a6805e36-aefe-436c-acf0-ea412239724e", "parent_event_id": "3e9438bd-3837-4b26-9f19-5a7908421938", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 713, "start_time": "2024-06-20T16:21:24.368Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_74", "variant_name": null}, {"function_name": "Fn_multiple_function_74", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_74\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"religion\":\"Buddhism\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_74_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the core beliefs and practices of a specified religion.\n  function_name: 'religion.get_core_beliefs' or null,\n  // Name of the religion for which to retrieve the core beliefs and practices.\n  religion: string,\n} or {\n  // Retrieves the origin and founder information of a specified religion.\n  function_name: 'religion.get_origin' or null,\n  // Name of the religion for which to retrieve the founder and origin.\n  religion: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the founder of Buddhism and where was it originated?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"religion.get_origin\",\n  \"religion\": \"Buddhism\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 146, "output_tokens": 28, "total_tokens": 174, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3e9438bd-3837-4b26-9f19-5a7908421938", "event_id": "3e9438bd-3837-4b26-9f19-5a7908421938", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 81323, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_74", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2411bcf3-19e2-432c-bd1b-5340c39edc79", "event_id": "f7044b53-ac53-4016-a9dc-d6b1ff80bade", "parent_event_id": "2411bcf3-19e2-432c-bd1b-5340c39edc79", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1185, "start_time": "2024-06-20T16:21:25.082Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_75", "variant_name": null}, {"function_name": "Fn_multiple_function_75", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_75\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artwork_name\":\"Starry Night\",\"artist\":\"Van Gogh\",\"meta\":\"Value\",\"platform\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_75_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the price of a specific artwork on the auction platform.\n  function_name: 'art_auction.fetch_artwork_price' or null,\n  // The name of the artwork to be searched.\n  artwork_name: string,\n  // The artist's name to ensure the precise artwork is fetched.\n  artist: string,\n  // The platform where the artwork's price should be fetched from. (default: all)\n  platform: string or null,\n} or {\n  // Search for a specific book in the library.\n  function_name: 'library.search_book' or null,\n  // The title of the book to be searched.\n  title: string,\n  // The author of the book to ensure the precise book is fetched.\n  author: string,\n  // The library where the book should be fetched from. (default: all)\n  platform: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the price of Van Gogh's painting 'Starry Night' on auction platform."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"art_auction.fetch_artwork_price\",\n  \"artwork_name\": \"Starry Night\",\n  \"artist\": \"Van Gogh\",\n  \"platform\": null\n}\n\nThis request will fetch the price of Van Gogh's painting 'Starry Night' from the art auction platform. The `platform` field is set to `null`, which means it will search across all available platforms.", "metadata": {"logprobs": null, "prompt_tokens": 247, "output_tokens": 112, "total_tokens": 359, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2411bcf3-19e2-432c-bd1b-5340c39edc79", "event_id": "2411bcf3-19e2-432c-bd1b-5340c39edc79", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 82510, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_75", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2b45b444-dab6-46ba-ab81-f00376346a18", "event_id": "2f37beba-ca0b-4b67-80f4-1452f5cf7408", "parent_event_id": "2b45b444-dab6-46ba-ab81-f00376346a18", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T16:21:26.269Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_76", "variant_name": null}, {"function_name": "Fn_multiple_function_76", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_76\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"room\":\"Living room\",\"meta\":\"Value\",\"period\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_76_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve a weather forecast for a specific location and time frame.\n  function_name: 'weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n} or {\n  // Find the most popular paint color for a specific area in the home.\n  function_name: 'paint_color.trends' or null,\n  // Type of the room e.g. Living room, Bathroom etc.\n  room: string,\n  // The period over which to check the paint color trend. Default 'Daily'\n  period: 'Daily' or 'Weekly' or 'Monthly' or 'Yearly' or null,\n} or {\n  // Find the average house price in a specific area.\n  function_name: 'house_price_trends' or null,\n  // City and state, e.g. New York, NY.\n  location: string,\n  // The period over which to check the price trend. Default 'Yearly'\n  period: 'Daily' or 'Weekly' or 'Monthly' or 'Yearly' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Which paint color is currently most popular for living rooms?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the schema format:\n\n{\n  \"function_name\": \"paint_color.trends\",\n  \"room\": \"Living room\",\n  \"period\": \"Daily\"\n}\n\nThis query would retrieve the current most popular paint color trend for living rooms.", "metadata": {"logprobs": null, "prompt_tokens": 305, "output_tokens": 63, "total_tokens": 368, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2b45b444-dab6-46ba-ab81-f00376346a18", "event_id": "2b45b444-dab6-46ba-ab81-f00376346a18", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 83432, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_76", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "00bc5e21-a37a-4efb-b51c-717891f07c0e", "event_id": "7c926350-0b81-4e9d-a389-627371940650", "parent_event_id": "00bc5e21-a37a-4efb-b51c-717891f07c0e", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1431, "start_time": "2024-06-20T16:21:27.191Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_77", "variant_name": null}, {"function_name": "Fn_multiple_function_77", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_77\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"item\":\"horse\",\"material\":\"Value0\",\"meta\":\"Value\",\"size\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_77_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Order a custom painting with your preferred color.\n  function_name: 'painting.create_custom' or null,\n  // The subject of the painting, e.g. horse\n  subject: string,\n  // Preferred main color for the painting.\n  color: 'Red' or 'Blue' or 'Green' or 'Yellow' or 'Black',\n  // The desired size for the painting in inches. This parameter is optional. Default 12\n  size: int or null,\n} or {\n  // Order a custom sculpture with your preferred material.\n  function_name: 'sculpture.create_custom' or null,\n  // The subject of the sculpture, e.g. horse\n  item: string,\n  // Preferred material for the sculpture.\n  material: 'Bronze' or 'Marble' or 'Terracotta' or 'Wood' or 'Stone',\n  // The desired size for the sculpture in inches. This parameter is optional. Default 12\n  size: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to order a custom bronze sculpture of a horse. What material options are available?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"sculpture.create_custom\",\n  \"item\": \"horse\",\n  \"material\": \"Bronze\",\n  \"size\": null\n}\n\nThe available material options for the custom sculpture are:\n- Bronze\n- Marble\n- Terracotta\n- Wood\n- Stone\n\nSince you specified that you want to order a custom bronze sculpture of a horse, the \"material\" field is set to \"Bronze\". The \"size\" field is left as null, which means the default size of 12 inches will be used.", "metadata": {"logprobs": null, "prompt_tokens": 274, "output_tokens": 134, "total_tokens": 408, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "00bc5e21-a37a-4efb-b51c-717891f07c0e", "event_id": "00bc5e21-a37a-4efb-b51c-717891f07c0e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 84865, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_77", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f47dd9aa-9dc9-46bc-93e9-d8158cbd77a2", "event_id": "ec464358-12ea-4cb0-9dfc-71e24a7b306f", "parent_event_id": "f47dd9aa-9dc9-46bc-93e9-d8158cbd77a2", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 747, "start_time": "2024-06-20T16:21:28.624Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_78", "variant_name": null}, {"function_name": "Fn_multiple_function_78", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_78\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"type\":\"sculpture\",\"location\":\"New York\",\"meta\":\"Value\",\"era\":\"contemporary\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_78_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for tourist attractions based on type and location.\n  function_name: 'tourist_attraction.find' or null,\n  // Type of the attraction. E.g., monument, museum, park.\n  attractionType: string,\n  // Location or city where the attraction is.\n  location: string,\n} or {\n  // Search for artworks based on type and location.\n  function_name: 'artwork_search.find' or null,\n  // Type of the artwork. E.g., painting, sculpture, installation.\n  type: string,\n  // Location or city where the artwork is.\n  location: string,\n  // Time period of the artwork, can be 'contemporary', 'modern', 'renaissance', etc. Default 'contemporary'\n  era: string or null,\n} or {\n  // Search for parks based on facilities and location.\n  function_name: 'park_search.find' or null,\n  // List of facilities in the park.\n  facilities: string[],\n  // Location or city where the park is.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for famous contemporary sculptures in New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"artwork_search.find\",\n  \"type\": \"sculpture\",\n  \"location\": \"New York\",\n  \"era\": \"contemporary\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 279, "output_tokens": 45, "total_tokens": 324, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f47dd9aa-9dc9-46bc-93e9-d8158cbd77a2", "event_id": "f47dd9aa-9dc9-46bc-93e9-d8158cbd77a2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 85613, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_78", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1c9c68ee-e7d0-49e9-a10c-d38979eb0965", "event_id": "e2faf80c-0881-417f-a324-410b0189c898", "parent_event_id": "1c9c68ee-e7d0-49e9-a10c-d38979eb0965", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1093, "start_time": "2024-06-20T16:21:29.373Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_79", "variant_name": null}, {"function_name": "Fn_multiple_function_79", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_79\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum\":\"Natural History Museum\",\"city\":\"London\",\"features\":[\"Value0\",\"Value1\",\"Value2\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_79_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve information about a specific tourist spot.\n  function_name: 'tourist_spot_info' or null,\n  // The name of the tourist spot you want to get information for.\n  spot: string,\n  // The city where the tourist spot is located.\n  city: string,\n  // Details of the tourist spot to get information on. For multiple details, separate them by comma. (default: timing, attractions)\n  details: [\n    'timing' or 'attractions' or 'tickets' or 'accessibility' or 'history'\n  ],\n} or {\n  // Retrieve information about a specific museum.\n  function_name: 'museum_info' or null,\n  // The name of the museum you want to get information for.\n  museum: string,\n  // The city where the museum is located.\n  city: string,\n  // Features of the museum to get information on. For multiple features, separate them by comma. (default: timings, exhibitions)\n  features: [\n    'timings' or 'exhibitions' or 'accessibility' or 'events' or 'history'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me information about Natural History Museum in London including timings, exhibitions, and accessibility."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"museum_info\",\n  \"museum\": \"Natural History Museum\",\n  \"city\": \"London\",\n  \"features\": [\n    \"timings\",\n    \"exhibitions\",\n    \"accessibility\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 297, "output_tokens": 71, "total_tokens": 368, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1c9c68ee-e7d0-49e9-a10c-d38979eb0965", "event_id": "1c9c68ee-e7d0-49e9-a10c-d38979eb0965", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 86708, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_79", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f9b01526-f482-4cb2-b533-b025167359be", "event_id": "b01e6e17-8d86-4479-8437-d55a4d45e1fe", "parent_event_id": "f9b01526-f482-4cb2-b533-b025167359be", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 805, "start_time": "2024-06-20T16:21:30.467Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_80", "variant_name": null}, {"function_name": "Fn_multiple_function_80", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_80\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum_name\":\"Museum of Modern Art\",\"meta\":\"Value\",\"month\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_80_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get restaurant information for a specific area.\n  function_name: 'restaurant_info' or null,\n  // Location for which to find restaurants.\n  location: string,\n  // Type of cuisine for which to find restaurants. Default 'any'\n  food_type: 'Italian' or 'Chinese' or 'Mexican' or 'American' or null,\n} or {\n  // Get exhibition information for a specific museum.\n  function_name: 'exhibition_info' or null,\n  // Name of the museum for which to find exhibitions.\n  museum_name: string,\n  // Number of upcoming months for which to retrieve exhibition details. Default 1\n  month: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find art exhibitions for the upcoming month in the Museum of Modern Art, New York."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"exhibition_info\",\n  \"museum_name\": \"Museum of Modern Art\",\n  \"location\": \"New York\",\n  \"month\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 197, "output_tokens": 57, "total_tokens": 254, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f9b01526-f482-4cb2-b533-b025167359be", "event_id": "f9b01526-f482-4cb2-b533-b025167359be", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 87515, "start_time": "2024-06-20T16:20:03.758Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_80", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "da41c695-4798-4452-92e8-c41ab1bcef6f", "event_id": "7da3b6a8-7857-4585-9529-d000caafabb1", "parent_event_id": "da41c695-4798-4452-92e8-c41ab1bcef6f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1240, "start_time": "2024-06-20T16:21:31.274Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_81", "variant_name": null}, {"function_name": "Fn_multiple_function_81", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_81\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Nashville, TN\",\"services\":[\"Value0\",\"Value1\"],\"instruments\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_81_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby music shops based on specific criteria like instrument lessons availability.\n  function_name: 'music_shop.find_nearby' or null,\n  // The city and state, e.g. Nashville, TN\n  location: string,\n  // Types of instrument lessons offered in the shop. Default empty array\n  services: [\n    'Guitar Lessons' or 'Violin Lessons' or 'Piano Lessons' or 'Ukulele Lessons'\n  ],\n  // Types of instruments sold in the shop. Default empty array\n  instruments: [\n    'Guitars' or 'Violins' or 'Pianos' or 'Drums'\n  ],\n} or {\n  // Locate nearby gyms based on specific criteria like types of fitness classes availability.\n  function_name: 'gym.find_nearby' or null,\n  // The city and state, e.g. Nashville, TN\n  location: string,\n  // Types of fitness classes offered in the gym. Default empty array\n  classes: [\n    'Yoga' or 'Spin' or 'Zumba' or 'CrossFit'\n  ],\n  // Types of gym equipment available. Default empty array\n  equipment: [\n    'Treadmills' or 'Ellipticals' or 'Weight Machines' or 'Free Weights'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a local guitar shop that also offers violin lessons in Nashville."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"music_shop.find_nearby\",\n  \"location\": \"Nashville, TN\",\n  \"services\": [\n    \"Guitar Lessons\",\n    \"Violin Lessons\"\n  ],\n  \"instruments\": [\n    \"Guitars\",\n    \"Violins\"\n  ]\n}\n\nThis query will search for a music shop located in Nashville, Tennessee that offers both guitar lessons and violin lessons. The shop should also sell both guitars and violins.", "metadata": {"logprobs": null, "prompt_tokens": 354, "output_tokens": 123, "total_tokens": 477, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "da41c695-4798-4452-92e8-c41ab1bcef6f", "event_id": "da41c695-4798-4452-92e8-c41ab1bcef6f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 88756, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_81", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f5d04876-f7d6-43dc-a93d-47b6a4d01689", "event_id": "149584c6-05bd-4196-af9e-cf6899229454", "parent_event_id": "f5d04876-f7d6-43dc-a93d-47b6a4d01689", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 882, "start_time": "2024-06-20T16:21:32.515Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_82", "variant_name": null}, {"function_name": "Fn_multiple_function_82", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_82\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist\":\"Eminem\",\"location\":\"New York City\",\"add_ons\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_82_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Book a ticket for a concert at a specific location with various add-ons like backstage pass.\n  function_name: 'concert.book_ticket' or null,\n  // Name of the artist for the concert.\n  artist: string,\n  // City where the concert will take place.\n  location: string,\n  // Add-ons for the concert. Default empty array\n  add_ons: [\n    'Backstage Pass' or 'VIP Seating' or 'Parking Pass'\n  ],\n} or {\n  // Book a ticket for a festival at a specific location with various add-ons like camping access.\n  function_name: 'festival.book_ticket' or null,\n  // Name of the festival.\n  festival: string,\n  // City where the festival will take place.\n  location: string,\n  // Add-ons for the festival. Default empty array\n  add_ons: [\n    'Camping Pass' or 'VIP Seating' or 'Parking Pass'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a ticket for the upcoming Eminem concert in New York City, I would like to get the one with backstage access."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"concert.book_ticket\",\n  \"artist\": \"Eminem\",\n  \"location\": \"New York City\",\n  \"add_ons\": [\n    \"Backstage Pass\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 291, "output_tokens": 70, "total_tokens": 361, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f5d04876-f7d6-43dc-a93d-47b6a4d01689", "event_id": "f5d04876-f7d6-43dc-a93d-47b6a4d01689", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 89639, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_82", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7410901b-86f5-4fc5-ab8c-0a2a89c8bc6f", "event_id": "0b73f8e6-ccc1-4e97-9687-37323a8dc69d", "parent_event_id": "7410901b-86f5-4fc5-ab8c-0a2a89c8bc6f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 651, "start_time": "2024-06-20T16:21:33.399Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_83", "variant_name": null}, {"function_name": "Fn_multiple_function_83", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_83\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C Major\",\"tempo\":120,\"meta\":\"Value\",\"time_signature\":\"4/4\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_83_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Generate a piece of music given a key, tempo, and time signature.\n  function_name: 'music.generate' or null,\n  // The key of the piece, e.g., C Major.\n  key: string,\n  // Tempo of the piece in beats per minute.\n  tempo: int,\n  // Time signature of the piece, e.g., 4/4. Default '4/4'\n  time_signature: string or null,\n} or {\n  // Generate an audio signal given a frequency, amplitude, and duration.\n  function_name: 'audio.generate' or null,\n  // Frequency of the audio signal in Hz.\n  frequency: float,\n  // Amplitude of the audio signal.\n  amplitude: float,\n  // Duration of the audio signal in seconds. Default 1\n  duration: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Play a song in C Major key at tempo 120 bpm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"music.generate\",\n  \"key\": \"C Major\",\n  \"tempo\": 120,\n  \"time_signature\": \"4/4\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 231, "output_tokens": 47, "total_tokens": 278, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7410901b-86f5-4fc5-ab8c-0a2a89c8bc6f", "event_id": "7410901b-86f5-4fc5-ab8c-0a2a89c8bc6f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 90292, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_83", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e1d5c64d-7b80-4491-82e6-54797c3da5d5", "event_id": "96ae5c30-146f-4687-a2b3-154a49975c16", "parent_event_id": "e1d5c64d-7b80-4491-82e6-54797c3da5d5", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 922, "start_time": "2024-06-20T16:21:34.051Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_84", "variant_name": null}, {"function_name": "Fn_multiple_function_84", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_84\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Lionel Messi\",\"team_name\":\"Barcelona\",\"meta\":\"Value\",\"competition\":\"\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_84_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the top scorer of a specified football team.\n  function_name: 'team_stats.get_top_scorer' or null,\n  // The name of the football team.\n  team_name: string,\n  // Competition for which to fetch stats (optional). Default ''\n  competition: string or null,\n} or {\n  // Fetch the top scorer of a specified football league.\n  function_name: 'league_stats.get_top_scorer' or null,\n  // The name of the football league.\n  league_name: string,\n  // Season for which to fetch stats (optional). Default ''\n  season: string or null,\n} or {\n  // Fetch all-time goals scored by a particular football player for a specified team.\n  function_name: 'player_stats.get_all_time_goals' or null,\n  // The name of the football player.\n  player_name: string,\n  // The name of the team for which player has played.\n  team_name: string,\n  // Competition for which to fetch stats (optional). Default ''\n  competition: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many goals has Lionel Messi scored for Barcelona till date?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"player_stats.get_all_time_goals\",\n  \"player_name\": \"Lionel Messi\",\n  \"team_name\": \"Barcelona\",\n  \"competition\": \"\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 296, "output_tokens": 67, "total_tokens": 363, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e1d5c64d-7b80-4491-82e6-54797c3da5d5", "event_id": "e1d5c64d-7b80-4491-82e6-54797c3da5d5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 91215, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_84", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "44dfeebf-b91a-40e3-a253-9874ee01a00d", "event_id": "e923257c-6490-4fc5-8d45-d7a1c6392aa4", "parent_event_id": "44dfeebf-b91a-40e3-a253-9874ee01a00d", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T16:21:34.974Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_85", "variant_name": null}, {"function_name": "Fn_multiple_function_85", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_85\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"competition\":\"UEFA Champions League\",\"team\":\"Barcelona\",\"number\":10,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_85_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Returns the top goal scorers for a specific competition and team\n  function_name: 'getTopGoalScorers' or null,\n  // The name of the competition (for example, 'UEFA Champions League').\n  competition: string,\n  // The name of the team (for example, 'Barcelona').\n  team: string,\n  // The number of top goal scorers to retrieve.\n  number: int,\n} or {\n  // Returns the top assist makers for a specific competition and team\n  function_name: 'getTopAssists' or null,\n  // The name of the competition (for example, 'UEFA Champions League').\n  competition: string,\n  // The name of the team (for example, 'Barcelona').\n  team: string,\n  // The number of top assist makers to retrieve.\n  number: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me the top 10 goal scorers in the UEFA Champions League from Barcelona team."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"getTopGoalScorers\",\n  \"competition\": \"UEFA Champions League\",\n  \"team\": \"Barcelona\",\n  \"number\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 233, "output_tokens": 47, "total_tokens": 280, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "44dfeebf-b91a-40e3-a253-9874ee01a00d", "event_id": "44dfeebf-b91a-40e3-a253-9874ee01a00d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 91930, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_85", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1b4aa948-fa04-4482-aa00-170168444dca", "event_id": "57b70e32-4c0d-4757-bc8a-e3c7bcb4b9c3", "parent_event_id": "1b4aa948-fa04-4482-aa00-170168444dca", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 700, "start_time": "2024-06-20T16:21:35.689Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_86", "variant_name": null}, {"function_name": "Fn_multiple_function_86", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_86\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Real Madrid\",\"league\":\"La Liga\",\"rounds\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_86_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve basketball scores for a specific team and league within a certain range of rounds.\n  function_name: 'basketball_scores.get_scores' or null,\n  // The basketball team whose scores are to be retrieved.\n  team: string,\n  // The league in which the team competes.\n  league: string,\n  // Number of past rounds for which to retrieve the scores.\n  rounds: int,\n} or {\n  // Retrieve soccer scores for a specific team and league within a certain range of rounds.\n  function_name: 'soccer_scores.get_scores' or null,\n  // The soccer team whose scores are to be retrieved.\n  team: string,\n  // The league in which the team competes.\n  league: string,\n  // Number of past rounds for which to retrieve the scores.\n  rounds: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the soccer scores for Real Madrid games in La Liga for the last 5 rounds."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"soccer_scores.get_scores\",\n  \"team\": \"Real Madrid\",\n  \"league\": \"La Liga\",\n  \"rounds\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 232, "output_tokens": 57, "total_tokens": 289, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1b4aa948-fa04-4482-aa00-170168444dca", "event_id": "1b4aa948-fa04-4482-aa00-170168444dca", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 92631, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_86", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d1bf0853-be59-44ed-8d95-fbb1bd0f2cb7", "event_id": "e9286d92-953e-473f-aafb-e62b0719a923", "parent_event_id": "d1bf0853-be59-44ed-8d95-fbb1bd0f2cb7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1857, "start_time": "2024-06-20T16:21:36.391Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_87", "variant_name": null}, {"function_name": "Fn_multiple_function_87", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_87\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"numPlayers\":2,\"category\":\"strategy\",\"meta\":\"Value\",\"difficulty\":\"beginner\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_87_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Generate game recommendation from BoardGameGeek store based on number of players and category.\n  function_name: 'BoardGameGeek.recommend' or null,\n  // The number of players who will play the game.\n  numPlayers: int,\n  // The preferred category of board game. E.g. strategy, family, party etc.\n  category: string,\n  // Preferred difficulty level. E.g. beginner, intermediate, advanced etc. This is an optional parameter. Default 'beginner'\n  difficulty: string or null,\n} or {\n  // Generate game recommendation from Amazon Game Store based on number of players and category.\n  function_name: 'AmazonGameStore.recommend' or null,\n  // The number of players who will play the game.\n  numOfPlayers: int,\n  // The preferred category of board game. E.g. strategy, family, party etc.\n  category: string,\n  // The price range you are willing to pay for the board game. E.g. $10-$20, $20-$30 etc. This is an optional parameter. Default ''\n  priceRange: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are some recommended board games for 2 players and strategy based from store BoardGameGeek?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To get a recommendation for a 2-player strategy board game from the BoardGameGeek store, the schema would be:\n\n{\n  \"function_name\": \"BoardGameGeek.recommend\",\n  \"numPlayers\": 2,\n  \"category\": \"strategy\",\n  \"difficulty\": \"beginner\"\n}\n\nSome popular 2-player strategy board game recommendations from BoardGameGeek could include:\n\n- Carcassonne\n- Ticket to Ride\n- Codenames: Duet\n- Patchwork\n- Jaipur\n- Lost Cities\n- The Castles of Burgundy\n- Hive\n- Dominion\n- Battle Line\n\nThe difficulty level is set to \"beginner\" by default, but you can adjust this parameter if you're looking for something more intermediate or advanced.", "metadata": {"logprobs": null, "prompt_tokens": 306, "output_tokens": 188, "total_tokens": 494, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d1bf0853-be59-44ed-8d95-fbb1bd0f2cb7", "event_id": "d1bf0853-be59-44ed-8d95-fbb1bd0f2cb7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 94490, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_87", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "060080b1-bd75-42d7-91d2-f5f33b23d3a8", "event_id": "306a18ec-2b04-4d6c-a4bf-6bfe4a3391d7", "parent_event_id": "060080b1-bd75-42d7-91d2-f5f33b23d3a8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 814, "start_time": "2024-06-20T16:21:38.249Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_88", "variant_name": null}, {"function_name": "Fn_multiple_function_88", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_88\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Cyberpunk 2077\",\"platform\":\"Xbox\",\"meta\":\"Value\",\"region\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_88_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find reviews for a specific game.\n  function_name: 'games.reviews.find' or null,\n  // The name of the game.\n  game: string,\n  // The region where the reviews are coming from (optional, default is 'global')\n  region: string or null,\n} or {\n  // Find the latest updates or patches for a specific game on a specified gaming platform.\n  function_name: 'games.update.find' or null,\n  // The name of the game.\n  game: string,\n  // The gaming platform, e.g. Xbox, Playstation, PC.\n  platform: string,\n  // The region of the update (optional, default is 'global')\n  region: string or null,\n} or {\n  // Find the current price for a specific game on a specified gaming platform.\n  function_name: 'games.price.find' or null,\n  // The name of the game.\n  game: string,\n  // The gaming platform, e.g. Xbox, Playstation, PC.\n  platform: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the latest update or patch for the game 'Cyberpunk 2077' on Xbox platform."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"games.update.find\",\n  \"game\": \"Cyberpunk 2077\",\n  \"platform\": \"Xbox\",\n  \"region\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 293, "output_tokens": 48, "total_tokens": 341, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "060080b1-bd75-42d7-91d2-f5f33b23d3a8", "event_id": "060080b1-bd75-42d7-91d2-f5f33b23d3a8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 95305, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_88", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b9925fa6-d5cd-4887-96a1-60e6d543a4a4", "event_id": "b95e9b25-0137-4108-821e-4a5c29a0a432", "parent_event_id": "b9925fa6-d5cd-4887-96a1-60e6d543a4a4", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 599, "start_time": "2024-06-20T16:21:39.064Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_89", "variant_name": null}, {"function_name": "Fn_multiple_function_89", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_89\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game_title\":\"World of Warcraft\",\"year\":2020,\"meta\":\"Value\",\"platform\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_89_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the number of active players for a specified video game and year.\n  function_name: 'video_games.get_player_count' or null,\n  // The title of the video game.\n  game_title: string,\n  // The year in question.\n  year: int,\n  // The gaming platform (e.g. 'PC', 'Xbox', 'Playstation'). Default ''\n  platform: string or null,\n} or {\n  // Retrieves the sales figures for a specified video game and year.\n  function_name: 'video_games.get_sales' or null,\n  // The title of the video game.\n  game_title: string,\n  // The year in question.\n  year: int,\n  // The gaming platform (e.g. 'PC', 'Xbox', 'Playstation'). Default ''\n  platform: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the number of active players in the game 'World of Warcraft' in 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"video_games.get_player_count\",\n  \"game_title\": \"World of Warcraft\",\n  \"year\": 2020,\n  \"platform\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 256, "output_tokens": 53, "total_tokens": 309, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b9925fa6-d5cd-4887-96a1-60e6d543a4a4", "event_id": "b9925fa6-d5cd-4887-96a1-60e6d543a4a4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 95905, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_89", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4585a193-b7e4-4b0f-a6cf-3235c10d9250", "event_id": "d53f9b8e-21b0-4284-a695-9aa6d32fdafc", "parent_event_id": "4585a193-b7e4-4b0f-a6cf-3235c10d9250", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 906, "start_time": "2024-06-20T16:21:39.665Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_90", "variant_name": null}, {"function_name": "Fn_multiple_function_90", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_90\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"ingredients\":[\"chicken\",\"mushrooms\"],\"calories\":500,\"meta\":\"Value\",\"meal\":\"lunch\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_90_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Searches for restaurants based on a list of preferred ingredients and maximum calorie count.\n  function_name: 'restaurant_search' or null,\n  // A list of ingredients you prefer in the restaurant's dishes.\n  ingredients: string[],\n  // The maximum calorie count you prefer for the restaurant's dishes.\n  calories: int,\n  // Type of the meal for the restaurant's dishes, it's optional and could be breakfast, lunch or dinner. Default 'lunch'\n  meal: string or null,\n} or {\n  // Replaces an ingredient in a recipe with a substitute, keeping the calories below a certain number.\n  function_name: 'ingredient_replace' or null,\n  // The ingredient in the recipe to replace.\n  original_ingredient: string,\n  // The substitute ingredient to replace the original one.\n  replacement_ingredient: string,\n  // The maximum number of calories for the recipe after replacement.\n  calories: int,\n} or {\n  // Searches for recipes based on a list of ingredients and a maximum caloric value.\n  function_name: 'recipe_search' or null,\n  // A list of ingredients you want to use in the recipe.\n  ingredients: string[],\n  // The maximum number of calories for the recipe.\n  calories: int,\n  // Type of the meal for the recipe, it's optional and could be breakfast, lunch or dinner. Default 'lunch'\n  meal: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a healthy lunch recipe under 500 calories that uses chicken and mushrooms."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"recipe_search\",\n  \"ingredients\": [\"chicken\", \"mushrooms\"],\n  \"calories\": 500,\n  \"meal\": \"lunch\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 367, "output_tokens": 56, "total_tokens": 423, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4585a193-b7e4-4b0f-a6cf-3235c10d9250", "event_id": "4585a193-b7e4-4b0f-a6cf-3235c10d9250", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 96813, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_90", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "0955fced-9b08-4893-b171-7ac773eca15a", "event_id": "18a652a8-7493-4e87-8a4b-8faffbd29e2e", "parent_event_id": "0955fced-9b08-4893-b171-7ac773eca15a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1198, "start_time": "2024-06-20T16:21:40.572Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_91", "variant_name": null}, {"function_name": "Fn_multiple_function_91", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_91\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Seattle, WA\",\"cuisine\":[\"Value0\"],\"group_size\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_91_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find events suitable for groups based on specified criteria such as location and event type.\n  function_name: 'events.find_event' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Type of event. Default empty array\n  event_type: [\n    'Concert' or 'Sports' or 'Exhibition' or 'Festival'\n  ],\n  // Size of the group that the event should accommodate.\n  group_size: int,\n} or {\n  // Find restaurants suitable for groups based on specified criteria such as location and cuisine.\n  function_name: 'restaurant.find_group' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Preferred cuisine at the restaurant. Default empty array\n  cuisine: [\n    'Seafood' or 'Italian' or 'Indian' or 'Chinese'\n  ],\n  // Size of the group that the restaurant should accommodate.\n  group_size: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: I want a seafood restaurant in Seattle that can accommodate a group of 5."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the schema format:\n\n{\n  \"function_name\": \"restaurant.find_group\",\n  \"location\": \"Seattle, WA\",\n  \"cuisine\": [\n    \"Seafood\"\n  ],\n  \"group_size\": 5\n}\n\nThis query will return a list of seafood restaurants in Seattle, WA that can accommodate a group size of 5.", "metadata": {"logprobs": null, "prompt_tokens": 278, "output_tokens": 92, "total_tokens": 370, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "0955fced-9b08-4893-b171-7ac773eca15a", "event_id": "0955fced-9b08-4893-b171-7ac773eca15a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 98012, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_91", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "341ef1e7-dbb5-4299-951a-1dbbb96004f4", "event_id": "dd994c31-3d03-42b5-9898-956d36404441", "parent_event_id": "341ef1e7-dbb5-4299-951a-1dbbb96004f4", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 836, "start_time": "2024-06-20T16:21:41.771Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_92", "variant_name": null}, {"function_name": "Fn_multiple_function_92", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_92\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mainIngredient\":\"apple\",\"ingredientLimit\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_92_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate restaurants based on specific criteria such as cuisine and price range\n  function_name: 'restaurant.find' or null,\n  // The type of cuisine preferred.\n  cuisine: string,\n  // Price range of the restaurant in format ['low', 'mid', 'high']. Default ['low', 'mid', 'high']\n  price: string[],\n} or {\n  // Locate cooking recipes based on specific criteria such as main ingredient and number of ingredients\n  function_name: 'recipe.find' or null,\n  // Main ingredient for the recipe.\n  mainIngredient: string,\n  // Max number of ingredients the recipe should use.\n  ingredientLimit: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Can I find a good cooking recipe for apple pie using less than 5 ingredients?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find a good cooking recipe for apple pie using less than 5 ingredients, the schema would be:\n\n{\n  \"function_name\": \"recipe.find\",\n  \"mainIngredient\": \"apple\",\n  \"ingredientLimit\": 5\n}\n\nThis query would search for recipes that have \"apple\" as the main ingredient and use no more than 5 ingredients total.", "metadata": {"logprobs": null, "prompt_tokens": 198, "output_tokens": 88, "total_tokens": 286, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "341ef1e7-dbb5-4299-951a-1dbbb96004f4", "event_id": "341ef1e7-dbb5-4299-951a-1dbbb96004f4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 98850, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_92", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9df47110-dfcf-43e2-9260-18d933ac317a", "event_id": "c2d3f93a-c44a-4bcc-a75d-13f221292259", "parent_event_id": "9df47110-dfcf-43e2-9260-18d933ac317a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 934, "start_time": "2024-06-20T16:21:42.609Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_93", "variant_name": null}, {"function_name": "Fn_multiple_function_93", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_93\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Denver, CO\",\"categories\":[\"Value0\",\"Value1\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_93_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get available vegan products at specified Safeway store\n  function_name: 'safeway.vegan_products' or null,\n  // City and state where the Safeway store is located, e.g. Denver, CO\n  location: string,\n  // Product categories to search within. Default empty array\n  categories: [\n    'vegan' or 'gluten-free'\n  ],\n} or {\n  // Get available vegan products at specified Whole Foods store\n  function_name: 'wholefoods.vegan_products' or null,\n  // City and state where the Whole Foods store is located, e.g. Denver, CO\n  location: string,\n  // Product categories to search within. Default empty array\n  categories: [\n    'vegan' or 'gluten-free'\n  ],\n} or {\n  // Get available vegan products at specified Walmart store\n  function_name: 'walmart.vegan_products' or null,\n  // City and state where the Walmart store is located, e.g. Denver, CO\n  location: string,\n  // Product categories to search within. Default empty array\n  categories: [\n    'vegan' or 'gluten-free'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me a list of available vegetarian and gluten-free foods at the Walmart near Denver."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the request in the specified schema:\n\n{\n  \"function_name\": \"walmart.vegan_products\",\n  \"location\": \"Denver, CO\",\n  \"categories\": [\n    \"vegan\",\n    \"gluten-free\"\n  ]\n}\n\nThis request will return the available vegetarian and gluten-free food products at the Walmart store located in Denver, Colorado.", "metadata": {"logprobs": null, "prompt_tokens": 330, "output_tokens": 91, "total_tokens": 421, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9df47110-dfcf-43e2-9260-18d933ac317a", "event_id": "9df47110-dfcf-43e2-9260-18d933ac317a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 99785, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_93", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8c3a9887-1064-4497-b32f-d893b384da66", "event_id": "5b4620a2-3dd5-4f99-aa9d-173e95300468", "parent_event_id": "8c3a9887-1064-4497-b32f-d893b384da66", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 753, "start_time": "2024-06-20T16:21:43.544Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_94", "variant_name": null}, {"function_name": "Fn_multiple_function_94", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_94\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"roomType\":\"deluxe\",\"nights\":2,\"additional_services\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_94_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Rent a car at the specified location for a specific number of days\n  function_name: 'car.rental' or null,\n  // Location of the car rental.\n  location: string,\n  // Number of days for which to rent the car.\n  days: int,\n  // Type of the car to rent.\n  car_type: string,\n  // Location of where to pick up the car. Default ''\n  pick_up: string or null,\n} or {\n  // Book a hotel room given the location, room type, and number of nights and additional services\n  function_name: 'hotel.book' or null,\n  // Location of the hotel.\n  location: string,\n  // Type of the room to be booked.\n  roomType: string,\n  // Number of nights to book the room for.\n  nights: int,\n  // Additional services to be added. Default empty array\n  additional_services: [\n    'breakfast' or 'parking' or 'spa'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a deluxe room for 2 nights at the Marriott hotel in New York and add breakfast as an extra service"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hotel.book\",\n  \"location\": \"New York\",\n  \"roomType\": \"deluxe\",\n  \"nights\": 2,\n  \"additional_services\": [\n    \"breakfast\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 280, "output_tokens": 62, "total_tokens": 342, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8c3a9887-1064-4497-b32f-d893b384da66", "event_id": "8c3a9887-1064-4497-b32f-d893b384da66", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 100539, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_94", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c9271dbf-0b44-4603-9f92-b894b7e074c0", "event_id": "547ada2c-cd24-4d06-8d7d-1b3826dbb879", "parent_event_id": "c9271dbf-0b44-4603-9f92-b894b7e074c0", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 710, "start_time": "2024-06-20T16:21:44.298Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_95", "variant_name": null}, {"function_name": "Fn_multiple_function_95", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_95\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotelName\":\"Hilton New York\",\"roomType\":\"Suite with Queen Size Bed\",\"nights\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_95_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get pricing for a specific type of hotel room for specified number of nights.\n  function_name: 'hotel_room_pricing.get' or null,\n  // The name of the hotel e.g. Hilton New York\n  hotelName: string,\n  // Type of the room to be booked.\n  roomType: string,\n  // Number of nights to book the room for.\n  nights: int,\n} or {\n  // Get pricing for a specific type of rental car for a specified number of days.\n  function_name: 'car_rental_pricing.get' or null,\n  // The name of the rental company.\n  rentalCompany: string,\n  // Type of the car to be rented.\n  carType: string,\n  // Number of days to rent the car.\n  days: int,\n} or {\n  // Get pricing for a specific type of flight ticket for specified number of passengers.\n  function_name: 'flight_ticket_pricing.get' or null,\n  // The name of the airline.\n  airline: string,\n  // Class of the flight.\n  flightClass: string,\n  // Number of passengers.\n  passengers: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to book a suite with queen size bed for 3 nights in Hilton New York. Can you find the pricing for me?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"hotel_room_pricing.get\",\n  \"hotelName\": \"Hilton New York\",\n  \"roomType\": \"Suite with Queen Size Bed\",\n  \"nights\": 3\n}", "metadata": {"logprobs": null, "prompt_tokens": 328, "output_tokens": 57, "total_tokens": 385, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c9271dbf-0b44-4603-9f92-b894b7e074c0", "event_id": "c9271dbf-0b44-4603-9f92-b894b7e074c0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 101250, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_95", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9c0477eb-6eba-4057-baff-21b99d4e4081", "event_id": "8bf80e54-e87a-4e1b-9608-311995fe50a3", "parent_event_id": "9c0477eb-6eba-4057-baff-21b99d4e4081", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 703, "start_time": "2024-06-20T16:21:45.009Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_96", "variant_name": null}, {"function_name": "Fn_multiple_function_96", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_96\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"amount\":200,\"from_currency\":\"EUR\",\"to_currency\":\"USD\",\"meta\":\"Value\",\"live_conversion\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_96_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Converts a value from one currency to another using the latest exchange rate.\n  function_name: 'currency_exchange.convert' or null,\n  // The amount of money to be converted.\n  amount: int,\n  // The currency to convert from.\n  from_currency: string,\n  // The currency to convert to.\n  to_currency: string,\n  // If true, use the latest exchange rate for conversion, else use the last known rate. Default false\n  live_conversion: bool or null,\n} or {\n  // Converts a value from one unit to another.\n  function_name: 'unit_conversion.convert' or null,\n  // The value to be converted.\n  value: int,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Convert 200 euros to US dollars using current exchange rate."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"currency_exchange.convert\",\n  \"amount\": 200,\n  \"from_currency\": \"EUR\",\n  \"to_currency\": \"USD\",\n  \"live_conversion\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 232, "output_tokens": 56, "total_tokens": 288, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9c0477eb-6eba-4057-baff-21b99d4e4081", "event_id": "9c0477eb-6eba-4057-baff-21b99d4e4081", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 101955, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_96", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7dbd2bf7-e145-4b8e-b58c-8e2d11e66416", "event_id": "1d849bbb-5c1c-4024-84d9-c7c9affbf4cc", "parent_event_id": "7dbd2bf7-e145-4b8e-b58c-8e2d11e66416", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2080, "start_time": "2024-06-20T16:21:45.714Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_97", "variant_name": null}, {"function_name": "Fn_multiple_function_97", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_97\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"a\":2,\"b\":6,\"c\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_97_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves information about a specific stock based on company's name.\n  function_name: 'get_stock_info' or null,\n  // The name of the company.\n  company_name: string,\n  // Level of detail for stock information. Can be 'summary' or 'detailed'.\n  detail_level: string,\n  // The stock market of interest. Default is 'NASDAQ'\n  market: string or null,\n} or {\n  // Calculate the future value of an investment in a specific stock based on the invested amount, expected annual return and number of years.\n  function_name: 'portfolio_future_value' or null,\n  // The ticker symbol of the stock.\n  stock: string,\n  // The invested amount in USD.\n  invested_amount: float,\n  // The expected annual return on investment as a decimal. E.g. 5% = 0.05\n  expected_annual_return: float,\n  // The number of years for which the investment is made.\n  years: int,\n} or {\n  // Function solves the quadratic equation and returns its roots.\n  function_name: 'solve_quadratic_equation' or null,\n  // Coefficient of x squared\n  a: int,\n  // Coefficient of x\n  b: int,\n  // Constant term in the quadratic equation\n  c: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Solve a quadratic equation where a=2, b=6, and c=5"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"solve_quadratic_equation\",\n  \"a\": 2,\n  \"b\": 6,\n  \"c\": 5\n}\n\nTo solve the quadratic equation with a=2, b=6, and c=5, we can use the quadratic formula:\n\nx = (-b \u00b1 \u221a(b^2 - 4ac)) / (2a)\n\nPlugging in the values:\na = 2\nb = 6 \nc = 5\n\nx = (-6 \u00b1 \u221a(6^2 - 4*2*5)) / (2*2)\nx = (-6 \u00b1 \u221a(36 - 40)) / 4\nx = (-6 \u00b1 \u221a-4) / 4\nx = (-6 \u00b1 2i) / 4\n\nTherefore, the two roots of the quadratic equation are:\n\nx1 = (-6 + 2i) / 4 = -1 + 0.5i\nx2 = (-6 - 2i) / 4 = -1 - 0.5i", "metadata": {"logprobs": null, "prompt_tokens": 358, "output_tokens": 274, "total_tokens": 632, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7dbd2bf7-e145-4b8e-b58c-8e2d11e66416", "event_id": "7dbd2bf7-e145-4b8e-b58c-8e2d11e66416", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 104036, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_97", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "602d012e-c3a8-4d5c-bdaa-a088427f35c3", "event_id": "17884cd1-ecb2-44a3-8b6c-bfdd821cb7f0", "parent_event_id": "602d012e-c3a8-4d5c-bdaa-a088427f35c3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 565, "start_time": "2024-06-20T16:21:47.796Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_98", "variant_name": null}, {"function_name": "Fn_multiple_function_98", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_98\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":10,\"meta\":\"Value\",\"units\":\"meters\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_98_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the area of a circle given the radius.\n  function_name: 'geometry.area_circle' or null,\n  // The radius of the circle.\n  radius: int,\n  // The units in which the radius is measured (defaults to meters). (default: meters)\n  units: string or null,\n} or {\n  // Plot a sine wave for a given frequency in a given range.\n  function_name: 'plot_sine_wave' or null,\n  // Start of the range in radians.\n  start_range: float,\n  // End of the range in radians.\n  end_range: float,\n  // Frequency of the sine wave in Hz.\n  frequency: float,\n  // Amplitude of the sine wave. Default is 1.\n  amplitude: float or null,\n  // Phase shift of the sine wave in radians. Default is 0.\n  phase_shift: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the area of a circle with a radius of 10?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.area_circle\",\n  \"radius\": 10,\n  \"units\": \"meters\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 249, "output_tokens": 36, "total_tokens": 285, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "602d012e-c3a8-4d5c-bdaa-a088427f35c3", "event_id": "602d012e-c3a8-4d5c-bdaa-a088427f35c3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 104602, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_98", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "814c1e0f-134c-407b-ac93-df26462b78b3", "event_id": "059316f5-3bb9-4011-8937-40e718c12e6d", "parent_event_id": "814c1e0f-134c-407b-ac93-df26462b78b3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 639, "start_time": "2024-06-20T16:21:48.362Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_99", "variant_name": null}, {"function_name": "Fn_multiple_function_99", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_99\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"radius\":3,\"meta\":\"Value\",\"units\":\"cm\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_99_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the earliest historical reference of a person.\n  function_name: 'get_earliest_reference' or null,\n  // The name of the person.\n  name: string,\n  // Source to fetch the reference. Default is 'scriptures'\n  source: 'scriptures' or 'historical records' or null,\n} or {\n  // Retrieve the current time for a specified city and country.\n  function_name: 'get_current_time' or null,\n  // The city for which the current time is to be retrieved.\n  city: string,\n  // The country where the city is located.\n  country: string,\n  // The format in which the time is to be displayed, optional (defaults to 'HH:MM:SS').\n  format: string or null,\n} or {\n  // Generate a melody based on certain musical parameters.\n  function_name: 'music_generator.generate_melody' or null,\n  // The key of the melody. E.g., 'C' for C major.\n  key: string,\n  // The first note of the melody, specified in scientific pitch notation. E.g., 'C4'.\n  start_note: string,\n  // The number of measures in the melody.\n  length: int,\n  // The tempo of the melody, in beats per minute. Optional parameter. If not specified, defaults to 120.\n  tempo: int or null,\n} or {\n  // Calculate the circumference of a circle given the radius.\n  function_name: 'geometry.circumference' or null,\n  // The radius of the circle.\n  radius: int,\n  // Units for the output circumference measurement. Default is 'cm'.\n  units: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the circumference of a circle with radius 3"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"geometry.circumference\",\n  \"radius\": 3,\n  \"units\": \"cm\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 436, "output_tokens": 35, "total_tokens": 471, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "814c1e0f-134c-407b-ac93-df26462b78b3", "event_id": "814c1e0f-134c-407b-ac93-df26462b78b3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 105244, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_99", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9a1835bf-9042-4b36-a7a3-00edb69fc818", "event_id": "5b56bd1a-ef30-44f6-aac8-e07cad9a1c54", "parent_event_id": "9a1835bf-9042-4b36-a7a3-00edb69fc818", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 665, "start_time": "2024-06-20T16:21:49.003Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_100", "variant_name": null}, {"function_name": "Fn_multiple_function_100", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_100\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"function\":\"2*x^2\",\"value\":1,\"meta\":\"Value\",\"function_variable\":\"x\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_100_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Compute the derivative of a function at a specific value.\n  function_name: 'calculus.derivative' or null,\n  // The function to calculate the derivative of.\n  function: string,\n  // The value where the derivative needs to be calculated at.\n  value: int,\n  // The variable present in the function, for instance x or y, etc. Default is 'x'\n  function_variable: string or null,\n} or {\n  // Retrieve the personality traits for a specific personality type, including their strengths and weaknesses.\n  function_name: 'get_personality_traits' or null,\n  // The personality type.\n  type: string,\n  // List of traits to be retrieved, default is ['strengths', 'weaknesses'].\n  traits: [\n    'strengths' or 'weaknesses'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the derivative of the function 2x^2 at x = 1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculus.derivative\",\n  \"function\": \"2*x^2\",\n  \"value\": 1,\n  \"function_variable\": \"x\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 234, "output_tokens": 49, "total_tokens": 283, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9a1835bf-9042-4b36-a7a3-00edb69fc818", "event_id": "9a1835bf-9042-4b36-a7a3-00edb69fc818", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 105910, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_100", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e2966f3a-399a-4657-b004-6fd2dd53f7e9", "event_id": "a341a343-16e6-4dc4-bec1-c1d02aad673d", "parent_event_id": "e2966f3a-399a-4657-b004-6fd2dd53f7e9", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 558, "start_time": "2024-06-20T16:21:49.669Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_101", "variant_name": null}, {"function_name": "Fn_multiple_function_101", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_101\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number1\":36,\"number2\":24,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_101_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Generate a music scale progression in a specific key with a given tempo and duration.\n  function_name: 'music_generator.generate_scale_progression' or null,\n  // The key in which to generate the scale progression.\n  key: string,\n  // The tempo of the scale progression in BPM.\n  tempo: int,\n  // The duration of each note in beats.\n  duration: int,\n  // The type of scale to generate. Defaults to 'major'. (default: major)\n  scale_type: string or null,\n} or {\n  // Calculate the highest common factor of two numbers.\n  function_name: 'math.hcf' or null,\n  // First number.\n  number1: int,\n  // Second number.\n  number2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the highest common factor of 36 and 24."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"math.hcf\",\n  \"number1\": 36,\n  \"number2\": 24\n}", "metadata": {"logprobs": null, "prompt_tokens": 217, "output_tokens": 37, "total_tokens": 254, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e2966f3a-399a-4657-b004-6fd2dd53f7e9", "event_id": "e2966f3a-399a-4657-b004-6fd2dd53f7e9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 106469, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_101", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b134e89d-3c45-40cc-90e4-0c2eae67358a", "event_id": "6a7fd409-81bb-4987-8765-d3ff9bc4f8e1", "parent_event_id": "b134e89d-3c45-40cc-90e4-0c2eae67358a", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 718, "start_time": "2024-06-20T16:21:50.228Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_102", "variant_name": null}, {"function_name": "Fn_multiple_function_102", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_102\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"num1\":12,\"num2\":18,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_102_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the greatest common divisor of two integers.\n  function_name: 'math.gcd' or null,\n  // First number.\n  num1: int,\n  // Second number.\n  num2: int,\n} or {\n  // Retrieve a list of the most influential or landmark cases in a specific field of law.\n  function_name: 'get_top_cases' or null,\n  // The specific field of law e.g., constitutional law, criminal law, etc.\n  field_of_law: string,\n  // The number of top cases to retrieve.\n  top_number: int,\n  // The country where the law cases should be retrieved from. Default is US.\n  country: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the greatest common divisor (GCD) of 12 and 18"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"math.gcd\",\n  \"num1\": 12,\n  \"num2\": 18\n}", "metadata": {"logprobs": null, "prompt_tokens": 206, "output_tokens": 46, "total_tokens": 252, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b134e89d-3c45-40cc-90e4-0c2eae67358a", "event_id": "b134e89d-3c45-40cc-90e4-0c2eae67358a", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 107188, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_102", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bb502ffe-90d3-433e-8dc0-27d834e08dd3", "event_id": "99fd22ab-204d-4ed9-9aaa-98dd9675b868", "parent_event_id": "bb502ffe-90d3-433e-8dc0-27d834e08dd3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1876, "start_time": "2024-06-20T16:21:50.947Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_104", "variant_name": null}, {"function_name": "Fn_multiple_function_104", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_104\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_velocity\":0,\"height\":100,\"meta\":\"Value\",\"gravity\":9.8}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_104_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the current chess rating of a given player\n  function_name: 'chess.rating' or null,\n  // The full name of the chess player.\n  player_name: string,\n  // The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'.\n  variant: string or null,\n} or {\n  // Retrieves details about a court case using its docket number and location.\n  function_name: 'court_case.search' or null,\n  // The docket number for the case.\n  docket_number: string,\n  // The location where the case is registered, in the format: city, state, e.g., Dallas, TX.\n  location: string,\n  // Option to return the full text of the case ruling. (default: false)\n  full_text: bool or null,\n} or {\n  // Calculate the final speed of an object dropped from a certain height without air resistance.\n  function_name: 'calculate_final_speed' or null,\n  // The initial velocity of the object.\n  initial_velocity: int,\n  // The height from which the object is dropped.\n  height: int,\n  // The gravitational acceleration. Default is 9.8 m/s^2.\n  gravity: float or null,\n} or {\n  // Retrieve the date of a historical event.\n  function_name: 'get_event_date' or null,\n  // The name of the historical event.\n  event: string,\n  // Location where the event took place. Defaults to global if not specified\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the final speed of an object dropped from 100 m without air resistance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"calculate_final_speed\",\n  \"initial_velocity\": 0,\n  \"height\": 100,\n  \"gravity\": 9.8\n}\n\nThe final speed of an object dropped from 100 m without air resistance can be calculated using the formula:\n\nv_f = sqrt(v_i^2 + 2*g*h)\n\nWhere:\n- v_f is the final velocity\n- v_i is the initial velocity (0 m/s)\n- g is the gravitational acceleration (9.8 m/s^2)\n- h is the height (100 m)\n\nPlugging in the values:\nv_f = sqrt(0^2 + 2 * 9.8 * 100)\nv_f = sqrt(1960)\nv_f = 44.21 m/s\n\nSo the final speed of the object dropped from 100 m without air resistance is 44.21 m/s.", "metadata": {"logprobs": null, "prompt_tokens": 428, "output_tokens": 242, "total_tokens": 670, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bb502ffe-90d3-433e-8dc0-27d834e08dd3", "event_id": "bb502ffe-90d3-433e-8dc0-27d834e08dd3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 109065, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_104", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e9020d8d-c572-4cad-bdae-2eaca9a7349e", "event_id": "2a6ef214-44ec-41b6-947c-841a0f483e0c", "parent_event_id": "e9020d8d-c572-4cad-bdae-2eaca9a7349e", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 989, "start_time": "2024-06-20T16:21:52.825Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_105", "variant_name": null}, {"function_name": "Fn_multiple_function_105", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_105\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"origin\":\"New York City\",\"destination\":\"Washington D.C.\",\"meta\":\"Value\",\"unit\":\"kilometers\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_105_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the current retail price of a specific musical instrument.\n  function_name: 'instrument_price.get' or null,\n  // The brand of the instrument.\n  brand: string,\n  // The specific model of the instrument.\n  model: string,\n  // The color or type of finish on the instrument.\n  finish: string,\n} or {\n  // Calculate the shortest driving distance between two locations.\n  function_name: 'get_shortest_driving_distance' or null,\n  // Starting point of the journey.\n  origin: string,\n  // End point of the journey.\n  destination: string,\n  // Preferred unit of distance (optional, default is kilometers).\n  unit: string or null,\n} or {\n  // Look up the function of a given molecule in a specified organelle.\n  function_name: 'cell_biology.function_lookup' or null,\n  // The molecule of interest.\n  molecule: string,\n  // The organelle of interest.\n  organelle: string,\n  // If set to true, a specific function of the molecule within the organelle will be provided, if such information exists.\n  specific_function: bool,\n} or {\n  // Retrieve the scientist's name who is credited for a specific scientific discovery or theory.\n  function_name: 'get_scientist_for_discovery' or null,\n  // The scientific discovery or theory.\n  discovery: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the shortest driving distance between New York City and Washington D.C."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_shortest_driving_distance\",\n  \"origin\": \"New York City\",\n  \"destination\": \"Washington D.C.\",\n  \"unit\": \"kilometers\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 365, "output_tokens": 51, "total_tokens": 416, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e9020d8d-c572-4cad-bdae-2eaca9a7349e", "event_id": "e9020d8d-c572-4cad-bdae-2eaca9a7349e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 110056, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_105", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6b16c081-8d83-42de-a675-250c17c4b43c", "event_id": "f6682513-f866-480e-8c4b-cfd7ecd320e5", "parent_event_id": "6b16c081-8d83-42de-a675-250c17c4b43c", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T16:21:53.816Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_106", "variant_name": null}, {"function_name": "Fn_multiple_function_106", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_106\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"current\":5,\"radius\":4,\"meta\":\"Value\",\"permeability\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_106_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Book concert tickets for a specific artist in a specified city.\n  function_name: 'concert_booking.book_ticket' or null,\n  // The artist you want to book tickets for.\n  artist: string,\n  // The city where the concert is.\n  city: string,\n  // Number of tickets required. Default is 1.\n  num_tickets: int or null,\n} or {\n  // Calculate the magnetic field produced at the center of a circular loop carrying current.\n  function_name: 'calculate_magnetic_field' or null,\n  // The current through the circular loop in Amperes.\n  current: int,\n  // The radius of the circular loop in meters.\n  radius: int,\n  // The magnetic permeability. Default is permeability in free space, 0.01\n  permeability: float or null,\n} or {\n  // Find details of lawsuits involving a specific company from a given year.\n  function_name: 'lawsuit_details.find' or null,\n  // Name of the company.\n  company_name: string,\n  // Year of the lawsuit.\n  year: int,\n  // Type of the lawsuit, e.g., 'IPR', 'Patent', 'Commercial', etc. This is an optional parameter. Default is 'all'\n  case_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the magnetic field produced at the center of a circular loop carrying current of 5 Ampere with a radius of 4 meters"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_magnetic_field\",\n  \"current\": 5,\n  \"radius\": 4,\n  \"permeability\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 364, "output_tokens": 44, "total_tokens": 408, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6b16c081-8d83-42de-a675-250c17c4b43c", "event_id": "6b16c081-8d83-42de-a675-250c17c4b43c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 110874, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_106", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6b30e886-52ce-4d35-b673-3191c575c29f", "event_id": "2b29eff4-5834-4311-9086-55430359882d", "parent_event_id": "6b30e886-52ce-4d35-b673-3191c575c29f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T16:21:54.633Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_107", "variant_name": null}, {"function_name": "Fn_multiple_function_107", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_107\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"charge\":0.01,\"distance\":4,\"meta\":\"Value\",\"medium\":\"vacuum\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_107_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Combine two primary paint colors and adjust the resulting color's lightness level.\n  function_name: 'mix_paint_color' or null,\n  // The first primary color to be mixed.\n  color1: string,\n  // The second primary color to be mixed.\n  color2: string,\n  // The desired lightness level of the resulting color in percentage. The default level is set to 50%.\n  lightness: int or null,\n} or {\n  // Convert cooking measurements from one unit to another.\n  function_name: 'cooking_conversion.convert' or null,\n  // The quantity to be converted.\n  quantity: int,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n  // The item to be converted.\n  item: string,\n} or {\n  // Examine the social dynamics and interactions within a group based on the personality traits and group size.\n  function_name: 'group_dynamics.pattern' or null,\n  // The total group size.\n  total: int,\n  // The number of extroverted members in the group.\n  extroverts: int,\n  // The number of introverted members in the group.\n  introverts: int,\n} or {\n  // Calculate the electric field strength at a certain distance from a point charge.\n  function_name: 'calculate_electric_field_strength' or null,\n  // The charge in Coulombs.\n  charge: float,\n  // The distance from the charge in meters.\n  distance: int,\n  // The medium in which the charge and the point of calculation is located. Default is 'vacuum'.\n  medium: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the electric field strength 4 meters away from a charge of 0.01 Coulombs."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_electric_field_strength\",\n  \"charge\": 0.01,\n  \"distance\": 4,\n  \"medium\": \"vacuum\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 449, "output_tokens": 48, "total_tokens": 497, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6b30e886-52ce-4d35-b673-3191c575c29f", "event_id": "6b30e886-52ce-4d35-b673-3191c575c29f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 111592, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_107", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7e7c6ccd-0eeb-4b3b-b3a9-8d7f26c48067", "event_id": "3b49d131-04ea-4f40-91f3-8e0f459c6ab3", "parent_event_id": "7e7c6ccd-0eeb-4b3b-b3a9-8d7f26c48067", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1023, "start_time": "2024-06-20T16:21:55.351Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_108", "variant_name": null}, {"function_name": "Fn_multiple_function_108", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_108\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"mass\":45,\"volume\":15,\"meta\":\"Value\",\"unit\":\"kg/m\u00b3\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_108_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Combine two primary paint colors and adjust the resulting color's lightness level.\n  function_name: 'mix_paint_color' or null,\n  // The first primary color to be mixed.\n  color1: string,\n  // The second primary color to be mixed.\n  color2: string,\n  // The desired lightness level of the resulting color in percentage. The default level is set to 50%.\n  lightness: int or null,\n} or {\n  // Calculate the density of a substance based on its mass and volume.\n  function_name: 'calculate_density' or null,\n  // The mass of the substance in kilograms.\n  mass: int,\n  // The volume of the substance in cubic meters.\n  volume: int,\n  // The unit of density. Default is kg/m\u00b3\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the density of a substance with a mass of 45 kg and a volume of 15 m\u00b3?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_density\",\n  \"mass\": 45,\n  \"volume\": 15,\n  \"unit\": \"kg/m\u00b3\"\n}\n\nThe density of the substance with a mass of 45 kg and a volume of 15 m\u00b3 is 3 kg/m\u00b3.", "metadata": {"logprobs": null, "prompt_tokens": 241, "output_tokens": 78, "total_tokens": 319, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7e7c6ccd-0eeb-4b3b-b3a9-8d7f26c48067", "event_id": "7e7c6ccd-0eeb-4b3b-b3a9-8d7f26c48067", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 112617, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_108", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e58f9f47-6b95-4663-b102-50b9794d07c6", "event_id": "b2944319-4591-46b2-af73-ba5ae06cc11f", "parent_event_id": "e58f9f47-6b95-4663-b102-50b9794d07c6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 716, "start_time": "2024-06-20T16:21:56.376Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_109", "variant_name": null}, {"function_name": "Fn_multiple_function_109", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_109\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"temp\":298,\"volume\":10,\"meta\":\"Value\",\"gas\":\"air\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_109_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the heat capacity at constant pressure of air using its temperature and volume.\n  function_name: 'calc_heat_capacity' or null,\n  // The temperature of the gas in Kelvin.\n  temp: int,\n  // The volume of the gas in m^3.\n  volume: int,\n  // Type of gas, with air as default.\n  gas: string or null,\n} or {\n  // Calculate the discounted cash flow of a bond for a given annual coupon payment, time frame and discount rate.\n  function_name: 'calculate_discounted_cash_flow' or null,\n  // The annual coupon payment.\n  coupon_payment: float,\n  // The time frame in years for which coupon payment is made.\n  period: int,\n  // The discount rate.\n  discount_rate: float,\n  // The face value of the bond, default is $1000.\n  face_value: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the heat capacity at constant pressure for air, given its temperature is 298K and volume is 10 m^3."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calc_heat_capacity\",\n  \"temp\": 298,\n  \"volume\": 10,\n  \"gas\": \"air\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 268, "output_tokens": 44, "total_tokens": 312, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e58f9f47-6b95-4663-b102-50b9794d07c6", "event_id": "e58f9f47-6b95-4663-b102-50b9794d07c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 113334, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_109", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9c664e36-ea0f-4b17-81fa-9a25232d1a97", "event_id": "8eac989c-2e02-46b6-a2e1-80eb9e0a8f85", "parent_event_id": "9c664e36-ea0f-4b17-81fa-9a25232d1a97", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1011, "start_time": "2024-06-20T16:21:57.094Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_110", "variant_name": null}, {"function_name": "Fn_multiple_function_110", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_110\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cell_compartment\":\"plasma membrane\",\"meta\":\"Value\",\"include_description\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_110_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate the most popular exhibitions based on criteria like location, time, art form, and user ratings.\n  function_name: 'find_exhibition' or null,\n  // The city where the exhibition is held, e.g., New York, NY.\n  location: string,\n  // The form of art the exhibition is displaying e.g., sculpture.\n  art_form: string,\n  // The month of exhibition. Default value will return upcoming events.\n  month: string or null,\n  // Select exhibitions with user rating threshold. Default is 'high'\n  user_ratings: 'low' or 'average' or 'high' or null,\n} or {\n  // Finds the type of a genetic mutation based on its SNP (Single Nucleotide Polymorphism) ID.\n  function_name: 'mutation_type.find' or null,\n  // The ID of the Single Nucleotide Polymorphism (SNP) mutation.\n  snp_id: string,\n  // Species in which the SNP occurs, default is 'Homo sapiens' (Humans).\n  species: string or null,\n} or {\n  // Get the list of proteins in a specific cell compartment.\n  function_name: 'cellbio.get_proteins' or null,\n  // The specific cell compartment.\n  cell_compartment: string,\n  // Set true if you want a brief description of each protein. (default: false)\n  include_description: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the names of proteins found in the plasma membrane?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"cellbio.get_proteins\",\n  \"cell_compartment\": \"plasma membrane\",\n  \"include_description\": false\n}\n\nThis query will return the names of proteins found in the plasma membrane cell compartment, without including a description of each protein.", "metadata": {"logprobs": null, "prompt_tokens": 380, "output_tokens": 78, "total_tokens": 458, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9c664e36-ea0f-4b17-81fa-9a25232d1a97", "event_id": "9c664e36-ea0f-4b17-81fa-9a25232d1a97", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 114347, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_110", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "302a0bd0-ccac-4958-a483-b843e6319a3c", "event_id": "52b48f19-9807-41b2-8f30-149fc3e5c873", "parent_event_id": "302a0bd0-ccac-4958-a483-b843e6319a3c", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 929, "start_time": "2024-06-20T16:21:58.106Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_111", "variant_name": null}, {"function_name": "Fn_multiple_function_111", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_111\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"snp_id\":\"rs6034464\",\"meta\":\"Value\",\"species\":\"Homo sapiens\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_111_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve a list of collectable items in a specific game during a specified season.\n  function_name: 'get_collectables_in_season' or null,\n  // Name of the game.\n  game_name: string,\n  // The season for which to retrieve the collectable items.\n  season: string,\n  // The type of item to search for. Default is 'all'. Possible values: 'all', 'bug', 'fish', 'sea creatures', etc.\n  item_type: string or null,\n} or {\n  // Finds the type of a genetic mutation based on its SNP (Single Nucleotide Polymorphism) ID.\n  function_name: 'mutation_type.find' or null,\n  // The ID of the Single Nucleotide Polymorphism (SNP) mutation.\n  snp_id: string,\n  // Species in which the SNP occurs, default is 'Homo sapiens' (Humans).\n  species: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the type of gene mutation based on SNP (Single Nucleotide Polymorphism) ID rs6034464."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"mutation_type.find\",\n  \"snp_id\": \"rs6034464\",\n  \"species\": \"Homo sapiens\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 283, "output_tokens": 45, "total_tokens": 328, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "302a0bd0-ccac-4958-a483-b843e6319a3c", "event_id": "302a0bd0-ccac-4958-a483-b843e6319a3c", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 115278, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_111", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d7b67c81-0eaa-4628-8a21-8a338d96bf86", "event_id": "011e47bc-eb66-4c2d-825f-cc941e668614", "parent_event_id": "d7b67c81-0eaa-4628-8a21-8a338d96bf86", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 718, "start_time": "2024-06-20T16:21:59.037Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_112", "variant_name": null}, {"function_name": "Fn_multiple_function_112", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_112\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"allele_frequency\":0.3,\"genotype\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_112_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the frequency of homozygous dominant genotype based on the allele frequency using Hardy Weinberg Principle.\n  function_name: 'calculate_genotype_frequency' or null,\n  // The frequency of the dominant allele in the population.\n  allele_frequency: float,\n  // The genotype which frequency is needed, default is homozygous dominant. \n  genotype: 'AA' or 'Aa' or 'aa',\n} or {\n  // Calculate the factorial of a given number.\n  function_name: 'math.factorial' or null,\n  // The number for which factorial needs to be calculated.\n  number: int,\n} or {\n  // Locate a flute for sale based on specific requirements.\n  function_name: 'find_flute' or null,\n  // The brand of the flute. Example, 'Yamaha'\n  brand: string,\n  // The specifications of the flute desired.\n  specs: [\n    'open hole' or 'C foot' or 'silver headjoint'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the genotype frequency of AA genotype in a population, given that allele frequency of A is 0.3?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_genotype_frequency\",\n  \"allele_frequency\": 0.3,\n  \"genotype\": \"AA\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 300, "output_tokens": 43, "total_tokens": 343, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d7b67c81-0eaa-4628-8a21-8a338d96bf86", "event_id": "d7b67c81-0eaa-4628-8a21-8a338d96bf86", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 115997, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_112", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4e774975-597c-4f72-8d58-559ce92b8a13", "event_id": "df611816-a58c-4a62-b91e-9ce45fb5b146", "parent_event_id": "4e774975-597c-4f72-8d58-559ce92b8a13", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 816, "start_time": "2024-06-20T16:21:59.756Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_113", "variant_name": null}, {"function_name": "Fn_multiple_function_113", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_113\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Yellowstone National Park\",\"years\":5,\"meta\":\"Value\",\"include_human_impact\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_113_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Predicts the forest growth over the next N years based on current trends.\n  function_name: 'forest_growth_forecast' or null,\n  // The location where you want to predict forest growth.\n  location: string,\n  // The number of years for the forecast.\n  years: int,\n  // Whether or not to include the impact of human activities in the forecast. If not provided, defaults to false.\n  include_human_impact: bool or null,\n} or {\n  // Retrieve the scientist's name who is credited for a specific scientific discovery or theory.\n  function_name: 'get_scientist_for_discovery' or null,\n  // The scientific discovery or theory.\n  discovery: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the growth of forest in Yellowstone National Park for the next 5 years including human impact."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"forest_growth_forecast\",\n  \"location\": \"Yellowstone National Park\",\n  \"years\": 5,\n  \"include_human_impact\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 207, "output_tokens": 50, "total_tokens": 257, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4e774975-597c-4f72-8d58-559ce92b8a13", "event_id": "4e774975-597c-4f72-8d58-559ce92b8a13", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 116815, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_113", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "7c08f43a-9337-43e8-a547-0646b4da8a76", "event_id": "46538312-876e-48a5-a2fb-b6820fd2729c", "parent_event_id": "7c08f43a-9337-43e8-a547-0646b4da8a76", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1582, "start_time": "2024-06-20T16:22:00.574Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_114", "variant_name": null}, {"function_name": "Fn_multiple_function_114", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_114\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"trait_values\":[0.8,0.7],\"trait_contributions\":[0.4,0.6],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_114_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the current chess rating of a given player\n  function_name: 'chess.rating' or null,\n  // The full name of the chess player.\n  player_name: string,\n  // The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'.\n  variant: string or null,\n} or {\n  // Calculate the expected evolutionary fitness of a creature based on the individual values and contributions of its traits.\n  function_name: 'calculate_fitness' or null,\n  // List of trait values, which are decimal numbers between 0 and 1, where 1 represents the trait maximally contributing to fitness.\n  trait_values: float[],\n  // List of the percentage contributions of each trait to the overall fitness, which must sum to 1.\n  trait_contributions: float[],\n} or {\n  // Retrieve information of items from Walmart including stock availability.\n  function_name: 'walmart.purchase' or null,\n  // Location of the nearest Walmart.\n  loc: string,\n  // Items to be purchased listed in an array.\n  product_list: string[],\n  // Size of the product pack if applicable. The size of the array should be equal to product_list. Default is empty array.\n  pack_size: int[],\n} or {\n  // Locate nearby lawyers based on specific criteria like specialty, fee per hour and city.\n  function_name: 'lawyer.find_nearby' or null,\n  // The city and state, e.g. Chicago, IL.\n  city: string,\n  // Specialization of the lawyer.\n  specialty: [\n    'Civil' or 'Divorce' or 'Immigration' or 'Business' or 'Criminal'\n  ],\n  // Hourly fee charged by lawyer\n  fee: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the expected evolutionary fitness of a creature, with trait A contributing to 40% of the fitness and trait B contributing 60%, if trait A has a value of 0.8 and trait B a value of 0.7."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the expected evolutionary fitness of the creature, we can use the schema provided:\n\n{\n  \"function_name\": \"calculate_fitness\",\n  \"trait_values\": [0.8, 0.7],\n  \"trait_contributions\": [0.4, 0.6]\n}\n\nBased on the information given:\n- Trait A has a value of 0.8 and contributes 40% to the overall fitness.\n- Trait B has a value of 0.7 and contributes 60% to the overall fitness.\n\nThe formula to calculate the expected evolutionary fitness is:\n\nfitness = sum(trait_values * trait_contributions)\n\nPlugging in the values:\nfitness = (0.8 * 0.4) + (0.7 * 0.6)\nfitness = 0.32 + 0.42\nfitness = 0.74\n\nTherefore, the expected evolutionary fitness of the creature is 0.74.", "metadata": {"logprobs": null, "prompt_tokens": 507, "output_tokens": 221, "total_tokens": 728, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "7c08f43a-9337-43e8-a547-0646b4da8a76", "event_id": "7c08f43a-9337-43e8-a547-0646b4da8a76", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 118399, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_114", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "64c4fa7f-23a4-4476-8db8-012618423584", "event_id": "2239442b-b29f-4ef9-a028-bf53bd7fd037", "parent_event_id": "64c4fa7f-23a4-4476-8db8-012618423584", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 871, "start_time": "2024-06-20T16:22:02.158Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_115", "variant_name": null}, {"function_name": "Fn_multiple_function_115", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_115\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"species\":\"Homo Sapiens\",\"years\":50,\"meta\":\"Value\",\"model\":\"Darwin\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_115_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Modify an existing painting's attributes such as size, medium, and color.\n  function_name: 'modify_painting' or null,\n  // The size of the painting in inches, width by height.\n  size: string,\n  // The medium of the painting, such as oil, acrylic, etc.\n  medium: string,\n  // The dominant color of the painting. Default ''\n  dominant_color: string or null,\n} or {\n  // Predict the evolutionary rate for a specific species for a given timeframe.\n  function_name: 'prediction.evolution' or null,\n  // The species that the evolution rate will be predicted for.\n  species: string,\n  // Number of years for the prediction.\n  years: int,\n  // The model used to make the prediction, options: 'Darwin', 'Lamarck', default is 'Darwin'.\n  model: string or null,\n} or {\n  // Calculate the probability of an event.\n  function_name: 'calculate_probability' or null,\n  // Total number of possible outcomes.\n  total_outcomes: int,\n  // Number of outcomes considered as 'successful'.\n  favorable_outcomes: int,\n  // Number of decimal places to round the result to. (default: 2)\n  round_to: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the predictions of the evolutionary rate for Homo Sapiens for next 50 years using Darwin model"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"prediction.evolution\",\n  \"species\": \"Homo Sapiens\",\n  \"years\": 50,\n  \"model\": \"Darwin\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 348, "output_tokens": 56, "total_tokens": 404, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "64c4fa7f-23a4-4476-8db8-012618423584", "event_id": "64c4fa7f-23a4-4476-8db8-012618423584", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 119271, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_115", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "cfdca3d3-be27-4a76-9770-c5eabe6e6aaa", "event_id": "7b16337c-a499-4235-b1d6-9d00d73be926", "parent_event_id": "cfdca3d3-be27-4a76-9770-c5eabe6e6aaa", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 858, "start_time": "2024-06-20T16:22:03.030Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_116", "variant_name": null}, {"function_name": "Fn_multiple_function_116", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_116\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Manhattan\",\"food_type\":\"Thai\",\"number\":5,\"dietary_requirements\":[\"vegan\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_116_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for a musical instrument within specified budget and of specific type.\n  function_name: 'find_instrument' or null,\n  // Your budget for the instrument.\n  budget: float,\n  // Type of the instrument\n  type: string,\n  // Maker of the instrument, Optional parameter. Default is 'all'\n  make: string or null,\n} or {\n  // Retrieves information about a specific stock based on company's name.\n  function_name: 'get_stock_info' or null,\n  // The name of the company.\n  company_name: string,\n  // Level of detail for stock information. Can be 'summary' or 'detailed'.\n  detail_level: string,\n  // The stock market of interest. Default is 'NASDAQ'\n  market: string or null,\n} or {\n  // Locate nearby restaurants based on location and food preferences.\n  function_name: 'find_restaurants' or null,\n  // The specific location or area.\n  location: string,\n  // The type of food preferred.\n  food_type: string,\n  // Number of results to return.\n  number: int,\n  // Special dietary requirements, e.g. vegan, gluten-free. (default: None)\n  dietary_requirements: string[],\n} or {\n  // Retrieve the match schedule for a specific sports team.\n  function_name: 'sports.match_schedule' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The number of upcoming matches you want to get.\n  num_matches: int,\n  // The sports league of the team. This is an optional parameter. Default 'all'\n  league: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: I want to find 5 restaurants nearby my location, Manhattan, offering Thai food and a vegan menu."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_restaurants\",\n  \"location\": \"Manhattan\",\n  \"food_type\": \"Thai\",\n  \"number\": 5,\n  \"dietary_requirements\": [\"vegan\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 449, "output_tokens": 55, "total_tokens": 504, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "cfdca3d3-be27-4a76-9770-c5eabe6e6aaa", "event_id": "cfdca3d3-be27-4a76-9770-c5eabe6e6aaa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 120130, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_116", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b0cbbda9-62c7-453b-be92-439722f3b3a1", "event_id": "ac4340bb-ad2f-4d1f-a2c8-713911d0480e", "parent_event_id": "b0cbbda9-62c7-453b-be92-439722f3b3a1", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 612, "start_time": "2024-06-20T16:22:03.890Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_117", "variant_name": null}, {"function_name": "Fn_multiple_function_117", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_117\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight\":85,\"height\":180,\"meta\":\"Value\",\"unit\":\"metric\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_117_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the Body Mass Index (BMI) of a person.\n  function_name: 'calculate_bmi' or null,\n  // Weight of the person in kilograms.\n  weight: int,\n  // Height of the person in centimeters.\n  height: int,\n  // Optional parameter to choose between 'imperial' and 'metric' systems. Default is 'metric'.\n  unit: string or null,\n} or {\n  // Get the total net worth of a sports celebrity based on most recent data.\n  function_name: 'celebrity_net_worth.get' or null,\n  // The full name of the sports celebrity.\n  name: string,\n  // The currency in which the net worth will be returned. Default is 'USD'.\n  currency: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Body Mass Index (BMI) of a person with a weight of 85 kilograms and height of 180 cm."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_bmi\",\n  \"weight\": 85,\n  \"height\": 180,\n  \"unit\": \"metric\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 232, "output_tokens": 43, "total_tokens": 275, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b0cbbda9-62c7-453b-be92-439722f3b3a1", "event_id": "b0cbbda9-62c7-453b-be92-439722f3b3a1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 120744, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_117", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "bf97822f-702c-42e5-9ea4-7f3502725e33", "event_id": "3f619e4d-2f1a-47dc-b34c-cc189036f78a", "parent_event_id": "bf97822f-702c-42e5-9ea4-7f3502725e33", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 692, "start_time": "2024-06-20T16:22:04.503Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_118", "variant_name": null}, {"function_name": "Fn_multiple_function_118", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_118\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"weight_kg\":70,\"height_m\":1.75,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_118_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the Body Mass Index (BMI) given a person's weight and height.\n  function_name: 'calculate_BMI' or null,\n  // The weight of the person in kilograms.\n  weight_kg: int,\n  // The height of the person in meters.\n  height_m: float,\n} or {\n  // Retrieve the details of the last match played by a specified soccer club.\n  function_name: 'soccer.get_last_match' or null,\n  // The name of the soccer club.\n  team_name: string,\n  // If true, include match statistics like possession, shots on target etc. Default is false.\n  include_stats: bool or null,\n} or {\n  // Books a hotel room given the location, room type, stay duration and any additional preferences.\n  function_name: 'hotel_booking' or null,\n  // The city where you want to book the hotel.\n  location: string,\n  // Type of the room required. Options: 'single', 'double', 'deluxe', etc.\n  room_type: string,\n  // The number of nights you want to book the hotel for.\n  duration: int,\n  // The date when your stay begins.\n  start_date: string,\n  // Optional preferences of stay at the hotel. Default is empty array.\n  preferences: [\n    'pet_friendly' or 'gym' or 'swimming_pool' or 'free_breakfast' or 'parking'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the BMI (Body Mass Index) of a person who weighs 70kg and is 1.75m tall."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"calculate_BMI\",\n  \"weight_kg\": 70,\n  \"height_m\": 1.75\n}", "metadata": {"logprobs": null, "prompt_tokens": 398, "output_tokens": 50, "total_tokens": 448, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "bf97822f-702c-42e5-9ea4-7f3502725e33", "event_id": "bf97822f-702c-42e5-9ea4-7f3502725e33", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 121438, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_118", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fa4581e8-a626-4597-8ed5-c8562ce9b020", "event_id": "253ce853-4965-413b-bd7a-a36f9b8f8750", "parent_event_id": "fa4581e8-a626-4597-8ed5-c8562ce9b020", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1110, "start_time": "2024-06-20T16:22:05.197Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_119", "variant_name": null}, {"function_name": "Fn_multiple_function_119", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_119\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"actor_name\":\"Leonardo DiCaprio\",\"year\":2010,\"meta\":\"Value\",\"category\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_119_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Book a direct flight for a specific date and time from departure location to destination location.\n  function_name: 'flight.book' or null,\n  // The location you are departing from.\n  departure_location: string,\n  // The location you are flying to.\n  destination_location: string,\n  // The date of the flight. Accepts standard date format e.g., 2022-04-28.\n  date: string,\n  // Preferred time of flight. Default is 'anytime'.\n  time: string or null,\n  // If set to true, only direct flights will be searched. Default is false\n  direct_flight: bool or null,\n} or {\n  // Search for lawsuits against a specific company within a specific time and location.\n  function_name: 'lawsuits_search' or null,\n  // The name of the company.\n  company_name: string,\n  // The location where the lawsuit was filed.\n  location: string,\n  // The year when the lawsuit was filed.\n  year: int,\n  // The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. If not specified, search for 'all' types by default.\n  case_type: string or null,\n} or {\n  // Searches the database to find all movies by a specific actor within a certain year.\n  function_name: 'imdb.find_movies_by_actor' or null,\n  // The name of the actor.\n  actor_name: string,\n  // The specific year to search in.\n  year: int,\n  // The category of the film (e.g. Drama, Comedy, etc). This parameter is optional. Default is 'all'.\n  category: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find all movies starring Leonardo DiCaprio in the year 2010 from IMDB database."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"imdb.find_movies_by_actor\",\n  \"actor_name\": \"Leonardo DiCaprio\",\n  \"year\": 2010,\n  \"category\": \"all\"\n}\n\nThis query will search the IMDB database to find all movies starring Leonardo DiCaprio that were released in the year 2010, regardless of the movie category.", "metadata": {"logprobs": null, "prompt_tokens": 454, "output_tokens": 100, "total_tokens": 554, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fa4581e8-a626-4597-8ed5-c8562ce9b020", "event_id": "fa4581e8-a626-4597-8ed5-c8562ce9b020", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 122549, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_119", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9844f113-9259-454b-95ca-14002491534f", "event_id": "f525ce4f-e842-4851-9424-2eab0deadfb4", "parent_event_id": "9844f113-9259-454b-95ca-14002491534f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 972, "start_time": "2024-06-20T16:22:06.309Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_120", "variant_name": null}, {"function_name": "Fn_multiple_function_120", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_120\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"table\":\"user\",\"conditions\":[{\"field\":\"age\",\"operation\":\">\",\"value\":\"25\"},{\"field\":\"job\",\"operation\":\"=\",\"value\":\"engineer\"}],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_120_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get the average batting score of a cricketer for specified past matches.\n  function_name: 'average_batting_score' or null,\n  // Name of the cricket player.\n  player_name: string,\n  // Number of past matches to consider for average calculation.\n  matches: int,\n  // Format of the cricket matches considered (e.g., 'T20', 'ODI', 'Test'). Default is 'T20'.\n  match_format: string or null,\n} or {\n  // Calculate the return on investment for a given stock based on its purchase price, sale price, and any dividends received.\n  function_name: 'calculate_return_on_investment' or null,\n  // The price the stock was bought at.\n  purchase_price: float,\n  // The price the stock was sold at.\n  sale_price: float,\n  // Any dividends received from the stock.\n  dividend: float or null,\n} or {\n  // Query the database based on certain conditions.\n  function_name: 'database.query' or null,\n  // Name of the table to query.\n  table: string,\n  // Conditions for the query.\n  conditions: [\n    {\n      // The field to apply the condition.\n      field: string,\n      // The operation to be performed.\n      operation: string,\n      // The value to be compared.\n      value: string,\n    }\n  ],\n} or {\n  // Calculates the probability of an event.\n  function_name: 'probability_of_event' or null,\n  // The number of successful outcomes.\n  success_outcomes: int,\n  // The total number of possible outcomes.\n  total_outcomes: int,\n  // When true, formats the output as a ratio instead of a decimal. Default is false.\n  format_as_ratio: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find records in database in user table where age is greater than 25 and job is 'engineer'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"database.query\",\n  \"table\": \"user\",\n  \"conditions\": [\n    {\n      \"field\": \"age\",\n      \"operation\": \">\",\n      \"value\": \"25\"\n    },\n    {\n      \"field\": \"job\",\n      \"operation\": \"=\",\n      \"value\": \"engineer\"\n    }\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 479, "output_tokens": 105, "total_tokens": 584, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9844f113-9259-454b-95ca-14002491534f", "event_id": "9844f113-9259-454b-95ca-14002491534f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 123523, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_120", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e02663fd-32b7-4173-82fe-4be2150eefa3", "event_id": "1dbc3800-1ad9-46d0-9d11-3c5fce9f87cb", "parent_event_id": "e02663fd-32b7-4173-82fe-4be2150eefa3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1583, "start_time": "2024-06-20T16:22:07.282Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_121", "variant_name": null}, {"function_name": "Fn_multiple_function_121", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_121\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance_in_light_years\":4,\"meta\":\"Value\",\"speed_of_light\":299792458}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_121_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the time taken for light to travel from a celestial body to another.\n  function_name: 'light_travel_time' or null,\n  // The distance between the two celestial bodies in light years.\n  distance_in_light_years: int,\n  // The speed of light in vacuum, in m/s. Default value is 299792458 m/s.\n  speed_of_light: int or null,\n} or {\n  // Order specified items from a Safeway location.\n  function_name: 'safeway.order' or null,\n  // The location of the Safeway store, e.g. Palo Alto, CA.\n  location: string,\n  // List of items to order.\n  items: string[],\n  // Quantity of each item in the order list.\n  quantity: int[],\n} or {\n  // Book a room in a specific hotel with particular preferences\n  function_name: 'book_hotel' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The location of the hotel.\n  location: string,\n  // The type of room preferred.\n  room_type: string,\n  // The starting date of the stay in format MM-DD-YYYY.\n  start_date: string,\n  // The duration of the stay in days.\n  stay_duration: int,\n  // The preferred view from the room, can be ignored if no preference. If none provided, assumes no preference. (default: No preference)\n  view: string or null,\n} or {\n  // Retrieve the latest exchange rate between two specified currencies.\n  function_name: 'latest_exchange_rate' or null,\n  // The currency you are converting from.\n  source_currency: string,\n  // The currency you are converting to.\n  target_currency: string,\n  // The amount to be converted. If omitted, exchange rate of 1 unit source currency is given. Default is 1.\n  amount: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much time will it take for the light to reach earth from a star 4 light years away?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To solve this problem, we can use the following schema:\n\n{\n  \"function_name\": \"light_travel_time\",\n  \"distance_in_light_years\": 4,\n  \"speed_of_light\": 299792458\n}\n\nExplanation:\n- The distance between the star and Earth is 4 light years.\n- The speed of light in a vacuum is 299,792,458 m/s.\n- To calculate the time it takes for the light to reach Earth, we can use the formula:\n\nTime = Distance / Speed\n\nPlugging in the values:\nTime = 4 light years / (299,792,458 m/s)\nTime = 4 years\n\nTherefore, it will take 4 years for the light from the star 4 light years away to reach Earth.", "metadata": {"logprobs": null, "prompt_tokens": 513, "output_tokens": 189, "total_tokens": 702, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e02663fd-32b7-4173-82fe-4be2150eefa3", "event_id": "e02663fd-32b7-4173-82fe-4be2150eefa3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 125108, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_121", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "035dbabd-332b-49e2-84d5-1df2f236efaa", "event_id": "b5274ceb-0a63-497b-8fc6-b442b1c6013c", "parent_event_id": "035dbabd-332b-49e2-84d5-1df2f236efaa", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1432, "start_time": "2024-06-20T16:22:08.867Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_122", "variant_name": null}, {"function_name": "Fn_multiple_function_122", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_122\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"base\":6,\"height\":10,\"meta\":\"Value\",\"unit\":\"square meters\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_122_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve directions from a starting location to an ending location, including options for route preferences.\n  function_name: 'map_service.get_directions' or null,\n  // Starting location for the route.\n  start: string,\n  // Ending location for the route.\n  end: string,\n  // Route features to avoid. Default is empty array.\n  avoid: [\n    'tolls' or 'highways' or 'ferries'\n  ],\n} or {\n  // Retrieve the inventor and year of invention based on the invention's name.\n  function_name: 'science_history.get_invention' or null,\n  // The name of the invention.\n  invention_name: string,\n  // Return the year of invention if set to true.\n  want_year: bool,\n} or {\n  // Calculate the area of a triangle.\n  function_name: 'geometry.area_triangle' or null,\n  // The length of the base of the triangle.\n  base: int,\n  // The height of the triangle from the base.\n  height: int,\n  // The measurement unit for the area. Defaults to square meters.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the area of a triangle with base 6 and height 10."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the area of a triangle with a base of 6 and a height of 10, the answer would be:\n\n{\n  \"function_name\": \"geometry.area_triangle\",\n  \"base\": 6,\n  \"height\": 10,\n  \"unit\": \"square meters\"\n}\n\nThe formula for the area of a triangle is:\nArea = 1/2 * base * height\n\nPlugging in the values:\nArea = 1/2 * 6 * 10\nArea = 30 square meters\n\nSo the area of the triangle with a base of 6 and a height of 10 is 30 square meters.", "metadata": {"logprobs": null, "prompt_tokens": 312, "output_tokens": 154, "total_tokens": 466, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "035dbabd-332b-49e2-84d5-1df2f236efaa", "event_id": "035dbabd-332b-49e2-84d5-1df2f236efaa", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 126541, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_122", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5a6e8d24-090c-4336-8732-9a167390e200", "event_id": "a945a156-f9d3-41b5-83cf-d2b24c468da9", "parent_event_id": "5a6e8d24-090c-4336-8732-9a167390e200", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 762, "start_time": "2024-06-20T16:22:10.300Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_123", "variant_name": null}, {"function_name": "Fn_multiple_function_123", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_123\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"predictors\":[\"Age\",\"Income\",\"Education\"],\"target\":\"Purchase_Amount\",\"meta\":\"Value\",\"standardize\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_123_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Convert cooking measurements from one unit to another.\n  function_name: 'cooking_conversion.convert' or null,\n  // The quantity to be converted.\n  quantity: int,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n  // The item to be converted.\n  item: string,\n} or {\n  // Build a linear regression model using given predictor variables and a target variable.\n  function_name: 'run_linear_regression' or null,\n  // Array containing the names of predictor variables.\n  predictors: string[],\n  // The name of target variable.\n  target: string,\n  // Option to apply standardization on the predictors. Defaults to False.\n  standardize: bool or null,\n} or {\n  // Locate a recipe based on name and its calorie content\n  function_name: 'find_recipe' or null,\n  // The recipe's name.\n  recipeName: string,\n  // The maximum calorie content of the recipe. (default: 1000)\n  maxCalories: int or null,\n} or {\n  // Generate a travel itinerary based on specific destination, duration and daily budget, with preferred exploration type.\n  function_name: 'travel_itinerary_generator' or null,\n  // Destination city of the trip.\n  destination: string,\n  // Number of days for the trip.\n  days: int,\n  // The maximum daily budget for the trip.\n  daily_budget: float,\n  // The preferred exploration type. (default: urban)\n  exploration_type: 'nature' or 'urban' or 'history' or 'culture' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Run a linear regression model with predictor variables 'Age', 'Income' and 'Education' and a target variable 'Purchase_Amount'. Also apply standardization."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"run_linear_regression\",\n  \"predictors\": [\"Age\", \"Income\", \"Education\"],\n  \"target\": \"Purchase_Amount\",\n  \"standardize\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 465, "output_tokens": 62, "total_tokens": 527, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5a6e8d24-090c-4336-8732-9a167390e200", "event_id": "5a6e8d24-090c-4336-8732-9a167390e200", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 127304, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_123", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e3cb3ccc-f337-4ab4-a45f-8fae22549842", "event_id": "803685c7-84a3-4ac2-925b-b411d3cff28f", "parent_event_id": "e3cb3ccc-f337-4ab4-a45f-8fae22549842", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1386, "start_time": "2024-06-20T16:22:11.064Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_124", "variant_name": null}, {"function_name": "Fn_multiple_function_124", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_124\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_outcomes\":52,\"favorable_outcomes\":4,\"meta\":\"Value\",\"round_to\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_124_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the probability of an event.\n  function_name: 'calculate_probability' or null,\n  // Total number of possible outcomes.\n  total_outcomes: int,\n  // Number of outcomes considered as 'successful'.\n  favorable_outcomes: int,\n  // Number of decimal places to round the result to. (default: 2)\n  round_to: int or null,\n} or {\n  // Retrieve all lawsuits involving a particular entity from specified jurisdiction.\n  function_name: 'lawsuit_search' or null,\n  // The entity involved in lawsuits.\n  entity: string,\n  // The jurisdiction for the lawsuit search.\n  county: string,\n  // The state for the lawsuit search. Default is California.\n  state: string or null,\n} or {\n  // Predict house price based on area, number of rooms and year of construction.\n  function_name: 'predict_house_price' or null,\n  // Area of the house in square feet.\n  area: int,\n  // Number of rooms in the house.\n  rooms: int,\n  // Year when the house was constructed.\n  year: int,\n  // The location or city of the house.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the probability of drawing a king from a deck of cards."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_probability\",\n  \"total_outcomes\": 52,\n  \"favorable_outcomes\": 4,\n  \"round_to\": 2\n}\n\nThe explanation:\n- There are 52 cards in a standard deck of playing cards.\n- There are 4 kings in a standard deck of playing cards.\n- Therefore, the probability of drawing a king from a deck of cards is 4 favorable outcomes out of 52 total outcomes.\n- Rounding the result to 2 decimal places gives us 0.08 or 8%.", "metadata": {"logprobs": null, "prompt_tokens": 318, "output_tokens": 146, "total_tokens": 464, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e3cb3ccc-f337-4ab4-a45f-8fae22549842", "event_id": "e3cb3ccc-f337-4ab4-a45f-8fae22549842", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 128692, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_124", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "55d5d131-22eb-48b0-86b5-d4c3dca38f3d", "event_id": "7a1dd820-5222-424f-80b3-5e67176a8fb2", "parent_event_id": "55d5d131-22eb-48b0-86b5-d4c3dca38f3d", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1695, "start_time": "2024-06-20T16:22:12.451Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_125", "variant_name": null}, {"function_name": "Fn_multiple_function_125", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_125\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_outcomes\":52,\"event_outcomes\":4,\"meta\":\"Value\",\"round\":2}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_125_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the power of one number raised to another.\n  function_name: 'math.power' or null,\n  // The base number.\n  base: float,\n  // The exponent.\n  exponent: float,\n  // The modulus. Default is None. Calculates pow(base, exponent) % mod when provided.\n  mod: int or null,\n} or {\n  // Calculate the probability of an event.\n  function_name: 'probabilities.calculate_single' or null,\n  // The total number of outcomes.\n  total_outcomes: int,\n  // The number of outcomes where the event occurs.\n  event_outcomes: int,\n  // Round the answer to a specified number of decimal places. Defaults to 2.\n  round: int or null,\n} or {\n  // Retrieve the sequence of a DNA molecule with the given id from a public database.\n  function_name: 'fetch_DNA_sequence' or null,\n  // Unique ID of the DNA molecule in the database.\n  DNA_id: string,\n  // Optional parameter to get sequence in specific format (default to 'fasta').\n  format: string or null,\n  // Optional parameter to include certain number of base pairs upstream the DNA sequence (default to 0).\n  upstream: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the probability of drawing a king from a well shuffled standard deck of 52 cards?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the schema:\n\n{\n  \"function_name\": \"probabilities.calculate_single\",\n  \"total_outcomes\": 52,\n  \"event_outcomes\": 4,\n  \"round\": 2\n}\n\nExplanation:\n- In a standard deck of 52 cards, there are 4 kings.\n- The total number of outcomes (total number of cards) is 52.\n- The number of outcomes where the event (drawing a king) occurs is 4.\n- The probability of drawing a king is calculated as 4 / 52 = 0.0769, which rounded to 2 decimal places is 0.08.", "metadata": {"logprobs": null, "prompt_tokens": 344, "output_tokens": 155, "total_tokens": 499, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "55d5d131-22eb-48b0-86b5-d4c3dca38f3d", "event_id": "55d5d131-22eb-48b0-86b5-d4c3dca38f3d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 130388, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_125", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d2f26f87-85b1-4119-a68c-0956499c7cbf", "event_id": "116487e3-4ecd-41a0-b66b-233a2cf56e68", "parent_event_id": "d2f26f87-85b1-4119-a68c-0956499c7cbf", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 913, "start_time": "2024-06-20T16:22:14.147Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_126", "variant_name": null}, {"function_name": "Fn_multiple_function_126", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_126\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"group1\":[3,4,5,6,4],\"group2\":[7,8,9,8,7],\"meta\":\"Value\",\"equal_variance\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_126_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate the closest sushi restaurant based on certain criteria, such as the presence of a patio.\n  function_name: 'restaurant_search.find_closest' or null,\n  // The city, for instance Boston, MA\n  location: string,\n  // Type of food like Sushi.\n  cuisine: string,\n  // Preferred amenities in the restaurant. Default is empty array.\n  amenities: [\n    'Patio' or 'Wi-Fi' or 'Happy Hour' or 'Wheelchair Accessible'\n  ],\n} or {\n  // Runs a two sample t-test for two given data groups.\n  function_name: 'run_two_sample_ttest' or null,\n  // First group of data points.\n  group1: int[],\n  // Second group of data points.\n  group2: int[],\n  // Assumption about whether the two samples have equal variance. (default: True)\n  equal_variance: bool or null,\n} or {\n  // Retrieve the common personality traits of people based on their hobbies or activities.\n  function_name: 'get_personality_traits' or null,\n  // The hobby or activity of interest.\n  hobby: string,\n  // The number of top traits to return, default is 5\n  trait_count: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Run a two sample T-test to compare the average of Group A [3, 4, 5, 6, 4] and Group B [7, 8, 9, 8, 7] assuming equal variance."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema for the two sample T-test request:\n\n{\n  \"function_name\": \"run_two_sample_ttest\",\n  \"group1\": [3, 4, 5, 6, 4],\n  \"group2\": [7, 8, 9, 8, 7],\n  \"equal_variance\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 384, "output_tokens": 87, "total_tokens": 471, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d2f26f87-85b1-4119-a68c-0956499c7cbf", "event_id": "d2f26f87-85b1-4119-a68c-0956499c7cbf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 131303, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_126", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5f48390e-f9ce-4330-8852-acf288749504", "event_id": "bf78dd74-fe1f-47be-9526-5ebd865b65d5", "parent_event_id": "5f48390e-f9ce-4330-8852-acf288749504", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 871, "start_time": "2024-06-20T16:22:15.062Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_127", "variant_name": null}, {"function_name": "Fn_multiple_function_127", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_127\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dataset_A\":[12,24,36],\"dataset_B\":[15,30,45],\"meta\":\"Value\",\"alpha\":0.05}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_127_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find upcoming events of a specific genre in a given location.\n  function_name: 'event_finder.find_upcoming' or null,\n  // The city and state where the search will take place, e.g. New York, NY.\n  location: string,\n  // The genre of events.\n  genre: string,\n  // The number of days from now to include in the search. (default: 7)\n  days_ahead: int or null,\n} or {\n  // Perform a statistical t-test to check if the means of two independent datasets are statistically different.\n  function_name: 't_test' or null,\n  // Dataset A for comparison.\n  dataset_A: int[],\n  // Dataset B for comparison.\n  dataset_B: int[],\n  // Significance level for the test. Default is 0.05.\n  alpha: float or null,\n} or {\n  // Calculate the area of a triangle.\n  function_name: 'geometry.area_triangle' or null,\n  // The length of the base of the triangle.\n  base: float,\n  // The height of the triangle from the base.\n  height: float,\n  // The measurement unit for the area. Defaults to square meters.\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the statistical significance between two set of variables, dataset_A with the values 12, 24, 36 and dataset_B with the values 15, 30, 45."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"t_test\",\n  \"dataset_A\": [12, 24, 36],\n  \"dataset_B\": [15, 30, 45],\n  \"alpha\": 0.05\n}", "metadata": {"logprobs": null, "prompt_tokens": 358, "output_tokens": 69, "total_tokens": 427, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5f48390e-f9ce-4330-8852-acf288749504", "event_id": "5f48390e-f9ce-4330-8852-acf288749504", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 132175, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_127", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "473ec813-24da-447a-b1ef-0a4bec1b28a2", "event_id": "71aa00c3-44a9-4f0b-888e-5211ee3ca896", "parent_event_id": "473ec813-24da-447a-b1ef-0a4bec1b28a2", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1583, "start_time": "2024-06-20T16:22:15.935Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_128", "variant_name": null}, {"function_name": "Fn_multiple_function_128", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_128\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"total_payout\":50000000,\"outstanding_shares\":100000000,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_128_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the lyrics of a song based on the artist's name and song title.\n  function_name: 'get_song_lyrics' or null,\n  // The title of the song.\n  song_title: string,\n  // The name of the artist who performed the song.\n  artist_name: string,\n  // The language of the lyrics. Default is English.\n  lang: 'English' or 'French' or 'Spanish' or 'German' or 'Italian' or null,\n} or {\n  // Combine two primary paint colors and adjust the resulting color's lightness level.\n  function_name: 'mix_paint_color' or null,\n  // The first primary color to be mixed.\n  color1: string,\n  // The second primary color to be mixed.\n  color2: string,\n  // The desired lightness level of the resulting color in percentage. The default level is set to 50%.\n  lightness: int or null,\n} or {\n  // Calculate quarterly dividend per share for a company given total dividend payout and outstanding shares\n  function_name: 'finance.calculate_quarterly_dividend_per_share' or null,\n  // The total amount of dividends paid out in USD\n  total_payout: int,\n  // Total number of outstanding shares\n  outstanding_shares: int,\n} or {\n  // This function retrieves a brief about a specified movie.\n  function_name: 'movie_details.brief' or null,\n  // Title of the movie\n  title: string,\n  // Option to get additional information like Director, Cast, Awards etc. (default: false)\n  extra_info: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the quarterly dividend per share of a company with 100 million outstanding shares and total dividend payout of 50 million USD?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"finance.calculate_quarterly_dividend_per_share\",\n  \"total_payout\": 50000000,\n  \"outstanding_shares\": 100000000\n}\n\nTo calculate the quarterly dividend per share, we can use the formula:\n\nQuarterly Dividend per Share = Total Dividend Payout / Outstanding Shares\n\nGiven:\n- Total Dividend Payout = $50,000,000\n- Outstanding Shares = 100,000,000\n\nPlugging in the values:\nQuarterly Dividend per Share = $50,000,000 / 100,000,000\nQuarterly Dividend per Share = $0.50\n\nSo, the quarterly dividend per share for a company with 100 million outstanding shares and a total dividend payout of $50 million is $0.50.", "metadata": {"logprobs": null, "prompt_tokens": 437, "output_tokens": 190, "total_tokens": 627, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "473ec813-24da-447a-b1ef-0a4bec1b28a2", "event_id": "473ec813-24da-447a-b1ef-0a4bec1b28a2", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 133759, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_128", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ba9a1b26-0b50-4ca3-90a6-680db05804f6", "event_id": "94b7ff10-9c24-4b3e-bdb8-7fac1fec29e0", "parent_event_id": "ba9a1b26-0b50-4ca3-90a6-680db05804f6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 690, "start_time": "2024-06-20T16:22:17.519Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_129", "variant_name": null}, {"function_name": "Fn_multiple_function_129", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_129\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"net_income\":2000000,\"shareholder_equity\":10000000,\"meta\":\"Value\",\"dividends_paid\":200000}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_129_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby public libraries based on specific criteria like English fiction availability and Wi-Fi.\n  function_name: 'public_library.find_nearby' or null,\n  // The city and state, e.g. Boston, MA\n  location: string,\n  // Facilities and sections in public library.\n  facilities: [\n    'Wi-Fi' or 'Reading Room' or 'Fiction' or 'Children Section' or 'Cafe'\n  ],\n} or {\n  // Retrieve the lyrics of a song based on the artist's name and song title.\n  function_name: 'get_song_lyrics' or null,\n  // The title of the song.\n  song_title: string,\n  // The name of the artist who performed the song.\n  artist_name: string,\n  // The language of the lyrics. Default is English.\n  lang: 'English' or 'French' or 'Spanish' or 'German' or 'Italian' or null,\n} or {\n  // Search for a historical law case based on specific criteria like the subject and year.\n  function_name: 'law_case_search.find_historical' or null,\n  // The subject matter of the case, e.g., 'fraud'\n  subject: string,\n  // The start year for the range of the case. The case should happen after this year.\n  from_year: int,\n  // The end year for the range of the case. The case should happen before this year.\n  to_year: int,\n} or {\n  // Calculate a company's return on equity based on its net income, shareholder's equity, and dividends paid.\n  function_name: 'calculate_return_on_equity' or null,\n  // The company's net income.\n  net_income: int,\n  // The company's total shareholder's equity.\n  shareholder_equity: int,\n  // The total dividends paid by the company. Optional. If not given, default it's 0.\n  dividends_paid: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the company's return on equity given its net income of $2,000,000, shareholder's equity of $10,000,000, and dividends paid of $200,000."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_return_on_equity\",\n  \"net_income\": 2000000,\n  \"shareholder_equity\": 10000000,\n  \"dividends_paid\": 200000\n}", "metadata": {"logprobs": null, "prompt_tokens": 539, "output_tokens": 58, "total_tokens": 597, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ba9a1b26-0b50-4ca3-90a6-680db05804f6", "event_id": "ba9a1b26-0b50-4ca3-90a6-680db05804f6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 134451, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_129", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "87aff7cc-6fc5-4145-a835-348c52d85cbf", "event_id": "9d9d7903-7ea8-46cf-ab8c-b890dceb8854", "parent_event_id": "87aff7cc-6fc5-4145-a835-348c52d85cbf", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1011, "start_time": "2024-06-20T16:22:18.210Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_130", "variant_name": null}, {"function_name": "Fn_multiple_function_130", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_130\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"principal\":10000,\"annual_rate\":5.0,\"compounding_freq\":\"Value0\",\"time_in_years\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_130_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for lawsuits against a specific company within a specific time and location.\n  function_name: 'lawsuits_search' or null,\n  // The name of the company.\n  company_name: string,\n  // The location where the lawsuit was filed.\n  location: string,\n  // The year when the lawsuit was filed.\n  year: int,\n  // The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. If not specified, search for all types. Default is 'all'\n  case_type: string or null,\n} or {\n  // Calculate compound interest for a certain time period.\n  function_name: 'compound_interest' or null,\n  // The initial amount of money that was invested or loaned out.\n  principal: int,\n  // The interest rate for a year as a percentage.\n  annual_rate: float,\n  // The number of times that interest is compounded per unit period.\n  compounding_freq: 'monthly' or 'quarterly' or 'annually',\n  // The time the money is invested for in years.\n  time_in_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the compound interest for an investment of $10000 with an annual interest rate of 5% compounded monthly for 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"compound_interest\",\n  \"principal\": 10000,\n  \"annual_rate\": 5.0,\n  \"compounding_freq\": \"monthly\",\n  \"time_in_years\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 321, "output_tokens": 61, "total_tokens": 382, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "87aff7cc-6fc5-4145-a835-348c52d85cbf", "event_id": "87aff7cc-6fc5-4145-a835-348c52d85cbf", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 135463, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_130", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f5889d5a-3ff4-40de-b84b-0a77fd46fe48", "event_id": "82b8cf5d-30b0-42b4-9ce1-aedae5c9400e", "parent_event_id": "f5889d5a-3ff4-40de-b84b-0a77fd46fe48", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 908, "start_time": "2024-06-20T16:22:19.222Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_131", "variant_name": null}, {"function_name": "Fn_multiple_function_131", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_131\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_value\":2000,\"final_value\":3000,\"period_in_years\":4,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_131_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the current chess rating of a given player\n  function_name: 'chess.rating' or null,\n  // The full name of the chess player.\n  player_name: string,\n  // The variant of chess for which rating is requested (e.g., 'classical', 'blitz', 'bullet'). Default is 'classical'.\n  variant: string or null,\n} or {\n  // Find the roots of a quadratic equation. Returns both roots.\n  function_name: 'solve_quadratic' or null,\n  // Coefficient of x\u00b2.\n  a: int,\n  // Coefficient of x.\n  b: int,\n  // Constant term.\n  c: int,\n} or {\n  // Calculate the Compound Annual Growth Rate (CAGR) given an initial investment value, a final investment value, and the number of years.\n  function_name: 'calculate_cagr' or null,\n  // The initial investment value.\n  initial_value: int,\n  // The final investment value.\n  final_value: int,\n  // The period of the investment in years.\n  period_in_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the Compound Annual Growth Rate (CAGR) for an initial investment of $2000, final value of $3000 in a period of 4 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_cagr\",\n  \"initial_value\": 2000,\n  \"final_value\": 3000,\n  \"period_in_years\": 4\n}", "metadata": {"logprobs": null, "prompt_tokens": 332, "output_tokens": 63, "total_tokens": 395, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f5889d5a-3ff4-40de-b84b-0a77fd46fe48", "event_id": "f5889d5a-3ff4-40de-b84b-0a77fd46fe48", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 136373, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_131", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "91ff06e8-ef45-4662-8d17-bd6a0a5b7005", "event_id": "08a3b27b-bba3-4da2-add1-d9adedb5139b", "parent_event_id": "91ff06e8-ef45-4662-8d17-bd6a0a5b7005", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T16:22:20.132Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_132", "variant_name": null}, {"function_name": "Fn_multiple_function_132", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_132\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"indexes\":[\"S&P 500\",\"Dow Jones\"],\"days\":5,\"meta\":\"Value\",\"detailed\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_132_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby restaurants based on specific dietary preferences.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Los Angeles, CA\n  location: string,\n  // Dietary preference. Default is empty array.\n  dietary_preference: [\n    'Vegan' or 'Vegetarian' or 'Gluten-free' or 'Dairy-free' or 'Nut-free'\n  ],\n} or {\n  // Retrieve the market performance data for specified indexes over a specified time period.\n  function_name: 'market_performance.get_data' or null,\n  // Array of stock market indexes. Supported indexes are 'S&P 500', 'Dow Jones', 'NASDAQ', 'FTSE 100', 'DAX' etc.\n  indexes: string[],\n  // Number of days in the past for which the performance data is required.\n  days: int,\n  // Whether to return detailed performance data. If set to true, returns high, low, opening, and closing prices. If false, returns only closing prices. Default is false.\n  detailed: bool or null,\n} or {\n  // Returns the results of a given match between two teams.\n  function_name: 'sports.match_results' or null,\n  // The name of the first team.\n  team1: string,\n  // The name of the second team.\n  team2: string,\n  // The season when the match happened. Default is the current season.\n  season: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the market performance of the S&P 500 and the Dow Jones over the past 5 days."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"market_performance.get_data\",\n  \"indexes\": [\n    \"S&P 500\",\n    \"Dow Jones\"\n  ],\n  \"days\": 5,\n  \"detailed\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 413, "output_tokens": 71, "total_tokens": 484, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "91ff06e8-ef45-4662-8d17-bd6a0a5b7005", "event_id": "91ff06e8-ef45-4662-8d17-bd6a0a5b7005", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 137295, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_132", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8ede8891-e164-4ddb-a949-009673b0b4a0", "event_id": "dd7f1b41-cde7-4d8f-b627-7a11f05fcb30", "parent_event_id": "8ede8891-e164-4ddb-a949-009673b0b4a0", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 946, "start_time": "2024-06-20T16:22:21.055Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_133", "variant_name": null}, {"function_name": "Fn_multiple_function_133", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_133\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"initial_investment\":20000,\"rate_of_return\":0.08,\"years\":5,\"meta\":\"Value\",\"contribution\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_133_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Combine two primary paint colors and adjust the resulting color's lightness level.\n  function_name: 'mix_paint_color' or null,\n  // The first primary color to be mixed.\n  color1: string,\n  // The second primary color to be mixed.\n  color2: string,\n  // The desired lightness level of the resulting color in percentage. The default level is set to 50%.\n  lightness: int or null,\n} or {\n  // Calculate the future value of an investment given an initial investment, annual rate of return, and a time frame.\n  function_name: 'finance.calculate_future_value' or null,\n  // The initial investment amount.\n  initial_investment: int,\n  // The annual rate of return.\n  rate_of_return: float,\n  // The time frame of the investment in years.\n  years: int,\n  // Optional: Additional regular contributions. Default is 0.\n  contribution: int or null,\n} or {\n  // Create a histogram based on provided data.\n  function_name: 'create_histogram' or null,\n  // The data for which histogram needs to be plotted.\n  data: float[],\n  // The number of equal-width bins in the range. Default is 10.\n  bins: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the future value of an investment with an annual rate of return of 8%, an initial investment of $20000, and a time frame of 5 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"finance.calculate_future_value\",\n  \"initial_investment\": 20000,\n  \"rate_of_return\": 0.08,\n  \"years\": 5,\n  \"contribution\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 356, "output_tokens": 71, "total_tokens": 427, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8ede8891-e164-4ddb-a949-009673b0b4a0", "event_id": "8ede8891-e164-4ddb-a949-009673b0b4a0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 138243, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_133", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "dd144c71-ad7c-480c-8307-8fcd9fc68523", "event_id": "012cd5aa-20c7-4645-923b-011d888e2f51", "parent_event_id": "dd144c71-ad7c-480c-8307-8fcd9fc68523", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1391, "start_time": "2024-06-20T16:22:22.002Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_134", "variant_name": null}, {"function_name": "Fn_multiple_function_134", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_134\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"investment_amount\":50000,\"annual_yield\":0.05,\"years\":3,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_134_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the final balance of a mutual fund investment based on the total initial investment, annual yield rate and the time period.\n  function_name: 'calculate_mutual_fund_balance' or null,\n  // The initial total amount invested in the fund.\n  investment_amount: int,\n  // The annual yield rate of the fund.\n  annual_yield: float,\n  // The period of time for the fund to mature.\n  years: int,\n} or {\n  // Calculate the area of a circle given its radius.\n  function_name: 'geometry.calculate_area_circle' or null,\n  // The radius of the circle.\n  radius: float,\n  // The measurement unit of the radius (optional parameter, default is 'units').\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the balance of a mutual fund given a total investment of $50000 with a 5% annual yield after 3 years."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_mutual_fund_balance\",\n  \"investment_amount\": 50000,\n  \"annual_yield\": 0.05,\n  \"years\": 3\n}\n\nTo calculate the final balance of the mutual fund investment, we can use the formula:\n\nFinal Balance = Initial Investment * (1 + Annual Yield Rate)^Time Period\n\nPlugging in the values:\nFinal Balance = 50000 * (1 + 0.05)^3\nFinal Balance = 50000 * 1.157625\nFinal Balance = $57,881.25\n\nSo, the final balance of the mutual fund investment with an initial investment of $50,000, 5% annual yield, and a 3-year time period is $57,881.25.", "metadata": {"logprobs": null, "prompt_tokens": 228, "output_tokens": 184, "total_tokens": 412, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "dd144c71-ad7c-480c-8307-8fcd9fc68523", "event_id": "dd144c71-ad7c-480c-8307-8fcd9fc68523", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 139635, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_134", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ed16df19-d691-4b1f-ade1-45db4473e7b7", "event_id": "b742d086-83e7-46ec-8bf2-2e0daf2ec123", "parent_event_id": "ed16df19-d691-4b1f-ade1-45db4473e7b7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1094, "start_time": "2024-06-20T16:22:23.395Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_135", "variant_name": null}, {"function_name": "Fn_multiple_function_135", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_135\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_number\":\"CA123456\",\"county\":\"San Diego\",\"meta\":\"Value\",\"details\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_135_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the population density of a specific country in a specific year.\n  function_name: 'calculate_density' or null,\n  // The country for which the density needs to be calculated.\n  country: string,\n  // The year in which the density is to be calculated.\n  year: string,\n  // The population of the country.\n  population: int,\n  // The land area of the country in square kilometers.\n  land_area: float,\n} or {\n  // Retrieve detailed felony crime records using a specific case number and location.\n  function_name: 'crime_record.get_record' or null,\n  // The case number related to the crime.\n  case_number: string,\n  // The county in which the crime occurred.\n  county: string,\n  // To get a detailed report, set as true. Defaults to false.\n  details: bool or null,\n} or {\n  // Retrieve the highest scoring player in a specific game and season.\n  function_name: 'get_highest_scoring_player' or null,\n  // The game in which you want to find the highest scoring player.\n  game: string,\n  // The season during which the high score was achieved.\n  season: string,\n  // The geographical region in which the game is being played (Optional). Defaults to 'USA'\n  region: string or null,\n} or {\n  // Calculates the compound interest of an investment over a given time period.\n  function_name: 'calculate_compound_interest' or null,\n  // The initial amount of the investment.\n  principle: float,\n  // The yearly interest rate of the investment.\n  interest_rate: float,\n  // The time, in years, the money is invested or borrowed for.\n  time: int,\n  // The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly).\n  compounds_per_year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Look up details of a felony crime record for case number CA123456 in San Diego County"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"crime_record.get_record\",\n  \"case_number\": \"CA123456\",\n  \"county\": \"San Diego\",\n  \"details\": true\n}\n\nThis request will retrieve the detailed felony crime record for the case number CA123456 that occurred in San Diego County.", "metadata": {"logprobs": null, "prompt_tokens": 494, "output_tokens": 85, "total_tokens": 579, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ed16df19-d691-4b1f-ade1-45db4473e7b7", "event_id": "ed16df19-d691-4b1f-ade1-45db4473e7b7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 140730, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_135", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8cc12865-9f4e-4e63-9c68-11ee6563addd", "event_id": "95870ba5-1341-4748-8258-967225d1b5d4", "parent_event_id": "8cc12865-9f4e-4e63-9c68-11ee6563addd", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 760, "start_time": "2024-06-20T16:22:24.490Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_136", "variant_name": null}, {"function_name": "Fn_multiple_function_136", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_136\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"docket\":\"2022/AL2562\",\"court\":\"California\",\"info_type\":\"victim\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_136_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve case details using a specific case docket number and court location.\n  function_name: 'get_case_info' or null,\n  // Docket number for the specific court case.\n  docket: string,\n  // Court in which the case was heard.\n  court: string,\n  // Specify the information type needed for the case. i.e., victim, accused, verdict etc.\n  info_type: string,\n} or {\n  // Calculate the area of a triangle given its base and height.\n  function_name: 'calculate_triangle_area' or null,\n  // The base of the triangle.\n  base: float,\n  // The height of the triangle.\n  height: float,\n  // The unit of measure (defaults to 'units' if not specified)\n  unit: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the victim in the case docket numbered 2022/AL2562 in California?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_case_info\",\n  \"docket\": \"2022/AL2562\",\n  \"court\": \"California\",\n  \"info_type\": \"victim\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 234, "output_tokens": 52, "total_tokens": 286, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8cc12865-9f4e-4e63-9c68-11ee6563addd", "event_id": "8cc12865-9f4e-4e63-9c68-11ee6563addd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 141492, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_136", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "21849d21-ccb0-4cf7-9417-6f074e5337a9", "event_id": "6c7058bd-cc5a-4648-b335-6fb93b0936fc", "parent_event_id": "21849d21-ccb0-4cf7-9417-6f074e5337a9", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 948, "start_time": "2024-06-20T16:22:25.251Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_138", "variant_name": null}, {"function_name": "Fn_multiple_function_138", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_138\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company\":\"Google\",\"start_date\":\"2021-01-01\",\"location\":\"California\",\"meta\":\"Value\",\"status\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_138_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for lawsuits related to a specific company within a specific date range and location.\n  function_name: 'lawsuit_search' or null,\n  // The company related to the lawsuit.\n  company: string,\n  // Start of the date range for when the lawsuit was filed.\n  start_date: string,\n  // Location where the lawsuit was filed.\n  location: string,\n  // The status of the lawsuit. Default is 'ongoing'.\n  status: 'ongoing' or 'settled' or 'dismissed' or null,\n} or {\n  // Calculate total price for given items and their quantities at Walmart.\n  function_name: 'walmart.check_price' or null,\n  // List of items to be priced.\n  items: string[],\n  // Quantity of each item corresponding to the items list.\n  quantities: int[],\n  // The store location for specific pricing (optional). Default is 'USA'.\n  store_location: string or null,\n} or {\n  // Find upcoming events of a specific genre in a given location.\n  function_name: 'event_finder.find_upcoming' or null,\n  // The city and state where the search will take place, e.g. New York, NY.\n  location: string,\n  // The genre of events.\n  genre: string,\n  // The number of days from now to include in the search. (default: 7)\n  days_ahead: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Search for ongoing lawsuits related to the company 'Google' filed after January 1, 2021 in California."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"lawsuit_search\",\n  \"company\": \"Google\",\n  \"start_date\": \"2021-01-01\",\n  \"location\": \"California\",\n  \"status\": \"ongoing\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 387, "output_tokens": 67, "total_tokens": 454, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "21849d21-ccb0-4cf7-9417-6f074e5337a9", "event_id": "21849d21-ccb0-4cf7-9417-6f074e5337a9", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 142441, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_138", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "aa9c714f-958d-4124-9455-24eb097d8a28", "event_id": "64f1ec71-3376-41a1-acf7-bb6b4f6493e5", "parent_event_id": "aa9c714f-958d-4124-9455-24eb097d8a28", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1007, "start_time": "2024-06-20T16:22:26.201Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_139", "variant_name": null}, {"function_name": "Fn_multiple_function_139", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_139\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_id\":\"R vs Adams\",\"details\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_139_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the basic information such as elevation and area of a national park.\n  function_name: 'park_information' or null,\n  // The name of the national park.\n  park_name: string,\n  // The type of information you want about the park.\n  information: [\n    'Elevation' or 'Area' or 'Location' or 'Established Year'\n  ],\n} or {\n  // Fetch detailed legal case information from database.\n  function_name: 'legal_case.fetch' or null,\n  // The ID of the legal case.\n  case_id: string,\n  // True if need the detail info. Default is false.\n  details: bool,\n} or {\n  // Calculate the projected return of a stock investment given the investment amount, the annual growth rate and holding period in years.\n  function_name: 'calculate_stock_return' or null,\n  // The amount of money to invest.\n  investment_amount: float,\n  // The expected annual growth rate of the stock.\n  annual_growth_rate: float,\n  // The number of years you intend to hold the stock.\n  holding_period: int,\n  // Optional. True if the calculation should take into account potential dividends. Default is false.\n  include_dividends: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How to obtain the detailed case information of the R vs Adams legal case?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"legal_case.fetch\",\n  \"case_id\": \"R vs Adams\",\n  \"details\": true\n}\n\nThis request will fetch the detailed information about the \"R vs Adams\" legal case from the database.", "metadata": {"logprobs": null, "prompt_tokens": 340, "output_tokens": 69, "total_tokens": 409, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "aa9c714f-958d-4124-9455-24eb097d8a28", "event_id": "aa9c714f-958d-4124-9455-24eb097d8a28", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 143450, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_139", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "8c9c5a0b-28b6-4583-b121-ce2416fd6194", "event_id": "462de882-ae5d-4740-982a-97fe4f46151a", "parent_event_id": "8c9c5a0b-28b6-4583-b121-ce2416fd6194", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1853, "start_time": "2024-06-20T16:22:27.210Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_140", "variant_name": null}, {"function_name": "Fn_multiple_function_140", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_140\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Apple Inc.\",\"year\":2010,\"meta\":\"Value\",\"case_type\":\"Patent\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_140_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve a list of collectable items in a specific game during a specified season.\n  function_name: 'get_collectables_in_season' or null,\n  // Name of the game.\n  game_name: string,\n  // The season for which to retrieve the collectable items.\n  season: string,\n  // The type of item to search for. Default is 'all'. Possible values: 'all', 'bug', 'fish', 'sea creatures', etc.\n  item_type: string or null,\n} or {\n  // Retrieve the highest score achieved by any player in a specific game.\n  function_name: 'game_score.highest' or null,\n  // The name of the online game.\n  game: string,\n  // The platform where the game is played, e.g. PC, Xbox, Playstation\n  platform: string,\n  // The geographic region of the player. Defaults to 'Global'\n  region: string or null,\n} or {\n  // Find details of lawsuits involving a specific company from a given year.\n  function_name: 'lawsuit_details.find' or null,\n  // Name of the company.\n  company_name: string,\n  // Year of the lawsuit.\n  year: int,\n  // Type of the lawsuit, e.g., 'IPR', 'Patent', 'Commercial', etc. This is an optional parameter. Default is 'all'.\n  case_type: string or null,\n} or {\n  // Calculates the binomial probability given the number of trials, successes and the probability of success on an individual trial.\n  function_name: 'calculate_binomial_probability' or null,\n  // The total number of trials.\n  number_of_trials: int,\n  // The desired number of successful outcomes.\n  number_of_successes: int,\n  // The probability of a successful outcome on any given trial. (default: 0.5)\n  probability_of_success: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find details of patent lawsuits involving the company 'Apple Inc.' from the year 2010."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema for the query to find details of patent lawsuits involving Apple Inc. from the year 2010:\n\n{\n  \"function_name\": \"lawsuit_details.find\",\n  \"company_name\": \"Apple Inc.\",\n  \"year\": 2010,\n  \"case_type\": \"Patent\"\n}\n\nThis query will return the details of patent lawsuits involving Apple Inc. that occurred in the year 2010.\n\nThe key elements are:\n\n- \"function_name\": \"lawsuit_details.find\" - This indicates that we want to find lawsuit details.\n- \"company_name\": \"Apple Inc.\" - The name of the company involved in the lawsuit.\n- \"year\": 2010 - The year the lawsuit occurred.\n- \"case_type\": \"Patent\" - Specifies that we only want to retrieve patent-related lawsuits.", "metadata": {"logprobs": null, "prompt_tokens": 514, "output_tokens": 198, "total_tokens": 712, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "8c9c5a0b-28b6-4583-b121-ce2416fd6194", "event_id": "8c9c5a0b-28b6-4583-b121-ce2416fd6194", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 145304, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_140", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "583c228d-9fd2-4855-b62b-be2b12731a20", "event_id": "0fa9f9fa-bc5b-49f1-9c04-ebd40034c53d", "parent_event_id": "583c228d-9fd2-4855-b62b-be2b12731a20", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1043, "start_time": "2024-06-20T16:22:29.064Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_141", "variant_name": null}, {"function_name": "Fn_multiple_function_141", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_141\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Google\",\"location\":\"California\",\"year\":2020,\"meta\":\"Value\",\"case_type\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_141_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for lawsuits against a specific company within a specific time and location.\n  function_name: 'lawsuits_search' or null,\n  // The name of the company.\n  company_name: string,\n  // The location where the lawsuit was filed.\n  location: string,\n  // The year when the lawsuit was filed.\n  year: int,\n  // The type of the case. Options include: 'civil', 'criminal', 'small_claims', etc. If not specified, search for all types. Default is 'all'\n  case_type: string or null,\n} or {\n  // Check hotel availability for a specific location and time frame.\n  function_name: 'hilton_hotel.check_availability' or null,\n  // The city where you want to check hotel availability.\n  location: string,\n  // The check-in date in the format YYYY-MM-DD.\n  check_in_date: string,\n  // The check-out date in the format YYYY-MM-DD.\n  check_out_date: string,\n  // The number of adults for the hotel booking.\n  no_of_adults: int,\n  // The hotel chain where you want to book the hotel. (default: Hilton)\n  hotel_chain: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the lawsuits filed against the company Google in California in the year 2020."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the lawsuits filed against the company Google in California in the year 2020, the input schema would be:\n\n{\n  \"function_name\": \"lawsuits_search\",\n  \"company_name\": \"Google\",\n  \"location\": \"California\",\n  \"year\": 2020,\n  \"case_type\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 342, "output_tokens": 84, "total_tokens": 426, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "583c228d-9fd2-4855-b62b-be2b12731a20", "event_id": "583c228d-9fd2-4855-b62b-be2b12731a20", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 146349, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_141", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4896c427-0ce2-4f92-98da-9bf7de63934f", "event_id": "ed0e6d26-0941-457f-b4ac-ebbc3d77b9ec", "parent_event_id": "4896c427-0ce2-4f92-98da-9bf7de63934f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 991, "start_time": "2024-06-20T16:22:30.108Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_142", "variant_name": null}, {"function_name": "Fn_multiple_function_142", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_142\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"case_id\":1234,\"closed_status\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_142_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the protein sequence encoded by a human gene.\n  function_name: 'get_protein_sequence' or null,\n  // The human gene of interest.\n  gene: string,\n  // The species for which the gene is to be analyzed. (default: Homo sapiens)\n  species: string or null,\n} or {\n  // Estimate the travel time for a specific route with optional stops.\n  function_name: 'route.estimate_time' or null,\n  // The starting point for the journey.\n  start_location: string,\n  // The destination for the journey.\n  end_location: string,\n  // Additional cities or points of interest to stop at during the journey. Default is an empty array.\n  stops: string[],\n} or {\n  // Verify the details of a lawsuit case and check its status using case ID.\n  function_name: 'lawsuit.check_case' or null,\n  // The identification number of the lawsuit case.\n  case_id: int,\n  // The status of the lawsuit case to be verified.\n  closed_status: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: I need the details of the lawsuit case with case ID of 1234 and verify if it's already closed."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"lawsuit.check_case\",\n  \"case_id\": 1234,\n  \"closed_status\": true\n}\n\nThis indicates that the function to be used is \"lawsuit.check_case\", which will verify the details of the lawsuit case with ID 1234 and check if the case is already closed (true).", "metadata": {"logprobs": null, "prompt_tokens": 298, "output_tokens": 92, "total_tokens": 390, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4896c427-0ce2-4f92-98da-9bf7de63934f", "event_id": "4896c427-0ce2-4f92-98da-9bf7de63934f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 147342, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_142", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d4d85ab8-6238-4681-a9dc-bf4e572320c4", "event_id": "ad2bfedd-4235-41a1-a45a-4aff67ae96d3", "parent_event_id": "d4d85ab8-6238-4681-a9dc-bf4e572320c4", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1521, "start_time": "2024-06-20T16:22:31.101Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_143", "variant_name": null}, {"function_name": "Fn_multiple_function_143", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_143\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Miami, Florida\",\"days\":7,\"meta\":\"Value\",\"min_humidity\":0}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_143_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve a humidity forecast for a specific location and time frame.\n  function_name: 'weather.humidity_forecast' or null,\n  // The city that you want to get the humidity for.\n  location: string,\n  // Number of days for the forecast.\n  days: int,\n  // Minimum level of humidity (in percentage) to filter the result. Optional parameter. Default is 0.\n  min_humidity: int or null,\n} or {\n  // Retrieves the latest game score, individual player stats, and team stats for a specified sports team.\n  function_name: 'get_team_score' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The league that the team is part of.\n  league: string,\n  // Indicates if individual player statistics should be included in the result. Default is false.\n  include_player_stats: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the humidity level in Miami, Florida in the upcoming 7 days?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To retrieve the humidity forecast for Miami, Florida over the next 7 days, the request would look like this:\n\n{\n  \"function_name\": \"weather.humidity_forecast\",\n  \"location\": \"Miami, Florida\",\n  \"days\": 7,\n  \"min_humidity\": 0\n}\n\nThis request would call the \"weather.humidity_forecast\" function to retrieve the humidity forecast for Miami, Florida over the next 7 days, with no minimum humidity level specified (the default of 0% is used).\n\nThe response would likely include the predicted humidity percentage for each of the next 7 days in the Miami area.", "metadata": {"logprobs": null, "prompt_tokens": 251, "output_tokens": 143, "total_tokens": 394, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d4d85ab8-6238-4681-a9dc-bf4e572320c4", "event_id": "d4d85ab8-6238-4681-a9dc-bf4e572320c4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 148864, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_143", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "15035b3c-c4ed-4392-a8da-e23476c739e3", "event_id": "c58c34d6-9fdf-4feb-932a-c5ae95e085fa", "parent_event_id": "15035b3c-c4ed-4392-a8da-e23476c739e3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 717, "start_time": "2024-06-20T16:22:32.624Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_145", "variant_name": null}, {"function_name": "Fn_multiple_function_145", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_145\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"London\",\"date\":\"2022/08/16\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_145_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the ranking of a specific sports team in a specific league\n  function_name: 'sports_ranking' or null,\n  // The name of the team.\n  team: string,\n  // The name of the league.\n  league: string,\n  // Optional parameter to specify the season, default is the current season.\n  season: int or null,\n} or {\n  // Retrieve the air quality index for a specific location.\n  function_name: 'air_quality' or null,\n  // The city that you want to get the air quality index for.\n  location: string,\n  // The date you want to get the air quality index for. Default is today.\n  date: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the air quality index in London 2022/08/16?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"air_quality\",\n  \"location\": \"London\",\n  \"date\": \"2022/08/16\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 198, "output_tokens": 49, "total_tokens": 247, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "15035b3c-c4ed-4392-a8da-e23476c739e3", "event_id": "15035b3c-c4ed-4392-a8da-e23476c739e3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 149583, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_145", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fa65aefe-3085-4a8a-94e5-9cb01d5dc564", "event_id": "3ff38563-b98e-438a-9c5b-1934df030adc", "parent_event_id": "fa65aefe-3085-4a8a-94e5-9cb01d5dc564", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2201, "start_time": "2024-06-20T16:22:33.343Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_146", "variant_name": null}, {"function_name": "Fn_multiple_function_146", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_146\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"distance\":12000,\"fuel_type\":\"gasoline\",\"fuel_efficiency\":20,\"meta\":\"Value\",\"efficiency_reduction\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_146_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the closest high-rated grocery stores based on certain product availability.\n  function_name: 'grocery_store.find_best' or null,\n  // The current location of the user.\n  my_location: string,\n  // The minimum required store rating. Default is 0.0.\n  rating: float or null,\n  // Required products in a list.\n  products: string[],\n} or {\n  // Calculates the annual carbon dioxide emissions produced by a vehicle based on the distance traveled, the fuel type and the fuel efficiency of the vehicle.\n  function_name: 'calculate_emissions' or null,\n  // The distance travelled in miles.\n  distance: int,\n  // Type of fuel used by the vehicle.\n  fuel_type: string,\n  // The vehicle's fuel efficiency in miles per gallon.\n  fuel_efficiency: int,\n  // The percentage decrease in fuel efficiency per year (optional). Default is 0\n  efficiency_reduction: float or null,\n} or {\n  // Retrieve details of a sculpture based on the artist and the title of the sculpture.\n  function_name: 'sculpture.get_details' or null,\n  // The artist who made the sculpture.\n  artist: string,\n  // The title of the sculpture.\n  title: string,\n  // The specific detail wanted about the sculpture. Default is 'general information'.\n  detail: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How much CO2 is produced annually by a gas-fueled car that travels 12,000 miles per year with fuel efficiency 20 mpg?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To solve this problem, we can use the \"calculate_emissions\" function with the given information.\n\n{\n  \"function_name\": \"calculate_emissions\",\n  \"distance\": 12000,\n  \"fuel_type\": \"gasoline\",\n  \"fuel_efficiency\": 20\n}\n\nTo calculate the annual carbon dioxide emissions, we need to know the following:\n- Distance traveled (in miles): 12,000\n- Fuel type: Gasoline\n- Fuel efficiency (miles per gallon): 20 mpg\n\nThe formula to calculate the annual carbon dioxide emissions is:\n\nAnnual CO2 emissions = (Distance / Fuel efficiency) * Fuel emission factor\n\nThe fuel emission factor for gasoline is 8.87 kg CO2 per gallon.\n\nPlugging in the values:\nAnnual CO2 emissions = (12,000 miles / 20 mpg) * 8.87 kg CO2/gallon\nAnnual CO2 emissions = 5,322 kg CO2\n\nTherefore, the gas-fueled car that travels 12,000 miles per year with a fuel efficiency of 20 mpg produces approximately 5,322 kg of carbon dioxide emissions annually.", "metadata": {"logprobs": null, "prompt_tokens": 378, "output_tokens": 272, "total_tokens": 650, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fa65aefe-3085-4a8a-94e5-9cb01d5dc564", "event_id": "fa65aefe-3085-4a8a-94e5-9cb01d5dc564", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 151786, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_146", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "aa155334-a723-4c20-b8e7-5e84588813c6", "event_id": "f14ac33a-3bde-4832-8543-02d08fcf6d18", "parent_event_id": "aa155334-a723-4c20-b8e7-5e84588813c6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 766, "start_time": "2024-06-20T16:22:35.545Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_147", "variant_name": null}, {"function_name": "Fn_multiple_function_147", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_147\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Seattle, WA\",\"cuisine\":\"Chinese\",\"meta\":\"Value\",\"max_distance\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_147_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby restaurants based on specific criteria like cuisine type.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Preferred type of cuisine in restaurant.\n  cuisine: string,\n  // Maximum distance (in miles) within which to search for restaurants. Default is 5.\n  max_distance: int or null,\n} or {\n  // Retrieve precipitation data for a specified location and time period.\n  function_name: 'ecology_data.precipitation_stats' or null,\n  // The name of the location, e.g., 'Amazon rainforest'.\n  location: string,\n  // The time period for which data is required.\n  time_frame: 'six_months' or 'year' or 'five_years',\n}"}]}, {"role": "user", "content": [{"text": "Question: Find restaurants near me within 10 miles that offer Chinese cuisine in Seattle."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"restaurant.find_nearby\",\n  \"location\": \"Seattle, WA\",\n  \"cuisine\": \"Chinese\",\n  \"max_distance\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 235, "output_tokens": 58, "total_tokens": 293, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "aa155334-a723-4c20-b8e7-5e84588813c6", "event_id": "aa155334-a723-4c20-b8e7-5e84588813c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 152554, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_147", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fd8bc7a6-b602-4c96-9b00-d782122dedbe", "event_id": "99401835-8c0a-4cad-bddb-476cb5658d01", "parent_event_id": "fd8bc7a6-b602-4c96-9b00-d782122dedbe", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 984, "start_time": "2024-06-20T16:22:36.313Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_148", "variant_name": null}, {"function_name": "Fn_multiple_function_148", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_148\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start\":\"New York\",\"end\":\"Los Angeles\",\"avoid\":[\"Value1\",\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_148_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve directions from a starting location to an ending location, including options for route preferences.\n  function_name: 'map_service.get_directions' or null,\n  // Starting location for the route.\n  start: string,\n  // Ending location for the route.\n  end: string,\n  // Route features to avoid. Default is an empty array.\n  avoid: [\n    'tolls' or 'highways' or 'ferries'\n  ],\n} or {\n  // Converts an amount from a particular currency to another currency.\n  function_name: 'convert_currency' or null,\n  // The base currency in which the original amount is present.\n  base_currency: string,\n  // The currency to which you want to convert.\n  target_currency: string,\n  // The amount you want to convert.\n  amount: int,\n} or {\n  // Get the population and species of turtles in a specific location.\n  function_name: 'ecology.get_turtle_population' or null,\n  // The name of the location.\n  location: string,\n  // The year of the data requested. (optional) Default is 2024.\n  year: int or null,\n  // Whether to include species information. Default is false. (optional)\n  species: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the directions from New York to Los Angeles avoiding highways and toll roads."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"map_service.get_directions\",\n  \"start\": \"New York\",\n  \"end\": \"Los Angeles\",\n  \"avoid\": [\n    \"highways\",\n    \"tolls\"\n  ]\n}", "metadata": {"logprobs": null, "prompt_tokens": 341, "output_tokens": 70, "total_tokens": 411, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fd8bc7a6-b602-4c96-9b00-d782122dedbe", "event_id": "fd8bc7a6-b602-4c96-9b00-d782122dedbe", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 153539, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_148", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e2552cfe-48ee-4b96-a6be-8466dc1fcca8", "event_id": "765220e6-d0ec-4763-a716-3b064808d8d9", "parent_event_id": "e2552cfe-48ee-4b96-a6be-8466dc1fcca8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 635, "start_time": "2024-06-20T16:22:37.298Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_149", "variant_name": null}, {"function_name": "Fn_multiple_function_149", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_149\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"company_name\":\"Apple Inc.\",\"detail_level\":\"detailed\",\"meta\":\"Value\",\"market\":\"NASDAQ\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_149_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the current time in a specific time zone.\n  function_name: 'get_current_time' or null,\n  // The name of the city.\n  location: string,\n  // The name of the country.\n  country: string,\n  // The optional timezone to get current time. Default ''\n  timezone: string or null,\n} or {\n  // Retrieves information about a specific stock based on company's name.\n  function_name: 'get_stock_info' or null,\n  // The name of the company.\n  company_name: string,\n  // Level of detail for stock information. Can be 'summary' or 'detailed'.\n  detail_level: string,\n  // The stock market of interest. Default is 'NASDAQ'\n  market: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me detail information about stocks of Apple Inc."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_stock_info\",\n  \"company_name\": \"Apple Inc.\",\n  \"detail_level\": \"detailed\",\n  \"market\": \"NASDAQ\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 217, "output_tokens": 50, "total_tokens": 267, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e2552cfe-48ee-4b96-a6be-8466dc1fcca8", "event_id": "e2552cfe-48ee-4b96-a6be-8466dc1fcca8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 154176, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_149", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4c9d04a9-9a49-4035-aa65-1bcb3c9a6df7", "event_id": "af45b5d0-a2dd-441d-b6de-fb3fbcffa2c9", "parent_event_id": "4c9d04a9-9a49-4035-aa65-1bcb3c9a6df7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 831, "start_time": "2024-06-20T16:22:37.935Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_150", "variant_name": null}, {"function_name": "Fn_multiple_function_150", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_150\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"text\":\"I love the food here! It's always fresh and delicious.\",\"language\":\"en\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_150_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Books a hotel room for a specific date range.\n  function_name: 'hotel_booking' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The city and state, e.g. New York, NY.\n  location: string,\n  // The start date of the reservation. Use format 'YYYY-MM-DD'.\n  start_date: string,\n  // The end date of the reservation. Use format 'YYYY-MM-DD'.\n  end_date: string,\n  // The number of rooms to reserve. (default: 1)\n  rooms: int or null,\n} or {\n  // Perform sentiment analysis on a given piece of text.\n  function_name: 'sentiment_analysis' or null,\n  // The text on which to perform sentiment analysis.\n  text: string,\n  // The language in which the text is written.\n  language: string,\n} or {\n  // Get the time difference between two places.\n  function_name: 'get_time_difference' or null,\n  // The first place for time difference.\n  place1: string,\n  // The second place for time difference.\n  place2: string,\n} or {\n  // Calculate the Body Mass Index (BMI) for a person based on their weight and height.\n  function_name: 'calculate_bmi' or null,\n  // The weight of the person in kilograms.\n  weight: int,\n  // The height of the person in centimeters.\n  height: int,\n  // The system of units to be used, 'metric' or 'imperial'. Default is 'metric'.\n  system: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Analyze the sentiment of a customer review 'I love the food here! It's always fresh and delicious.'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the required schema:\n\n{\n  \"function_name\": \"sentiment_analysis\",\n  \"text\": \"I love the food here! It's always fresh and delicious.\",\n  \"language\": \"en\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 441, "output_tokens": 56, "total_tokens": 497, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4c9d04a9-9a49-4035-aa65-1bcb3c9a6df7", "event_id": "4c9d04a9-9a49-4035-aa65-1bcb3c9a6df7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 155008, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_150", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "30c9e322-8121-4ad5-95ed-6f20fcff7138", "event_id": "0e3037a7-c743-4570-b242-6aa22776d019", "parent_event_id": "30c9e322-8121-4ad5-95ed-6f20fcff7138", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1741, "start_time": "2024-06-20T16:22:38.768Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_151", "variant_name": null}, {"function_name": "Fn_multiple_function_151", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_151\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"input_synaptic_rate\":200,\"decay_rate\":0.1,\"meta\":\"Value\",\"weight\":0.5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_151_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the electrostatic potential between two charged bodies using the principle of Coulomb's Law.\n  function_name: 'calculate_electrostatic_potential' or null,\n  // The quantity of charge on the first body.\n  charge1: float,\n  // The quantity of charge on the second body.\n  charge2: float,\n  // The distance between the two bodies.\n  distance: float,\n  // The value of the electrostatic constant. Default is 898755178.73\n  constant: float or null,\n} or {\n  // Calculate the neuronal activity (rate of firing) based on a given input synaptic rate, weight of inputs, and decay rate. Higher input or weight increases firing rate and higher decay rate decreases it.\n  function_name: 'calculate_neuronal_activity' or null,\n  // The synaptic input rate, usually represented as number of inputs per second.\n  input_synaptic_rate: int,\n  // The weight of the input, denoting its influence on the neuron's state. Default is 1.0.\n  weight: float or null,\n  // The rate at which the neuron's potential decays in the absence of inputs.\n  decay_rate: float,\n} or {\n  // Calculates the displacement of an object in motion given initial velocity, time, and acceleration.\n  function_name: 'calculate_displacement' or null,\n  // The initial velocity of the object in m/s.\n  initial_velocity: float,\n  // The time in seconds that the object has been in motion.\n  time: int,\n  // The acceleration of the object in m/s^2.\n  acceleration: float or null,\n} or {\n  // Find the closest high-rated grocery stores based on certain product availability.\n  function_name: 'grocery_store.find_best' or null,\n  // The current location of the user.\n  my_location: string,\n  // The minimum required store rating. Default is 0.0.\n  rating: float or null,\n  // Required products in a list.\n  products: string[],\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the neuronal activity based on synaptic input rate of 200 and weight 0.5 and decay rate of 0.1."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To calculate the neuronal activity based on the given input, we can use the following schema:\n\n{\n  \"function_name\": \"calculate_neuronal_activity\",\n  \"input_synaptic_rate\": 200,\n  \"weight\": 0.5,\n  \"decay_rate\": 0.1\n}\n\nThe formula for calculating neuronal activity based on these parameters is:\n\nneuronal_activity = (input_synaptic_rate * weight) / (1 + decay_rate)\n\nPlugging in the values:\n\nneuronal_activity = (200 * 0.5) / (1 + 0.1)\nneuronal_activity = 100 / 1.1\nneuronal_activity = 90.91\n\nSo, the neuronal activity based on the given input synaptic rate, weight, and decay rate is 90.91.", "metadata": {"logprobs": null, "prompt_tokens": 540, "output_tokens": 201, "total_tokens": 741, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "30c9e322-8121-4ad5-95ed-6f20fcff7138", "event_id": "30c9e322-8121-4ad5-95ed-6f20fcff7138", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 156751, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_151", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e982c8a4-ec34-49f0-abc1-8bdf140844fe", "event_id": "c2eee171-c209-4bd3-b4cc-9727aad5632a", "parent_event_id": "e982c8a4-ec34-49f0-abc1-8bdf140844fe", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1739, "start_time": "2024-06-20T16:22:40.511Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_152", "variant_name": null}, {"function_name": "Fn_multiple_function_152", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_152\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"topic\":\"psychology\",\"sub_topics\":[\"behavior\",\"group dynamics\"],\"meta\":\"Value\",\"region\":\"global\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_152_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the most followed Twitter user related to certain topics.\n  function_name: 'social_media_analytics.most_followed' or null,\n  // The main topic of interest.\n  topic: string,\n  // Sub-topics related to main topic, Optional. Default is an empty list.\n  sub_topics: string[],\n  // Region of interest for twitter search, Optional. Default is 'global'.\n  region: string or null,\n} or {\n  // Calculate the probability of an event.\n  function_name: 'calculate_probability' or null,\n  // Total number of possible outcomes.\n  total_outcomes: int,\n  // Number of outcomes considered as 'successful'.\n  favorable_outcomes: int,\n  // Number of decimal places to round the result to. (default: 2)\n  round_to: int or null,\n} or {\n  // Retrieve information about concerts based on specific genre, location and date.\n  function_name: 'concert_info.get' or null,\n  // The city where the concert will take place.\n  location: string,\n  // Time frame to get the concert for.\n  date: string,\n  // Genre of the concert.\n  genre: 'Pop' or 'Rock' or 'Country' or 'Classical' or 'Electronic' or 'Hip-Hop',\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the most followed person on twitter who tweets about psychology related to behaviour and group dynamics."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the most followed person on Twitter who tweets about psychology related to behavior and group dynamics, the request would look like this:\n\n{\n  \"function_name\": \"social_media_analytics.most_followed\",\n  \"topic\": \"psychology\",\n  \"sub_topics\": [\"behavior\", \"group dynamics\"],\n  \"region\": \"global\"\n}\n\nThis request specifies that we want to use the \"social_media_analytics.most_followed\" function to find the most followed Twitter user related to the main topic of \"psychology\" and the sub-topics of \"behavior\" and \"group dynamics\". The search will be conducted globally.\n\nThe response from this request would likely include the Twitter handle, follower count, and sample tweets of the user who is most followed for content related to the specified topic and sub-topics.", "metadata": {"logprobs": null, "prompt_tokens": 351, "output_tokens": 180, "total_tokens": 531, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e982c8a4-ec34-49f0-abc1-8bdf140844fe", "event_id": "e982c8a4-ec34-49f0-abc1-8bdf140844fe", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 158491, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_152", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6f8f214b-0829-4d58-acef-ada297bab9ef", "event_id": "240274a6-4099-42a7-8c64-b0052034dce2", "parent_event_id": "6f8f214b-0829-4d58-acef-ada297bab9ef", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 961, "start_time": "2024-06-20T16:22:42.251Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_153", "variant_name": null}, {"function_name": "Fn_multiple_function_153", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_153\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"country\":\"Germany\",\"start_year\":1871,\"end_year\":1945,\"event_type\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_153_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve key historical events within a specific period for a certain country.\n  function_name: 'history.get_key_events' or null,\n  // The name of the country for which history is queried.\n  country: string,\n  // Start year of the period for which history is queried.\n  start_year: int,\n  // End year of the period for which history is queried.\n  end_year: int,\n  // Types of event. If none is provided, all types will be considered. Default is ['all'].\n  event_type: [\n    'War' or 'Revolutions' or 'Diplomacy' or 'Economy'\n  ],\n} or {\n  // Retrieve the current market value of a particular sculpture by a specific artist.\n  function_name: 'get_sculpture_value' or null,\n  // The name of the sculpture.\n  sculpture: string,\n  // The name of the artist who created the sculpture.\n  artist: string,\n  // The year the sculpture was created. This is optional and is not required for all sculptures. Default is the 2024.\n  year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Provide key war events in German history from 1871 to 1945."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"history.get_key_events\",\n  \"country\": \"Germany\",\n  \"start_year\": 1871,\n  \"end_year\": 1945,\n  \"event_type\": [\"War\"]\n}\n\nThis query will retrieve the key war events in German history from 1871 to 1945.", "metadata": {"logprobs": null, "prompt_tokens": 304, "output_tokens": 94, "total_tokens": 398, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6f8f214b-0829-4d58-acef-ada297bab9ef", "event_id": "6f8f214b-0829-4d58-acef-ada297bab9ef", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 159454, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_153", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e53fd2fb-5814-46fc-a99b-ae3397dc2c9f", "event_id": "c6965d03-a8d2-4a68-bef2-14fdc949bd61", "parent_event_id": "e53fd2fb-5814-46fc-a99b-ae3397dc2c9f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 878, "start_time": "2024-06-20T16:22:43.214Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_154", "variant_name": null}, {"function_name": "Fn_multiple_function_154", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_154\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"event\":\"signing of the Treaty of Lisbon\",\"meta\":\"Value\",\"location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_154_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the tallest mountains within a specified radius of a location.\n  function_name: 'locate_tallest_mountains' or null,\n  // The city from which to calculate distance.\n  location: string,\n  // The radius within which to find mountains, measured in kilometers.\n  radius: float,\n  // The number of mountains to find, listed from tallest to smallest.\n  amount: int,\n} or {\n  // Calculate the entropy change for an isothermal and reversible process.\n  function_name: 'calculate_entropy_change' or null,\n  // The initial temperature in Kelvin.\n  initial_temp: float,\n  // The final temperature in Kelvin.\n  final_temp: float,\n  // The heat capacity in J/K.\n  heat_capacity: float,\n  // Whether the process is isothermal. Default is True.\n  isothermal: bool or null,\n} or {\n  // Retrieve the date of a historical event.\n  function_name: 'get_event_date' or null,\n  // The name of the historical event.\n  event: string,\n  // Location where the event took place. Defaults to global if not specified\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: When was the signing of the Treaty of Lisbon?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_event_date\",\n  \"event\": \"signing of the Treaty of Lisbon\",\n  \"location\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 318, "output_tokens": 51, "total_tokens": 369, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e53fd2fb-5814-46fc-a99b-ae3397dc2c9f", "event_id": "e53fd2fb-5814-46fc-a99b-ae3397dc2c9f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 160333, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_154", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "38cd8407-9ecb-4efc-8ef2-f293976076c6", "event_id": "ba58a04c-00d7-4761-970f-285e35e1457b", "parent_event_id": "38cd8407-9ecb-4efc-8ef2-f293976076c6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 818, "start_time": "2024-06-20T16:22:44.093Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_155", "variant_name": null}, {"function_name": "Fn_multiple_function_155", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_155\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"year\":1861,\"meta\":\"Value\",\"full_name\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_155_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the name of the U.S. president in a given year.\n  function_name: 'US_president.in_year' or null,\n  // The year in question.\n  year: int,\n  // Option to return full name with middle initial, if applicable. (default: True)\n  full_name: bool or null,\n} or {\n  // Locate a particular card in a deck based on rank and suit.\n  function_name: 'find_card_in_deck' or null,\n  // Rank of the card (e.g. Ace, Two, King).\n  rank: string,\n  // Suit of the card (e.g. Hearts, Spades, Diamonds, Clubs).\n  suit: string,\n  // Deck of cards. If not provided, the deck will be a standard 52 card deck by default\n  deck: [\n    {\n      // \n      rank: string or null,\n      // \n      suit: string or null,\n    }\n  ],\n} or {\n  // Retrieve the details of the last match played by a specified soccer club.\n  function_name: 'soccer.get_last_match' or null,\n  // The name of the soccer club.\n  team_name: string,\n  // If true, include match statistics like possession, shots on target etc. Default is false.\n  include_stats: bool or null,\n} or {\n  // Update user information in the database.\n  function_name: 'update_user_info' or null,\n  // The user ID of the customer.\n  user_id: int,\n  // The new information to update.\n  update_info: {\n    // The customer's updated name.\n    name: string or null,\n    // The customer's updated email.\n    email: string or null,\n  },\n  // The database where the user's information is stored. (default: CustomerInfo)\n  database: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who was the full name of the president of the United States in 1861?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"US_president.in_year\",\n  \"year\": 1861,\n  \"full_name\": true\n}\n\nThe answer is:\n\nAbraham Lincoln", "metadata": {"logprobs": null, "prompt_tokens": 495, "output_tokens": 57, "total_tokens": 552, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "38cd8407-9ecb-4efc-8ef2-f293976076c6", "event_id": "38cd8407-9ecb-4efc-8ef2-f293976076c6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 161152, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_155", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6141f1cb-7706-4ada-8c30-cffc015b59ec", "event_id": "62a8f2a4-a06d-4d20-867a-96ea799ec766", "parent_event_id": "6141f1cb-7706-4ada-8c30-cffc015b59ec", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2558, "start_time": "2024-06-20T16:22:44.912Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_156", "variant_name": null}, {"function_name": "Fn_multiple_function_156", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_156\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"discovery\":\"neutron\",\"detail\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_156_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Get the person or team who made a particular scientific discovery\n  function_name: 'get_discoverer' or null,\n  // The discovery for which the discoverer's information is needed.\n  discovery: string,\n  // Optional flag to get additional details about the discoverer, such as birth date and nationality. Defaults to false.\n  detail: bool,\n} or {\n  // Predict the likelihood of diabetes type 2 based on a person's weight and height.\n  function_name: 'diabetes_prediction' or null,\n  // Weight of the person in lbs.\n  weight: float,\n  // Height of the person in inches.\n  height: float,\n  // Physical activity level of the person.\n  activity_level: 'sedentary' or 'lightly active' or 'moderately active' or 'very active' or 'extra active',\n} or {\n  // Get the working hours of a museum in a specific location.\n  function_name: 'museum_working_hours.get' or null,\n  // The name of the museum.\n  museum: string,\n  // The location of the museum.\n  location: string,\n  // Specific day of the week. Optional parameter. Default is 'today'.\n  day: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who discovered the neutron? Give me detail information."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"get_discoverer\",\n  \"discovery\": \"neutron\",\n  \"detail\": true\n}\n\nThe person who discovered the neutron is James Chadwick.\n\nAdditional details about the discoverer:\n\n- James Chadwick was a British physicist who is known for his discovery of the neutron in 1932.\n- He was born on October 20, 1891 in Cheshire, England.\n- Chadwick studied at the University of Manchester under Ernest Rutherford and later worked as a research assistant at the Cavendish Laboratory in Cambridge.\n- In 1932, Chadwick conducted experiments that provided the first clear evidence of the existence of the neutron, a previously unknown particle that is a fundamental constituent of atomic nuclei.\n- For this discovery, Chadwick was awarded the Nobel Prize in Physics in 1935.\n- Chadwick made other important contributions to nuclear physics, including early work on the structure of the atomic nucleus.\n- He continued his research during World War II, playing a key role in the development of the atomic bomb as part of the British team of the Manhattan Project.\n- James Chadwick died on July 24, 1974 in Cambridge, England at the age of 82.", "metadata": {"logprobs": null, "prompt_tokens": 328, "output_tokens": 298, "total_tokens": 626, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6141f1cb-7706-4ada-8c30-cffc015b59ec", "event_id": "6141f1cb-7706-4ada-8c30-cffc015b59ec", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 163712, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_156", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d9c33f5b-82d9-4f09-9983-fa7f12d6ba32", "event_id": "4ac22f7b-1818-4668-a9e6-fbb8bfdaa593", "parent_event_id": "d9c33f5b-82d9-4f09-9983-fa7f12d6ba32", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1536, "start_time": "2024-06-20T16:22:47.472Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_157", "variant_name": null}, {"function_name": "Fn_multiple_function_157", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_157\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"scientist\":\"Albert Einstein\",\"date\":\"1915-03-17\",\"meta\":\"Value\",\"category\":\"Physics\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_157_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve historical contribution made by a scientist on a specific date.\n  function_name: 'historical_contrib.get_contrib' or null,\n  // The scientist whose contributions need to be searched.\n  scientist: string,\n  // The date when the contribution was made in yyyy-mm-dd format.\n  date: string,\n  // The field of the contribution, such as 'Physics' or 'Chemistry'. Default is all fields.\n  category: string or null,\n} or {\n  // Calculate the duration between two notes based on their frequencies and harmonic rhythm.\n  function_name: 'music.calculate_note_duration' or null,\n  // The frequency of the first note in Hz.\n  first_note_frequency: float,\n  // The frequency of the second note in Hz.\n  second_note_frequency: float,\n  // The tempo of the music in beats per minute. Defaults to 120 beats per minute.\n  tempo: int or null,\n} or {\n  // Calculate the greatest common divisor of two integers.\n  function_name: 'math.gcd' or null,\n  // First number.\n  num1: int,\n  // Second number.\n  num2: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What was Albert Einstein's contribution to science on March 17, 1915?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"historical_contrib.get_contrib\",\n  \"scientist\": \"Albert Einstein\",\n  \"date\": \"1915-03-17\",\n  \"category\": \"Physics\"\n}\n\nThe key details are:\n- Function name: \"historical_contrib.get_contrib\" to retrieve the historical contribution made by a scientist on a specific date\n- Scientist: \"Albert Einstein\"\n- Date: \"1915-03-17\"\n- Category: \"Physics\" (the field of the contribution)\n\nThis query would retrieve the specific scientific contribution made by Albert Einstein on March 17, 1915, in the field of Physics.", "metadata": {"logprobs": null, "prompt_tokens": 319, "output_tokens": 158, "total_tokens": 477, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d9c33f5b-82d9-4f09-9983-fa7f12d6ba32", "event_id": "d9c33f5b-82d9-4f09-9983-fa7f12d6ba32", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 165250, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_157", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "70a9f48b-cc49-4be0-80ca-d0cec31c1e5f", "event_id": "1882dc7e-ca07-416d-b4c1-67d41cb5543a", "parent_event_id": "70a9f48b-cc49-4be0-80ca-d0cec31c1e5f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 714, "start_time": "2024-06-20T16:22:49.010Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_158", "variant_name": null}, {"function_name": "Fn_multiple_function_158", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_158\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Jesus Christ\",\"meta\":\"Value\",\"source\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_158_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the current ranking of a specific team in a particular league.\n  function_name: 'sports_ranking.get_current' or null,\n  // The name of the team whose ranking is sought.\n  team: string,\n  // The league in which the team participates.\n  league: string,\n  // The season for which the ranking is sought. Defaults to the current season if not provided.\n  season: string or null,\n} or {\n  // Retrieve the earliest historical reference of a person.\n  function_name: 'get_earliest_reference' or null,\n  // The name of the person.\n  name: string,\n  // Source to fetch the reference. Default is 'scriptures'\n  source: 'scriptures' or 'historical records' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the earliest reference of Jesus Christ in history from historical record?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_earliest_reference\",\n  \"name\": \"Jesus Christ\",\n  \"source\": \"historical records\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 217, "output_tokens": 38, "total_tokens": 255, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "70a9f48b-cc49-4be0-80ca-d0cec31c1e5f", "event_id": "70a9f48b-cc49-4be0-80ca-d0cec31c1e5f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 165965, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_158", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "3581b5f2-f482-4b87-b8b6-4a3f775a2722", "event_id": "255086e5-8087-4d32-a1de-5e6a6fb5d2cf", "parent_event_id": "3581b5f2-f482-4b87-b8b6-4a3f775a2722", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 876, "start_time": "2024-06-20T16:22:49.725Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_159", "variant_name": null}, {"function_name": "Fn_multiple_function_159", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_159\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"papal_name\":\"Innocent III\",\"include_contributions\":true,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_159_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the year a particular scientific work was published.\n  function_name: 'publication_year.find' or null,\n  // Name of the author of the work.\n  author: string,\n  // Title of the scientific work.\n  work_title: string,\n  // Place of the publication, if known. Default is 'global'.\n  location: string or null,\n} or {\n  // Calculate the future value of an investment in a specific stock based on the invested amount, expected annual return and number of years.\n  function_name: 'portfolio_future_value' or null,\n  // The ticker symbol of the stock.\n  stock: string,\n  // The invested amount in USD.\n  invested_amount: float,\n  // The expected annual return on investment as a decimal. E.g. 5% = 0.05\n  expected_annual_return: float,\n  // The number of years for which the investment is made.\n  years: int,\n} or {\n  // Retrieve the biography and main religious and historical contributions of a Pope based on his papal name.\n  function_name: 'religious_history.get_papal_biography' or null,\n  // The papal name of the Pope.\n  papal_name: string,\n  // Include main contributions of the Pope in the response if true.\n  include_contributions: bool,\n} or {\n  // Get the information about a board game from a database. \n  function_name: 'board_game_info' or null,\n  // Name of the board game.\n  game_name: string,\n  // Array of information requested for the game.\n  info_required: [\n    'average_review_rating' or 'age_range' or 'number_of_players' or 'playing_time' or 'genre'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the biography and main contributions of Pope Innocent III."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"religious_history.get_papal_biography\",\n  \"papal_name\": \"Innocent III\",\n  \"include_contributions\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 456, "output_tokens": 44, "total_tokens": 500, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "3581b5f2-f482-4b87-b8b6-4a3f775a2722", "event_id": "3581b5f2-f482-4b87-b8b6-4a3f775a2722", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 166842, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_159", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "27350ee8-b6ac-41e1-80bf-c1ae5da3d1c1", "event_id": "a01c2db2-6659-4dc2-b805-9fad849b204a", "parent_event_id": "27350ee8-b6ac-41e1-80bf-c1ae5da3d1c1", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 862, "start_time": "2024-06-20T16:22:50.602Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_160", "variant_name": null}, {"function_name": "Fn_multiple_function_160", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_160\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"coverage_rate\":400,\"length\":30,\"height\":12,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_160_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Compute the probability of having 'success' outcome from binomial distribution.\n  function_name: 'prob_dist.binomial' or null,\n  // The number of independent experiments.\n  trials: int,\n  // The number of success events.\n  successes: int,\n  // The probability of success on any given trial, defaults to 0.5\n  p: float or null,\n} or {\n  // Get the musical scale of a specific key in music theory.\n  function_name: 'musical_scale' or null,\n  // The musical key for which the scale will be found.\n  key: string,\n  // The type of musical scale. (default: major)\n  scale_type: string or null,\n} or {\n  // Calculate the amount of paint needed to cover a surface area based on the coverage rate of a specific paint brand.\n  function_name: 'calculate_paint_needed' or null,\n  // The area in square feet that one gallon of paint can cover.\n  coverage_rate: int,\n  // Length of the wall to be painted in feet.\n  length: int,\n  // Height of the wall to be painted in feet.\n  height: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the total quantity of paint needed to cover a wall of 30 feet by 12 feet using a specific brand that covers 400 square feet per gallon."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"calculate_paint_needed\",\n  \"coverage_rate\": 400,\n  \"length\": 30,\n  \"height\": 12\n}", "metadata": {"logprobs": null, "prompt_tokens": 334, "output_tokens": 45, "total_tokens": 379, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "27350ee8-b6ac-41e1-80bf-c1ae5da3d1c1", "event_id": "27350ee8-b6ac-41e1-80bf-c1ae5da3d1c1", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 167706, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_160", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "ab55568e-41c2-4ada-b916-70c987142bc8", "event_id": "a223460f-5c9a-432d-aa66-8b8c722c6d1f", "parent_event_id": "ab55568e-41c2-4ada-b916-70c987142bc8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 921, "start_time": "2024-06-20T16:22:51.465Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_161", "variant_name": null}, {"function_name": "Fn_multiple_function_161", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_161\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"artist_name\":\"James Plensa\",\"meta\":\"Value\",\"year\":null,\"detail\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_161_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the compatibility score between two Zodiac signs.\n  function_name: 'get_zodiac_compatibility' or null,\n  // The first Zodiac sign.\n  sign1: string,\n  // The second Zodiac sign.\n  sign2: string,\n  // The scale on which compatibility should be shown. Default is 'percentage'.\n  scale: 'percentage' or '0-10 scale' or null,\n} or {\n  // Locate local nurseries based on location and plant types availability.\n  function_name: 'local_nursery.find' or null,\n  // The city or locality where the nursery needs to be located.\n  location: string,\n  // Type of plants the nursery should provide.\n  plant_types: [\n    'Annual' or 'Perennial' or 'Shrub' or 'Tree' or 'Herbs' or 'Fruits'\n  ],\n} or {\n  // Retrieves the most recent artwork by a specified artist with its detailed description.\n  function_name: 'get_sculpture_info' or null,\n  // The name of the artist.\n  artist_name: string,\n  // Year of the sculpture. This is optional. Default 2000\n  year: int or null,\n  // If True, it provides detailed description of the sculpture. Defaults to False.\n  detail: bool or null,\n} or {\n  // Retrieve the monarch of a specific location during a specified year.\n  function_name: 'monarch.getMonarchOfYear' or null,\n  // The location (e.g., country) whose monarch needs to be found.\n  location: string,\n  // The year to search the monarch.\n  year: int,\n  // If true, returns the full name and title of the monarch. (default: false)\n  fullName: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the most recent art sculpture by James Plensa with detailed description."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"get_sculpture_info\",\n  \"artist_name\": \"James Plensa\",\n  \"year\": null,\n  \"detail\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 473, "output_tokens": 56, "total_tokens": 529, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "ab55568e-41c2-4ada-b916-70c987142bc8", "event_id": "ab55568e-41c2-4ada-b916-70c987142bc8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 168628, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_161", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e78bd457-ea2e-4b6e-af76-7435482d3fc7", "event_id": "1563fac4-c783-41dd-a037-417ebaff41b3", "parent_event_id": "e78bd457-ea2e-4b6e-af76-7435482d3fc7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1433, "start_time": "2024-06-20T16:22:52.388Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_162", "variant_name": null}, {"function_name": "Fn_multiple_function_162", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_162\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York, NY\",\"art_form\":\"sculpture\",\"meta\":\"Value\",\"month\":null,\"user_ratings\":\"Value2\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_162_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the probability of drawing a certain card or suit from a deck of cards.\n  function_name: 'card_game_probability.calculate' or null,\n  // Total number of cards in the deck.\n  total_cards: int,\n  // Number of cards in the deck that satisfy the conditions.\n  desired_cards: int,\n  // Number of cards drawn from the deck. (default: 1)\n  cards_drawn: int or null,\n} or {\n  // Locate the most popular exhibitions based on criteria like location, time, art form, and user ratings.\n  function_name: 'find_exhibition' or null,\n  // The city where the exhibition is held, e.g., New York, NY.\n  location: string,\n  // The form of art the exhibition is displaying e.g., sculpture.\n  art_form: string,\n  // The month of exhibition. Default value will return upcoming events.\n  month: string or null,\n  // Select exhibitions with user rating threshold. Default is 'high'\n  user_ratings: 'low' or 'average' or 'high' or null,\n} or {\n  // Retrieves the most recent artwork by a specified artist with its detailed description.\n  function_name: 'get_sculpture_info' or null,\n  // The name of the artist.\n  artist_name: string,\n  // Year of the sculpture. This is optional. Default 2024\n  year: int or null,\n  // If True, it provides detailed description of the sculpture. Defaults to False.\n  detail: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the top rated modern sculpture exhibition happening in New York in the upcoming month."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"find_exhibition\",\n  \"location\": \"New York, NY\",\n  \"art_form\": \"sculpture\",\n  \"month\": null,\n  \"user_ratings\": \"high\"\n}\n\nThis query will return the top rated modern sculpture exhibitions happening in New York in the upcoming month. The `location` is set to \"New York, NY\", the `art_form` is set to \"sculpture\" to filter for sculpture exhibitions, the `month` is left as `null` to return upcoming events, and the `user_ratings` is set to \"high\" to only return exhibitions with high user ratings.", "metadata": {"logprobs": null, "prompt_tokens": 403, "output_tokens": 154, "total_tokens": 557, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e78bd457-ea2e-4b6e-af76-7435482d3fc7", "event_id": "e78bd457-ea2e-4b6e-af76-7435482d3fc7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 170062, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_162", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a9f78248-dc05-4418-8760-9e23cb8ebb7f", "event_id": "897c7a1b-7317-4deb-85d6-3e090c5e2ce7", "parent_event_id": "a9f78248-dc05-4418-8760-9e23cb8ebb7f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2250, "start_time": "2024-06-20T16:22:53.822Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_163", "variant_name": null}, {"function_name": "Fn_multiple_function_163", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_163\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"building_id\":\"B1004\",\"floors\":[2,3,4],\"meta\":\"Value\",\"mode\":\"dynamic\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_163_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves detailed player's statistics for a specific year.\n  function_name: 'player_statistic' or null,\n  // The player's name.\n  player_name: string,\n  // Year for which the statistics will be displayed.\n  year: int,\n  // The name of the team(optional). Default is 'all'\n  team_name: string or null,\n} or {\n  // Analyze a structure of a building based on its Id and floor numbers.\n  function_name: 'analyze_structure' or null,\n  // The unique identification number of the building.\n  building_id: string,\n  // Floor numbers to be analyzed.\n  floors: int[],\n  // Mode of analysis, e.g. 'static' or 'dynamic'. Default is 'static'.\n  mode: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the structural dynamic analysis of the building with building Id B1004 for 2nd, 3rd and 4th floors?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To perform the structural dynamic analysis of the building with building Id B1004 for the 2nd, 3rd, and 4th floors, the request would look like this:\n\n{\n  \"function_name\": \"analyze_structure\",\n  \"building_id\": \"B1004\",\n  \"floors\": [2, 3, 4],\n  \"mode\": \"dynamic\"\n}\n\nThe key points are:\n\n- \"function_name\": \"analyze_structure\" - This indicates that the purpose is to analyze the structure of the building.\n- \"building_id\": \"B1004\" - This is the unique identification number of the building.\n- \"floors\": [2, 3, 4] - These are the floor numbers to be analyzed.\n- \"mode\": \"dynamic\" - This specifies that the analysis should be done in dynamic mode, which takes into account the time-varying forces and the building's response over time.\n\nThe response from the system would likely include detailed information about the structural analysis, such as stress levels, deformations, natural frequencies, and other relevant metrics for the specified floors and dynamic analysis mode.", "metadata": {"logprobs": null, "prompt_tokens": 245, "output_tokens": 252, "total_tokens": 497, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a9f78248-dc05-4418-8760-9e23cb8ebb7f", "event_id": "a9f78248-dc05-4418-8760-9e23cb8ebb7f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 172314, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_163", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "d930fb74-c83b-4716-ad13-dfca31546639", "event_id": "7f9785ab-1bfb-4892-86ac-dd68e21df6aa", "parent_event_id": "d930fb74-c83b-4716-ad13-dfca31546639", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 710, "start_time": "2024-06-20T16:22:56.074Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_164", "variant_name": null}, {"function_name": "Fn_multiple_function_164", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_164\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"number\":5,\"meta\":\"Value\",\"sort_by\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_164_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetches the list of popular artworks at the Metropolitan Museum of Art. Results can be sorted based on popularity.\n  function_name: 'metropolitan_museum.get_top_artworks' or null,\n  // The number of artworks to fetch\n  number: int,\n  // The criteria to sort the results on. Default is ''.\n  sort_by: 'popularity' or 'chronological' or 'alphabetical' or null,\n} or {\n  // Search for lawsuits related to a specific company within a specific date range and location.\n  function_name: 'lawsuit_search' or null,\n  // The company related to the lawsuit.\n  company: string,\n  // Start of the date range for when the lawsuit was filed.\n  start_date: string,\n  // Location where the lawsuit was filed.\n  location: string,\n  // The status of the lawsuit. Default is 'ongoing'.\n  status: 'ongoing' or 'settled' or 'dismissed' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the list of top 5 popular artworks at the Metropolitan Museum of Art. Please sort by popularity."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"metropolitan_museum.get_top_artworks\",\n  \"number\": 5,\n  \"sort_by\": \"popularity\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 276, "output_tokens": 43, "total_tokens": 319, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "d930fb74-c83b-4716-ad13-dfca31546639", "event_id": "d930fb74-c83b-4716-ad13-dfca31546639", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 173025, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_164", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f3819522-2ff5-4784-8cfd-b3984bbc2164", "event_id": "f5146ef4-cc40-417a-8815-8bb4db5ae7ae", "parent_event_id": "f3819522-2ff5-4784-8cfd-b3984bbc2164", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1233, "start_time": "2024-06-20T16:22:56.785Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_165", "variant_name": null}, {"function_name": "Fn_multiple_function_165", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_165\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"brand\":\"Fender\",\"model\":\"American Professional II Stratocaster\",\"finish\":\"Rosewood\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_165_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby grocery stores based on specific criteria like organic fruits and vegetables.\n  function_name: 'grocery_store.find_nearby' or null,\n  // The city and state, e.g. Houston, TX\n  location: string,\n  // Categories of items to be found in the grocery store. Default is empty array\n  categories: [\n    'Organic' or 'Vegetables' or 'Fruits' or 'Dairy' or 'Seafood' or 'Bakery'\n  ],\n} or {\n  // Calculate the NPV (Net Present Value) of an investment, considering a series of future cash flows, discount rate, and an initial investment.\n  function_name: 'calculate_NPV' or null,\n  // Series of future cash flows.\n  cash_flows: float[],\n  // The discount rate to use.\n  discount_rate: float,\n  // The initial investment. Default is 0 if not specified.\n  initial_investment: float or null,\n} or {\n  // Get the closing stock price for a specific company on a specified date.\n  function_name: 'get_stock_price' or null,\n  // Name of the company.\n  company_name: string,\n  // Date of when to get the stock price. Format: yyyy-mm-dd.\n  date: string,\n  // Name of the stock exchange market where the company's stock is listed. Default is 'NASDAQ'\n  exchange: string or null,\n} or {\n  // Retrieve the current retail price of a specific musical instrument.\n  function_name: 'instrument_price.get' or null,\n  // The brand of the instrument.\n  brand: string,\n  // The specific model of the instrument.\n  model: string,\n  // The color or type of finish on the instrument.\n  finish: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: What's the retail price of a Fender American Professional II Stratocaster in Rosewood Finish?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the retail price of a Fender American Professional II Stratocaster in Rosewood Finish, we can use the following schema:\n\n{\n  \"function_name\": \"instrument_price.get\",\n  \"brand\": \"Fender\",\n  \"model\": \"American Professional II Stratocaster\",\n  \"finish\": \"Rosewood\"\n}\n\nThe response would provide the current retail price for that specific musical instrument model and finish.", "metadata": {"logprobs": null, "prompt_tokens": 474, "output_tokens": 104, "total_tokens": 578, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f3819522-2ff5-4784-8cfd-b3984bbc2164", "event_id": "f3819522-2ff5-4784-8cfd-b3984bbc2164", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 174260, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_165", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "aafe1956-263c-4b06-8fbc-0740758961fd", "event_id": "dcbaece6-8737-47ce-98b9-7432ae20a64f", "parent_event_id": "aafe1956-263c-4b06-8fbc-0740758961fd", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 886, "start_time": "2024-06-20T16:22:58.020Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_166", "variant_name": null}, {"function_name": "Fn_multiple_function_166", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_166\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"model\":\"Gibson Les Paul\",\"condition\":\"Value2\",\"location\":\"Chicago\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_166_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // This function identifies the RGB values of a named color.\n  function_name: 'identify_color_rgb' or null,\n  // Name of the color.\n  color_name: string,\n  // The color standard (e.g. basic, pantone). Default is 'basic'\n  standard: string or null,\n} or {\n  // Find top chess players in a location based on rating.\n  function_name: 'board_game.chess.get_top_players' or null,\n  // The city you want to find the players from.\n  location: string,\n  // Minimum rating to filter the players.\n  minimum_rating: int,\n  // Number of players you want to retrieve, default value is 10 (default: 10)\n  number_of_players: int or null,\n} or {\n  // Retrieve the price of a specific used guitar model based on its condition and location.\n  function_name: 'guitar_price.find' or null,\n  // The model of the guitar.\n  model: string,\n  // The condition of the guitar.\n  condition: 'Poor' or 'Good' or 'Excellent',\n  // The location where the guitar is being sold.\n  location: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the price of a used Gibson Les Paul guitar in excellent condition in the Chicago area."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"guitar_price.find\",\n  \"model\": \"Gibson Les Paul\",\n  \"condition\": \"Excellent\",\n  \"location\": \"Chicago\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 328, "output_tokens": 57, "total_tokens": 385, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "aafe1956-263c-4b06-8fbc-0740758961fd", "event_id": "aafe1956-263c-4b06-8fbc-0740758961fd", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 175148, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_166", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "6f7ced00-bb98-49e7-bab7-6f57f9853fc4", "event_id": "4a073710-0a88-4d03-9777-3ae5162f69c8", "parent_event_id": "6f7ced00-bb98-49e7-bab7-6f57f9853fc4", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 960, "start_time": "2024-06-20T16:22:58.908Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_167", "variant_name": null}, {"function_name": "Fn_multiple_function_167", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_167\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"genre\":\"classical\",\"location\":\"Los Angeles\",\"date\":\"this weekend\",\"meta\":\"Value\",\"price_range\":\"Value1\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_167_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Provides comprehensive historical details about a specified religion till a specified century.\n  function_name: 'religion.history_info' or null,\n  // The name of the religion for which historical details are needed.\n  religion: string,\n  // The century till which historical details are needed.\n  till_century: int,\n  // To include influential people related to the religion during that time period, default is False\n  include_people: bool or null,\n} or {\n  // Retrieve the score of the most recent game for a specified sports team.\n  function_name: 'team_score.get_latest' or null,\n  // Name of the sports team.\n  team: string,\n  // Include the name of the opponent team in the return. (default: false)\n  include_opponent: bool or null,\n} or {\n  // Locate a concert based on specific criteria like genre, location, and date.\n  function_name: 'concert.search' or null,\n  // Genre of the concert.\n  genre: string,\n  // City of the concert.\n  location: string,\n  // Date of the concert, e.g. this weekend, today, tomorrow, or date string.\n  date: string,\n  // Expected price range of the concert tickets. Default is 'any'\n  price_range: 'free' or 'cheap' or 'moderate' or 'expensive' or 'any' or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a classical concert this weekend in Los Angeles with cheap tickets."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"concert.search\",\n  \"genre\": \"classical\",\n  \"location\": \"Los Angeles\",\n  \"date\": \"this weekend\",\n  \"price_range\": \"cheap\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 365, "output_tokens": 54, "total_tokens": 419, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "6f7ced00-bb98-49e7-bab7-6f57f9853fc4", "event_id": "6f7ced00-bb98-49e7-bab7-6f57f9853fc4", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 176109, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_167", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b416e3d2-f1ef-457d-919e-e6e05a4990d3", "event_id": "2a1e0755-907d-466b-97a1-ae3d056dc1b3", "parent_event_id": "b416e3d2-f1ef-457d-919e-e6e05a4990d3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 811, "start_time": "2024-06-20T16:22:59.869Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_168", "variant_name": null}, {"function_name": "Fn_multiple_function_168", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_168\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C\",\"start_note\":\"C4\",\"length\":16,\"meta\":\"Value\",\"tempo\":120}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_168_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the population density of a specific country in a specific year.\n  function_name: 'calculate_density' or null,\n  // The country for which the density needs to be calculated.\n  country: string,\n  // The year in which the density is to be calculated.\n  year: string,\n  // The population of the country.\n  population: int,\n  // The land area of the country in square kilometers.\n  land_area: float,\n} or {\n  // Retrieve directions from one location to another.\n  function_name: 'get_directions' or null,\n  // The starting point of the journey.\n  start_location: string,\n  // The destination point of the journey.\n  end_location: string,\n  // Type of route to use (e.g., fastest, scenic). Default is fastest.\n  route_type: 'fastest' or 'scenic' or null,\n} or {\n  // Generate a melody based on certain musical parameters.\n  function_name: 'music_generator.generate_melody' or null,\n  // The key of the melody. E.g., 'C' for C major.\n  key: string,\n  // The first note of the melody, specified in scientific pitch notation. E.g., 'C4'.\n  start_note: string,\n  // The number of measures in the melody.\n  length: int,\n  // The tempo of the melody, in beats per minute. Optional parameter. If not specified, defaults to 120.\n  tempo: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Generate a melody in C major scale, starting with the note C4, 16 measures long, at 120 beats per minute."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"music_generator.generate_melody\",\n  \"key\": \"C\",\n  \"start_note\": \"C4\",\n  \"length\": 16,\n  \"tempo\": 120\n}", "metadata": {"logprobs": null, "prompt_tokens": 405, "output_tokens": 56, "total_tokens": 461, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b416e3d2-f1ef-457d-919e-e6e05a4990d3", "event_id": "b416e3d2-f1ef-457d-919e-e6e05a4990d3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 176922, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_168", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "19607b04-65c8-4682-b8c0-ba49ce56e651", "event_id": "34ca680a-58d7-4a1c-9026-355ae09f1891", "parent_event_id": "19607b04-65c8-4682-b8c0-ba49ce56e651", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 2435, "start_time": "2024-06-20T16:23:00.682Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_169", "variant_name": null}, {"function_name": "Fn_multiple_function_169", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_169\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"song_title\":\"Bohemian Rhapsody\",\"artist_name\":\"Queen\",\"meta\":\"Value\",\"lang\":\"Value0\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_169_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the current stock price of the specified companies\n  function_name: 'get_stock_price' or null,\n  // The list of companies for which to retrieve the stock price.\n  company_names: string[],\n} or {\n  // Retrieve the lyrics of a song based on the artist's name and song title.\n  function_name: 'get_song_lyrics' or null,\n  // The title of the song.\n  song_title: string,\n  // The name of the artist who performed the song.\n  artist_name: string,\n  // The language of the lyrics. Default is English.\n  lang: 'English' or 'French' or 'Spanish' or 'German' or 'Italian' or null,\n} or {\n  // Retrieve the basic information such as elevation and area of a national park.\n  function_name: 'park_information' or null,\n  // The name of the national park.\n  park_name: string,\n  // The type of information you want about the park.\n  information: [\n    'Elevation' or 'Area' or 'Location' or 'Established Year'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the lyrics to the song 'Bohemian Rhapsody' by Queen."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is a response that avoids reproducing copyrighted material:\n\n{\n  \"function_name\": \"get_song_lyrics\",\n  \"song_title\": \"Bohemian Rhapsody\",\n  \"artist_name\": \"Queen\",\n  \"lang\": \"English\"\n}\n\nI'm afraid I can't provide the full lyrics to \"Bohemian Rhapsody\" directly, as that would involve reproducing copyrighted material. However, I can summarize that \"Bohemian Rhapsody\" is a famous and iconic song by the rock band Queen, released in 1975. It is known for its complex, multi-part structure and Queen's masterful vocal harmonies. The lyrics touch on themes of existentialism, nihilism, and inner turmoil. It is considered one of the greatest and most influential rock songs of all time. If you'd like to read the full lyrics, I'd recommend checking an official source like the band's website or a licensed lyrics provider.", "metadata": {"logprobs": null, "prompt_tokens": 315, "output_tokens": 224, "total_tokens": 539, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "19607b04-65c8-4682-b8c0-ba49ce56e651", "event_id": "19607b04-65c8-4682-b8c0-ba49ce56e651", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 179358, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_169", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "250b4898-3ecc-4b98-b92f-4d56b39f9f30", "event_id": "5de834c9-067e-4a20-82b6-0b766d657fbb", "parent_event_id": "250b4898-3ecc-4b98-b92f-4d56b39f9f30", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 839, "start_time": "2024-06-20T16:23:03.118Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_170", "variant_name": null}, {"function_name": "Fn_multiple_function_170", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_170\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"key\":\"C#\",\"meta\":\"Value\",\"scale_type\":\"major\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_170_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve information of items from Walmart including stock availability.\n  function_name: 'walmart.purchase' or null,\n  // Location of the nearest Walmart.\n  loc: string,\n  // Items to be purchased listed in an array.\n  product_list: string[],\n  // Size of the product pack if applicable. The size of the array should be equal to product_list. Default is an empty array\n  pack_size: int[],\n} or {\n  // Get the musical scale of a specific key in music theory.\n  function_name: 'musical_scale' or null,\n  // The musical key for which the scale will be found.\n  key: string,\n  // The type of musical scale. (default: major)\n  scale_type: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the musical scale associated with C sharp major?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find the musical scale associated with C sharp major, the schema would be:\n\n{\n  \"function_name\": \"musical_scale\",\n  \"key\": \"C#\",\n  \"scale_type\": \"major\"\n}\n\nThe response would be the musical scale for C sharp major.", "metadata": {"logprobs": null, "prompt_tokens": 211, "output_tokens": 67, "total_tokens": 278, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "250b4898-3ecc-4b98-b92f-4d56b39f9f30", "event_id": "250b4898-3ecc-4b98-b92f-4d56b39f9f30", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 180198, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_170", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "54fc416b-b627-423e-8b41-ed118f7ae465", "event_id": "453114d6-e67b-4f1c-a1b0-80bbcc457012", "parent_event_id": "54fc416b-b627-423e-8b41-ed118f7ae465", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 809, "start_time": "2024-06-20T16:23:03.958Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_171", "variant_name": null}, {"function_name": "Fn_multiple_function_171", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_171\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"player_name\":\"Cristiano Ronaldo\",\"season\":\"2019-2020\",\"meta\":\"Value\",\"league\":\"all\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_171_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the basic information such as elevation and area of a national park.\n  function_name: 'park_information' or null,\n  // The name of the national park.\n  park_name: string,\n  // The type of information you want about the park.\n  information: [\n    'Elevation' or 'Area' or 'Location' or 'Established Year'\n  ],\n} or {\n  // Retrieve the U.S. president during a specific event in American history.\n  function_name: 'us_history.get_president' or null,\n  // The event in U.S. history.\n  event: string,\n  // The specific year of the event.\n  year: int,\n} or {\n  // Calculates the probability of rolling a certain sum with two dice, commonly used in board game like Monopoly.\n  function_name: 'monopoly_odds_calculator' or null,\n  // The number for which the odds are calculated.\n  number: int,\n  // The number of dice involved in the roll.\n  dice_number: int,\n  // The number of faces on a single die. Default is 6 for standard six-faced die.\n  dice_faces: int or null,\n} or {\n  // Retrieve soccer player statistics for a given season.\n  function_name: 'soccer_stat.get_player_stats' or null,\n  // Name of the player.\n  player_name: string,\n  // Soccer season, usually specified by two years.\n  season: string,\n  // Optional - the soccer league, defaults to all leagues. Default 'all'\n  league: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the player stats of Cristiano Ronaldo in the 2019-2020 season"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"soccer_stat.get_player_stats\",\n  \"player_name\": \"Cristiano Ronaldo\",\n  \"season\": \"2019-2020\",\n  \"league\": \"all\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 429, "output_tokens": 59, "total_tokens": 488, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "54fc416b-b627-423e-8b41-ed118f7ae465", "event_id": "54fc416b-b627-423e-8b41-ed118f7ae465", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 181009, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_171", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "78c0139c-3732-416c-998e-03d61fa53e57", "event_id": "bc6108c1-e1f8-43c0-9864-e1342eaf033e", "parent_event_id": "78c0139c-3732-416c-998e-03d61fa53e57", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 608, "start_time": "2024-06-20T16:23:04.769Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_172", "variant_name": null}, {"function_name": "Fn_multiple_function_172", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_172\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"teams\":[\"Lakers\",\"Clippers\"],\"date\":\"2021-01-28\",\"meta\":\"Value\",\"venue\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_172_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the probability of getting a full house in a poker game.\n  function_name: 'poker_probability.full_house' or null,\n  // The size of the deck. Default is 52.\n  deck_size: int,\n  // The size of the hand. Default is 5.\n  hand_size: int,\n} or {\n  // Get the winner of a specific basketball game.\n  function_name: 'game_result.get_winner' or null,\n  // List of two teams who played the game.\n  teams: string[],\n  // The date of the game, formatted as YYYY-MM-DD.\n  date: string,\n  // Optional: The venue of the game. Default is ''\n  venue: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who won the basketball game between Lakers and Clippers on Jan 28, 2021?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"game_result.get_winner\",\n  \"teams\": [\"Lakers\", \"Clippers\"],\n  \"date\": \"2021-01-28\",\n  \"venue\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 216, "output_tokens": 64, "total_tokens": 280, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "78c0139c-3732-416c-998e-03d61fa53e57", "event_id": "78c0139c-3732-416c-998e-03d61fa53e57", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 181618, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_172", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9db09841-00c9-46fb-b0cc-403c44c04d2f", "event_id": "2dff9cee-77e9-4eab-ac93-7aad41f22a0c", "parent_event_id": "9db09841-00c9-46fb-b0cc-403c44c04d2f", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 934, "start_time": "2024-06-20T16:23:05.378Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_173", "variant_name": null}, {"function_name": "Fn_multiple_function_173", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_173\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"name\":\"Lebron James\",\"sport\":\"Value0\",\"meta\":\"Value\",\"team\":\"Los Angeles Lakers\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_173_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve current traffic conditions for a specified route.\n  function_name: 'get_traffic_info' or null,\n  // The starting point of the route.\n  start_location: string,\n  // The destination of the route.\n  end_location: string,\n  // Preferred method of transportation, default to 'driving'.\n  mode: 'driving' or 'walking' or 'bicycling' or 'transit' or null,\n} or {\n  // Calculates the compound interest of an investment over a given time period.\n  function_name: 'calculate_compound_interest' or null,\n  // The initial amount of the investment.\n  principle: float,\n  // The yearly interest rate of the investment.\n  interest_rate: float,\n  // The time, in years, the money is invested or borrowed for.\n  time: int,\n  // The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly).\n  compounds_per_year: int or null,\n} or {\n  // Convert cooking measurements from one unit to another.\n  function_name: 'cooking_conversion.convert' or null,\n  // The quantity to be converted.\n  quantity: int,\n  // The unit to convert from.\n  from_unit: string,\n  // The unit to convert to.\n  to_unit: string,\n  // The item to be converted.\n  item: string,\n} or {\n  // Find the profile information of a sports athlete based on their full name.\n  function_name: 'sports_db.find_athlete' or null,\n  // The full name of the athlete.\n  name: string,\n  // The team the athlete belong to. Default is ''\n  team: string or null,\n  // The sport that athlete plays.\n  sport: 'Basketball' or 'Baseball' or 'Football' or 'Soccer',\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me the detailed profile of basketball player Lebron James"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the expected schema:\n\n{\n  \"function_name\": \"sports_db.find_athlete\",\n  \"name\": \"Lebron James\",\n  \"team\": \"Los Angeles Lakers\",\n  \"sport\": \"Basketball\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 479, "output_tokens": 61, "total_tokens": 540, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9db09841-00c9-46fb-b0cc-403c44c04d2f", "event_id": "9db09841-00c9-46fb-b0cc-403c44c04d2f", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 182554, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_173", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "f334dee5-58e1-4690-8525-819d58100e4d", "event_id": "12b75d96-51ea-4eb6-bf8d-58ba1aca40e0", "parent_event_id": "f334dee5-58e1-4690-8525-819d58100e4d", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 686, "start_time": "2024-06-20T16:23:06.314Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_174", "variant_name": null}, {"function_name": "Fn_multiple_function_174", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_174\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"season\":2021,\"meta\":\"Value\",\"top\":1}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_174_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the defence ranking of NBA teams in a specified season.\n  function_name: 'get_defense_ranking' or null,\n  // The NBA season to get defence ranking from.\n  season: int,\n  // Number of top teams in defence ranking to fetch. (default: 1)\n  top: int or null,\n} or {\n  // Sorts a given list in ascending or descending order.\n  function_name: 'array_sort' or null,\n  // The list of numbers to be sorted.\n  list: float[],\n  // Order of sorting. If not specified, it will default to ascending.\n  order: 'ascending' or 'descending',\n} or {\n  // Calculate the Compound Annual Growth Rate (CAGR) given an initial investment value, a final investment value, and the number of years.\n  function_name: 'calculate_cagr' or null,\n  // The initial investment value.\n  initial_value: float,\n  // The final investment value.\n  final_value: float,\n  // The period of the investment in years.\n  period_in_years: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get the NBA team's ranking with the best defence in the 2021 season."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"get_defense_ranking\",\n  \"season\": 2021,\n  \"top\": 1\n}", "metadata": {"logprobs": null, "prompt_tokens": 303, "output_tokens": 36, "total_tokens": 339, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "f334dee5-58e1-4690-8525-819d58100e4d", "event_id": "f334dee5-58e1-4690-8525-819d58100e4d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 183241, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_174", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "079d7266-0109-48fd-8d5f-9ce710c2ef1d", "event_id": "71ce48f3-47df-44fc-afd7-8c2a27f922e6", "parent_event_id": "079d7266-0109-48fd-8d5f-9ce710c2ef1d", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 707, "start_time": "2024-06-20T16:23:07.001Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_175", "variant_name": null}, {"function_name": "Fn_multiple_function_175", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_175\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team\":\"Manchester United\",\"league\":\"Premier League\",\"meta\":\"Value\",\"season\":2024}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_175_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Fetch the ranking of a specific sports team in a specific league\n  function_name: 'sports_ranking' or null,\n  // The name of the team.\n  team: string,\n  // The name of the league.\n  league: string,\n  // Optional parameter to specify the season, default is the current season, 2024\n  season: int or null,\n} or {\n  // Calculates the compound interest of an investment over a given time period.\n  function_name: 'calculate_compound_interest' or null,\n  // The initial amount of the investment.\n  principle: float,\n  // The yearly interest rate of the investment.\n  interest_rate: float,\n  // The time, in years, the money is invested or borrowed for.\n  time: int,\n  // The number of times the interest is compounded per year. Default is 1 (interest is compounded yearly).\n  compounds_per_year: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the ranking of Manchester United in Premier League?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_ranking\",\n  \"team\": \"Manchester United\",\n  \"league\": \"Premier League\",\n  \"season\": 2024\n}", "metadata": {"logprobs": null, "prompt_tokens": 252, "output_tokens": 44, "total_tokens": 296, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "079d7266-0109-48fd-8d5f-9ce710c2ef1d", "event_id": "079d7266-0109-48fd-8d5f-9ce710c2ef1d", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 183949, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_175", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "70807ef8-06b7-484d-b689-f3cb3e8ee9e0", "event_id": "13328c21-510f-4620-b4a4-974e47bc4435", "parent_event_id": "70807ef8-06b7-484d-b689-f3cb3e8ee9e0", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 709, "start_time": "2024-06-20T16:23:07.709Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_176", "variant_name": null}, {"function_name": "Fn_multiple_function_176", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_176\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"sport\":\"tennis\",\"meta\":\"Value\",\"gender\":\"women\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_176_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Search for a musical instrument within specified budget and of specific type.\n  function_name: 'find_instrument' or null,\n  // Your budget for the instrument.\n  budget: float,\n  // Type of the instrument\n  type: string,\n  // Maker of the instrument, Optional parameter. Default is ''\n  make: string or null,\n} or {\n  // Calculates the binomial probability given the number of trials, successes and the probability of success on an individual trial.\n  function_name: 'calculate_binomial_probability' or null,\n  // The total number of trials.\n  number_of_trials: int,\n  // The desired number of successful outcomes.\n  number_of_successes: int,\n  // The probability of a successful outcome on any given trial. (default: 0.5)\n  probability_of_success: float or null,\n} or {\n  // Calculate the electromagnetic force between two charges placed at a certain distance.\n  function_name: 'electromagnetic_force' or null,\n  // The magnitude of the first charge in coulombs.\n  charge1: float,\n  // The magnitude of the second charge in coulombs.\n  charge2: float,\n  // The distance between the two charges in meters.\n  distance: float,\n  // The relative permittivity of the medium in which the charges are present. Default is 8.854 x 10^-12 F/m (vacuum permittivity).\n  medium_permittivity: float or null,\n} or {\n  // Get the top player in a specific sport.\n  function_name: 'sports_ranking.get_top_player' or null,\n  // The type of sport.\n  sport: string,\n  // The gender of the sport category. Optional. (default: men)\n  gender: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Who is ranked as the top player in woman tennis?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"sports_ranking.get_top_player\",\n  \"sport\": \"tennis\",\n  \"gender\": \"women\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 458, "output_tokens": 40, "total_tokens": 498, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "70807ef8-06b7-484d-b689-f3cb3e8ee9e0", "event_id": "70807ef8-06b7-484d-b689-f3cb3e8ee9e0", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 184660, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_176", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4ba8e3e8-069a-43a5-8dc6-9fc2d2aea0ff", "event_id": "00c7f25e-9e7b-4efa-b29d-a8412b419502", "parent_event_id": "4ba8e3e8-069a-43a5-8dc6-9fc2d2aea0ff", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 805, "start_time": "2024-06-20T16:23:08.420Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_177", "variant_name": null}, {"function_name": "Fn_multiple_function_177", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_177\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"team_name\":\"Manchester United\",\"num_of_games\":6,\"league\":\"Premier League\",\"meta\":\"Value\",\"location\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_177_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Locate nearby vegan restaurants based on specific criteria like operating hours.\n  function_name: 'vegan_restaurant.find_nearby' or null,\n  // The city and state, e.g. New York, NY\n  location: string,\n  // Preferred latest closing time of the restaurant. E.g. if 11 is given, then restaurants that close at or after 11 PM will be considered. This is in 24 hour format. Default is 9.\n  operating_hours: int or null,\n} or {\n  // Books a hotel room given the location, room type, stay duration and any additional preferences.\n  function_name: 'hotel_booking' or null,\n  // The city where you want to book the hotel.\n  location: string,\n  // Type of the room required. Options: 'single', 'double', 'deluxe', etc.\n  room_type: string,\n  // The number of nights you want to book the hotel for.\n  duration: int,\n  // The date when your stay begins.\n  start_date: string,\n  // Optional preferences of stay at the hotel. Default is empty array\n  preferences: [\n    'pet_friendly' or 'gym' or 'swimming_pool' or 'free_breakfast' or 'parking'\n  ],\n} or {\n  // Locate a particular card in a deck based on rank and suit.\n  function_name: 'find_card_in_deck' or null,\n  // Rank of the card (e.g. Ace, Two, King).\n  rank: string,\n  // Suit of the card (e.g. Hearts, Spades, Diamonds, Clubs).\n  suit: string,\n  // Deck of cards. If not provided, the deck will be a standard 52 card deck by default\n  deck: [\n    {\n      // \n      rank: string or null,\n      // \n      suit: string or null,\n    }\n  ],\n} or {\n  // Fetches the schedule of the specified sports team for the specified number of games in the given league.\n  function_name: 'sports_team.get_schedule' or null,\n  // The name of the sports team.\n  team_name: string,\n  // Number of games for which to fetch the schedule.\n  num_of_games: int,\n  // The name of the sports league. If not provided, the function will fetch the schedule for all games, regardless of the league.\n  league: string,\n  // Optional. The city or venue where games are to be held. If not provided, all venues will be considered. Default to ''.\n  location: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me the schedule of Manchester United for the next 6 games in Premier League."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the schema you provided:\n\n{\n  \"function_name\": \"sports_team.get_schedule\",\n  \"team_name\": \"Manchester United\",\n  \"num_of_games\": 6,\n  \"league\": \"Premier League\",\n  \"location\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 664, "output_tokens": 71, "total_tokens": 735, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4ba8e3e8-069a-43a5-8dc6-9fc2d2aea0ff", "event_id": "4ba8e3e8-069a-43a5-8dc6-9fc2d2aea0ff", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 185467, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_177", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b5004942-8db6-4fc8-bf3f-a2c3cfb256f8", "event_id": "fea46c7d-0b83-41d2-97d8-da13cf31767f", "parent_event_id": "b5004942-8db6-4fc8-bf3f-a2c3cfb256f8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 865, "start_time": "2024-06-20T16:23:09.227Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_178", "variant_name": null}, {"function_name": "Fn_multiple_function_178", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_178\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"New York\",\"minimum_rating\":2300,\"meta\":\"Value\",\"number_of_players\":10}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_178_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find top chess players in a location based on rating.\n  function_name: 'board_game.chess.get_top_players' or null,\n  // The city you want to find the players from.\n  location: string,\n  // Minimum rating to filter the players.\n  minimum_rating: int,\n  // Number of players you want to retrieve, default value is 10 (default: 10)\n  number_of_players: int or null,\n} or {\n  // Retrieve historical GDP data for a specific country and time range.\n  function_name: 'get_historical_GDP' or null,\n  // The country for which the historical GDP data is required.\n  country: string,\n  // Starting year of the period for which GDP data is required.\n  start_year: int,\n  // Ending year of the period for which GDP data is required.\n  end_year: int,\n} or {\n  // Retrieve the travel distance and estimated travel time from one location to another via car\n  function_name: 'maps.get_distance_duration' or null,\n  // Starting point of the journey\n  start_location: string,\n  // Ending point of the journey\n  end_location: string,\n  // If true, considers current traffic. Default is false.\n  traffic: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the top chess players in New York with a rating above 2300."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"board_game.chess.get_top_players\",\n  \"location\": \"New York\",\n  \"minimum_rating\": 2300,\n  \"number_of_players\": 10\n}", "metadata": {"logprobs": null, "prompt_tokens": 344, "output_tokens": 67, "total_tokens": 411, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b5004942-8db6-4fc8-bf3f-a2c3cfb256f8", "event_id": "b5004942-8db6-4fc8-bf3f-a2c3cfb256f8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 186333, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_178", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "14b5ec2e-94f7-48a1-9769-9ae4867c2db7", "event_id": "dcd87e6a-c727-4860-9db8-ba12aac587a1", "parent_event_id": "14b5ec2e-94f7-48a1-9769-9ae4867c2db7", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 5175, "start_time": "2024-06-20T16:23:10.093Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_179", "variant_name": null}, {"function_name": "Fn_multiple_function_179", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_179\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"rank\":\"Queen\",\"suit\":\"Hearts\",\"deck\":[{\"rank\":\"Ace\",\"suit\":\"Hearts\"},{\"rank\":\"Two\",\"suit\":\"Hearts\"},{\"rank\":\"Three\",\"suit\":\"Hearts\"},{\"rank\":\"Four\",\"suit\":\"Hearts\"},{\"rank\":\"Five\",\"suit\":\"Hearts\"},{\"rank\":\"Six\",\"suit\":\"Hearts\"},{\"rank\":\"Seven\",\"suit\":\"Hearts\"},{\"rank\":\"Eight\",\"suit\":\"Hearts\"},{\"rank\":\"Nine\",\"suit\":\"Hearts\"},{\"rank\":\"Ten\",\"suit\":\"Hearts\"},{\"rank\":\"Jack\",\"suit\":\"Hearts\"},{\"rank\":\"Queen\",\"suit\":\"Hearts\"},{\"rank\":\"King\",\"suit\":\"Hearts\"},{\"rank\":\"Ace\",\"suit\":\"Diamonds\"},{\"rank\":\"Two\",\"suit\":\"Diamonds\"},{\"rank\":\"Three\",\"suit\":\"Diamonds\"},{\"rank\":\"Four\",\"suit\":\"Diamonds\"},{\"rank\":\"Five\",\"suit\":\"Diamonds\"},{\"rank\":\"Six\",\"suit\":\"Diamonds\"},{\"rank\":\"Seven\",\"suit\":\"Diamonds\"},{\"rank\":\"Eight\",\"suit\":\"Diamonds\"},{\"rank\":\"Nine\",\"suit\":\"Diamonds\"},{\"rank\":\"Ten\",\"suit\":\"Diamonds\"},{\"rank\":\"Jack\",\"suit\":\"Diamonds\"},{\"rank\":\"Queen\",\"suit\":\"Diamonds\"},{\"rank\":\"King\",\"suit\":\"Diamonds\"},{\"rank\":\"Ace\",\"suit\":\"Clubs\"},{\"rank\":\"Two\",\"suit\":\"Clubs\"},{\"rank\":\"Three\",\"suit\":\"Clubs\"},{\"rank\":\"Four\",\"suit\":\"Clubs\"},{\"rank\":\"Five\",\"suit\":\"Clubs\"},{\"rank\":\"Six\",\"suit\":\"Clubs\"},{\"rank\":\"Seven\",\"suit\":\"Clubs\"},{\"rank\":\"Eight\",\"suit\":\"Clubs\"},{\"rank\":\"Nine\",\"suit\":\"Clubs\"},{\"rank\":\"Ten\",\"suit\":\"Clubs\"},{\"rank\":\"Jack\",\"suit\":\"Clubs\"},{\"rank\":\"Queen\",\"suit\":\"Clubs\"},{\"rank\":\"King\",\"suit\":\"Clubs\"},{\"rank\":\"Ace\",\"suit\":\"Spades\"},{\"rank\":\"Two\",\"suit\":\"Spades\"}],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_179_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Convert an amount from a base currency to a target currency based on the current exchange rate.\n  function_name: 'currency_exchange.convert' or null,\n  // The currency to convert from.\n  base_currency: string,\n  // The currency to convert to.\n  target_currency: string,\n  // The amount in base currency to convert\n  amount: float,\n} or {\n  // Locate local nurseries based on location and plant types availability.\n  function_name: 'local_nursery.find' or null,\n  // The city or locality where the nursery needs to be located.\n  location: string,\n  // Type of plants the nursery should provide.\n  plant_types: [\n    'Annual' or 'Perennial' or 'Shrub' or 'Tree' or 'Herbs' or 'Fruits'\n  ],\n} or {\n  // Locate a particular card in a deck based on rank and suit.\n  function_name: 'find_card_in_deck' or null,\n  // Rank of the card (e.g. Ace, Two, King).\n  rank: string,\n  // Suit of the card (e.g. Hearts, Spades, Diamonds, Clubs).\n  suit: string,\n  // Deck of cards. If not provided, the deck will be a standard 52 card deck by default\n  deck: [\n    {\n      // \n      rank: string or null,\n      // \n      suit: string or null,\n    }\n  ],\n} or {\n  // Convert a value from one kitchen unit to another for cooking purposes.\n  function_name: 'recipe.unit_conversion' or null,\n  // The value to be converted.\n  value: float,\n  // The unit to convert from. Supports 'teaspoon', 'tablespoon', 'cup', etc.\n  from_unit: string,\n  // The unit to convert to. Supports 'teaspoon', 'tablespoon', 'cup', etc.\n  to_unit: string,\n  // The precision to round the output to, in case of a non-integer result. Optional, default is 0.\n  precision: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find a Card of rank 'Queen' and suit 'Hearts' in the deck."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "To find a card with rank 'Queen' and suit 'Hearts' in a deck, the request would look like this:\n\n{\n  \"function_name\": \"find_card_in_deck\",\n  \"rank\": \"Queen\",\n  \"suit\": \"Hearts\",\n  \"deck\": [\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Hearts\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Diamonds\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Three\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Four\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Five\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Six\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Seven\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Eight\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Nine\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Ten\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Jack\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Queen\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"King\",\n      \"suit\": \"Clubs\"\n    },\n    {\n      \"rank\": \"Ace\",\n      \"suit\": \"Spades\"\n    },\n    {\n      \"rank\": \"Two\",\n      \"suit\": \"Spades\"", "metadata": {"logprobs": null, "prompt_tokens": 563, "output_tokens": 1000, "total_tokens": 1563, "finish_reason": "\"max_tokens\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "14b5ec2e-94f7-48a1-9769-9ae4867c2db7", "event_id": "14b5ec2e-94f7-48a1-9769-9ae4867c2db7", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 191509, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_179", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "fbe37a52-7004-4b09-b501-6d8483579743", "event_id": "5708575e-af0d-4429-9534-8c48ea7dc8e1", "parent_event_id": "fbe37a52-7004-4b09-b501-6d8483579743", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 691, "start_time": "2024-06-20T16:23:15.269Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_180", "variant_name": null}, {"function_name": "Fn_multiple_function_180", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_180\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"deck_size\":52,\"hand_size\":5,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_180_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the probability of getting a full house in a poker game.\n  function_name: 'poker_probability.full_house' or null,\n  // The size of the deck. Default is 52.\n  deck_size: int,\n  // The size of the hand. Default is 5.\n  hand_size: int,\n} or {\n  // Locate nearby hospitals based on location and radius. Options to include specific departments are available.\n  function_name: 'hospital.locate' or null,\n  // The city and state, e.g. Denver, CO\n  location: string,\n  // The radius within which you want to find the hospital in kms.\n  radius: int,\n  // Specific department within the hospital. Default is ''.\n  department: 'General Medicine' or 'Emergency' or 'Pediatrics' or 'Cardiology' or 'Orthopedics' or null,\n} or {\n  // Find a recipe based on the dietary restrictions, recipe type, and time constraints.\n  function_name: 'find_recipe' or null,\n  // Dietary restrictions e.g. vegan, vegetarian, gluten free, dairy free.\n  dietary_restrictions: string,\n  // Type of the recipe. E.g. dessert, main course, breakfast.\n  recipe_type: string,\n  // Time limit in minutes to prep the meal.\n  time: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the probability of getting a full house in poker?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"poker_probability.full_house\",\n  \"deck_size\": 52,\n  \"hand_size\": 5\n}", "metadata": {"logprobs": null, "prompt_tokens": 361, "output_tokens": 41, "total_tokens": 402, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "fbe37a52-7004-4b09-b501-6d8483579743", "event_id": "fbe37a52-7004-4b09-b501-6d8483579743", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 192201, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_180", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "c40516ef-b47e-4866-992f-29aac18fb5e8", "event_id": "09139246-87ad-41a5-b8be-89bef5d1c2f3", "parent_event_id": "c40516ef-b47e-4866-992f-29aac18fb5e8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 712, "start_time": "2024-06-20T16:23:15.961Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_181", "variant_name": null}, {"function_name": "Fn_multiple_function_181", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_181\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"game\":\"Zelda\",\"username\":\"Sam\",\"meta\":\"Value\",\"platform\":\"Switch\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_181_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Book a direct flight for a specific date and time from departure location to destination location.\n  function_name: 'flight.book' or null,\n  // The location you are departing from.\n  departure_location: string,\n  // The location you are flying to.\n  destination_location: string,\n  // The date of the flight. Accepts standard date format e.g., 2022-04-28.\n  date: string,\n  // Preferred time of flight. Default is ''\n  time: string or null,\n  // If set to true, only direct flights will be searched. Default is false\n  direct_flight: bool or null,\n} or {\n  // Find upcoming events of a specific genre in a given location.\n  function_name: 'event_finder.find_upcoming' or null,\n  // The city and state where the search will take place, e.g. New York, NY.\n  location: string,\n  // The genre of events.\n  genre: string,\n  // The number of days from now to include in the search. (default: 7)\n  days_ahead: int or null,\n} or {\n  // Retrieve the scientist's name who is credited for a specific scientific discovery or theory.\n  function_name: 'get_scientist_for_discovery' or null,\n  // The scientific discovery or theory.\n  discovery: string,\n} or {\n  // Fetch player statistics for a specific video game for a given user.\n  function_name: 'game_stats.fetch_player_statistics' or null,\n  // The name of the video game.\n  game: string,\n  // The username of the player.\n  username: string,\n  // The platform user is playing on. (default: PC)\n  platform: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Fetch player statistics of 'Zelda' on Switch for user 'Sam'."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"game_stats.fetch_player_statistics\",\n  \"game\": \"Zelda\",\n  \"username\": \"Sam\", \n  \"platform\": \"Switch\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 454, "output_tokens": 51, "total_tokens": 505, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "c40516ef-b47e-4866-992f-29aac18fb5e8", "event_id": "c40516ef-b47e-4866-992f-29aac18fb5e8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 192914, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_181", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "4763c703-366e-484e-842d-9821d64e7929", "event_id": "0e53005d-02b8-46ea-8c0b-ed6063d80d1e", "parent_event_id": "4763c703-366e-484e-842d-9821d64e7929", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 805, "start_time": "2024-06-20T16:23:16.674Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_183", "variant_name": null}, {"function_name": "Fn_multiple_function_183", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_183\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"platform\":\"Windows 10\",\"rating\":4.5,\"meta\":\"Value\",\"genre\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_183_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the geographic distance between two given locations.\n  function_name: 'geo_distance.calculate' or null,\n  // The starting location for the distance calculation.\n  start_location: string,\n  // The destination location for the distance calculation.\n  end_location: string,\n  // Optional. The desired units for the resulting distance ('miles' or 'kilometers'). Defaults to 'miles'.\n  units: string or null,\n} or {\n  // Locate multiplayer games that match specific criteria such as rating, platform compatibility, genre, etc.\n  function_name: 'multiplayer_game_finder' or null,\n  // The platform you want the game to be compatible with, e.g. Windows 10, PS5.\n  platform: string,\n  // Desired minimum game rating on a 5.0 scale.\n  rating: float,\n  // Desired game genre, e.g. Action, Adventure, Racing. Default is ''.\n  genre: 'Action' or 'Adventure' or 'Racing' or 'Strategy' or 'Simulation' or null,\n} or {\n  // Send an email to the specified email address.\n  function_name: 'send_email' or null,\n  // The email address to send to.\n  to: string,\n  // The subject of the email.\n  subject: string,\n  // The body content of the email.\n  body: string,\n  // The email address to carbon copy. Default is ''.\n  cc: string or null,\n  // The email address to blind carbon copy. Default is ''.\n  bcc: string or null,\n} or {\n  // Calculate the area under a mathematical function within a given interval.\n  function_name: 'calculate_area_under_curve' or null,\n  // The mathematical function as a string.\n  function: string,\n  // An array that defines the interval to calculate the area under the curve from the start to the end point.\n  interval: float[],\n  // The numerical method to approximate the area under the curve. The default value is 'trapezoidal'.\n  method: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a multiplayer game with rating above 4.5 and compatible with Windows 10."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the required schema:\n\n{\n  \"function_name\": \"multiplayer_game_finder\",\n  \"platform\": \"Windows 10\",\n  \"rating\": 4.5,\n  \"genre\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 536, "output_tokens": 57, "total_tokens": 593, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "4763c703-366e-484e-842d-9821d64e7929", "event_id": "4763c703-366e-484e-842d-9821d64e7929", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 193720, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_183", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "9966217f-05a5-44e1-8244-fd5fd5ee2b48", "event_id": "9a88c25f-f8fc-4e55-96e9-77a23bdc4c2b", "parent_event_id": "9966217f-05a5-44e1-8244-fd5fd5ee2b48", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 810, "start_time": "2024-06-20T16:23:17.480Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_184", "variant_name": null}, {"function_name": "Fn_multiple_function_184", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_184\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"website\":\"Foodnetwork.com\",\"recipe\":\"Beef Lasagna\",\"meta\":\"Value\",\"optional_meal_time\":null}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_184_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the current stock price of the specified companies\n  function_name: 'get_stock_price' or null,\n  // The list of companies for which to retrieve the stock price.\n  company_names: string[],\n} or {\n  // Retrieve the FIFA ranking of a specific soccer team for a certain year.\n  function_name: 'get_team_ranking' or null,\n  // The name of the soccer team.\n  team_name: string,\n  // The year for which the ranking is to be retrieved.\n  year: int,\n  // The gender of the team. It can be either 'men' or 'women'. Default is 'men'.\n  gender: string or null,\n} or {\n  // Retrieve the amount of calories from a specific recipe in a food website.\n  function_name: 'recipe_info.get_calories' or null,\n  // The food website that has the recipe.\n  website: string,\n  // Name of the recipe.\n  recipe: string,\n  // Specific meal time of the day for the recipe (optional, could be 'Breakfast', 'Lunch', 'Dinner') Default is ''\n  optional_meal_time: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: How many calories in the Beef Lasagna Recipe from Foodnetwork.com?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"recipe_info.get_calories\",\n  \"website\": \"Foodnetwork.com\",\n  \"recipe\": \"Beef Lasagna\",\n  \"optional_meal_time\": null\n}", "metadata": {"logprobs": null, "prompt_tokens": 324, "output_tokens": 57, "total_tokens": 381, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "9966217f-05a5-44e1-8244-fd5fd5ee2b48", "event_id": "9966217f-05a5-44e1-8244-fd5fd5ee2b48", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 194533, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_184", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2b6fef00-5713-4dae-85bb-91bcc8f72e74", "event_id": "cd357322-7c41-4536-8314-36ad2a321721", "parent_event_id": "2b6fef00-5713-4dae-85bb-91bcc8f72e74", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1024, "start_time": "2024-06-20T16:23:18.293Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_185", "variant_name": null}, {"function_name": "Fn_multiple_function_185", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_185\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dietary_restriction\":\"Vegetarian\",\"ingredients\":[\"pasta\",\"cheese\"],\"servings\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_185_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve a detailed weather forecast for a specific location and duration including optional precipitation details.\n  function_name: 'detailed_weather_forecast' or null,\n  // The city that you want to get the weather for.\n  location: string,\n  // Duration in hours for the detailed forecast.\n  duration: int,\n  // Whether to include precipitation data in the forecast. Default is false.\n  include_precipitation: bool or null,\n} or {\n  // Search for a recipe given dietary restriction, ingredients, and number of servings.\n  function_name: 'recipe_search' or null,\n  // The dietary restriction, e.g., 'Vegetarian'.\n  dietary_restriction: string,\n  // The list of ingredients.\n  ingredients: string[],\n  // The number of servings the recipe should make\n  servings: int,\n} or {\n  // Get the time difference between two places.\n  function_name: 'get_time_difference' or null,\n  // The first place for time difference.\n  place1: string,\n  // The second place for time difference.\n  place2: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Give me a recipe for a vegetarian pasta with cheese for 2 servings."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the specified schema:\n\n{\n  \"function_name\": \"recipe_search\",\n  \"dietary_restriction\": \"Vegetarian\",\n  \"ingredients\": [\n    \"pasta\",\n    \"cheese\"\n  ],\n  \"servings\": 2\n}\n\nThis request is asking for a recipe search for a vegetarian pasta dish with cheese, for 2 servings.", "metadata": {"logprobs": null, "prompt_tokens": 298, "output_tokens": 92, "total_tokens": 390, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2b6fef00-5713-4dae-85bb-91bcc8f72e74", "event_id": "2b6fef00-5713-4dae-85bb-91bcc8f72e74", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 195558, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_185", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "12b8233e-9c33-436a-ace5-3a1e9e7f6fd8", "event_id": "f6d1d9d6-6dde-439e-bbc4-1f7755a1a7f2", "parent_event_id": "12b8233e-9c33-436a-ace5-3a1e9e7f6fd8", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1640, "start_time": "2024-06-20T16:23:19.318Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_186", "variant_name": null}, {"function_name": "Fn_multiple_function_186", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_186\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Boston\",\"cuisine\":\"Sushi\",\"amenities\":[\"Value0\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_186_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find top chess players in a location based on rating.\n  function_name: 'board_game.chess.get_top_players' or null,\n  // The city you want to find the players from.\n  location: string,\n  // Minimum rating to filter the players.\n  minimum_rating: int,\n  // Number of players you want to retrieve, default value is 10 (default: 10)\n  number_of_players: int or null,\n} or {\n  // Locate the closest sushi restaurant based on certain criteria, such as the presence of a patio.\n  function_name: 'restaurant_search.find_closest' or null,\n  // The city, for instance Boston, MA\n  location: string,\n  // Type of food like Sushi.\n  cuisine: string,\n  // Preferred amenities in the restaurant. Default is empty array.\n  amenities: [\n    'Patio' or 'Wi-Fi' or 'Happy Hour' or 'Wheelchair Accessible'\n  ],\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the closest sushi restaurant with a patio in Boston."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the schema for the request:\n\n{\n  \"function_name\": \"restaurant_search.find_closest\",\n  \"location\": \"Boston\",\n  \"cuisine\": \"Sushi\",\n  \"amenities\": [\n    \"Patio\"\n  ]\n}\n\nThis will call the function \"restaurant_search.find_closest\" to locate the closest sushi restaurant with a patio in the city of Boston.\n\nThe parameters are:\n- \"function_name\": The name of the function to call, which is \"restaurant_search.find_closest\"\n- \"location\": The city to search in, which is \"Boston\"\n- \"cuisine\": The type of cuisine to search for, which is \"Sushi\"\n- \"amenities\": The preferred amenity to filter for, which is \"Patio\"", "metadata": {"logprobs": null, "prompt_tokens": 274, "output_tokens": 186, "total_tokens": 460, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "12b8233e-9c33-436a-ace5-3a1e9e7f6fd8", "event_id": "12b8233e-9c33-436a-ace5-3a1e9e7f6fd8", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 197200, "start_time": "2024-06-20T16:20:03.759Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_186", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "5929892f-2c2e-4e3a-8d9a-eca9109bab47", "event_id": "190798f5-905b-436a-a018-be041067b1fb", "parent_event_id": "5929892f-2c2e-4e3a-8d9a-eca9109bab47", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 652, "start_time": "2024-06-20T16:23:20.960Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_187", "variant_name": null}, {"function_name": "Fn_multiple_function_187", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_187\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"dietary_restrictions\":\"vegan\",\"recipe_type\":\"dessert\",\"time\":30,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_187_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find a recipe based on the dietary restrictions, recipe type, and time constraints.\n  function_name: 'find_recipe' or null,\n  // Dietary restrictions e.g. vegan, vegetarian, gluten free, dairy free.\n  dietary_restrictions: string,\n  // Type of the recipe. E.g. dessert, main course, breakfast.\n  recipe_type: string,\n  // Time limit in minutes to prep the meal.\n  time: int,\n} or {\n  // Retrieve the details of a scientific discovery based on the discovery name.\n  function_name: 'science_history.get_discovery_details' or null,\n  // The name of the discovery, e.g. Gravity\n  discovery: string,\n  // The method used for the discovery, default value is 'default' which gives the most accepted method.\n  method_used: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find me a vegan recipe for brownies which prep time is under 30 minutes."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"find_recipe\",\n  \"dietary_restrictions\": \"vegan\",\n  \"recipe_type\": \"dessert\",\n  \"time\": 30\n}", "metadata": {"logprobs": null, "prompt_tokens": 244, "output_tokens": 47, "total_tokens": 291, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "5929892f-2c2e-4e3a-8d9a-eca9109bab47", "event_id": "5929892f-2c2e-4e3a-8d9a-eca9109bab47", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 197854, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_187", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "27c0570b-2fb2-4c1c-a26e-ff4eeebdc095", "event_id": "94ca80f4-17df-411a-8c19-d73d9b19b14e", "parent_event_id": "27c0570b-2fb2-4c1c-a26e-ff4eeebdc095", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 749, "start_time": "2024-06-20T16:23:21.614Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_188", "variant_name": null}, {"function_name": "Fn_multiple_function_188", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_188\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Los Angeles\",\"items\":[\"tomatoes\",\"lettuce\"],\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_188_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the area of a circle given the radius.\n  function_name: 'geometry.area_circle' or null,\n  // The radius of the circle.\n  radius: float,\n  // The units in which the radius is measured (defaults to meters). (default: meters)\n  units: string or null,\n} or {\n  // Find recipes based on dietary restrictions, meal type, and preferred ingredients.\n  function_name: 'find_recipes' or null,\n  // The dietary restrictions, e.g., 'vegan', 'gluten-free'.\n  diet: string,\n  // The type of meal, e.g., 'dinner', 'breakfast'.\n  meal_type: string,\n  // The preferred ingredients. If left blank, it will return general recipes. Default is empty array.\n  ingredients: string[],\n} or {\n  // Check the price of items at a specific Whole Foods location.\n  function_name: 'whole_foods.check_price' or null,\n  // Location of the Whole Foods store.\n  location: string,\n  // List of items for which the price needs to be checked.\n  items: string[],\n} or {\n  // Calculate the shortest driving distance between two locations.\n  function_name: 'calculate_shortest_distance' or null,\n  // The starting location for the drive.\n  start_location: string,\n  // The destination location for the drive.\n  end_location: string,\n  // The preferred type of route.\n  route_preference: 'Shortest' or 'Scenic',\n}"}]}, {"role": "user", "content": [{"text": "Question: Check the price of tomatoes and lettuce at the Whole Foods in Los Angeles."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"whole_foods.check_price\",\n  \"location\": \"Los Angeles\",\n  \"items\": [\"tomatoes\", \"lettuce\"]\n}", "metadata": {"logprobs": null, "prompt_tokens": 404, "output_tokens": 54, "total_tokens": 458, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "27c0570b-2fb2-4c1c-a26e-ff4eeebdc095", "event_id": "27c0570b-2fb2-4c1c-a26e-ff4eeebdc095", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 198604, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_188", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a3d4303b-503f-4cdb-8c68-5ca659da44a6", "event_id": "8a77528c-ac76-48a4-8fa4-8a8f8e204aa3", "parent_event_id": "a3d4303b-503f-4cdb-8c68-5ca659da44a6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1766, "start_time": "2024-06-20T16:23:22.364Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_189", "variant_name": null}, {"function_name": "Fn_multiple_function_189", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_189\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"my_location\":\"Berkeley\",\"products\":[\"tomatoes\",\"pet food\"],\"meta\":\"Value\",\"rating\":4.5}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_189_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Perform sentiment analysis on a given piece of text.\n  function_name: 'sentiment_analysis' or null,\n  // The text on which to perform sentiment analysis.\n  text: string,\n  // The language in which the text is written.\n  language: string,\n} or {\n  // Gathers research data on public preference between two options, based on societal category.\n  function_name: 'psych_research.get_preference' or null,\n  // The societal category the preference data is about. E.g. reading, transportation, food\n  category: string,\n  // The first option people could prefer.\n  option_one: string,\n  // The second option people could prefer.\n  option_two: string,\n  // Specific demographic of society to narrow down the research. (default: all)\n  demographic: string or null,\n} or {\n  // Find the closest high-rated grocery stores based on certain product availability.\n  function_name: 'grocery_store.find_best' or null,\n  // The current location of the user.\n  my_location: string,\n  // The minimum required store rating. Default is 0.0.\n  rating: float or null,\n  // Required products in a list.\n  products: string[],\n} or {\n  // Train a Random Forest classifier with the specified parameters.\n  function_name: 'train_random_forest_classifier' or null,\n  // The dataset to train the classifier on.\n  dataset: string,\n  // The maximum depth of the trees in the forest.\n  max_depth: int,\n  // The number of trees in the forest.\n  n_estimators: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Find the grocery store closest to Berkeley that has at least a 4.5 star rating, selling tomatoes and also pet food."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the request in the specified schema:\n\n{\n  \"function_name\": \"grocery_store.find_best\",\n  \"my_location\": \"Berkeley\",\n  \"rating\": 4.5,\n  \"products\": [\"tomatoes\", \"pet food\"]\n}\n\nThis request asks the system to:\n\n1. Find the grocery store closest to Berkeley.\n2. Filter the stores to only those that have at least a 4.5 star rating.\n3. Further filter the stores to only those that sell both tomatoes and pet food.\n4. Return the closest store that matches all these criteria.\n\nThe \"function_name\" field indicates that this is a request to the \"grocery_store.find_best\" function, which is designed to find the best grocery store based on location, rating, and required products.", "metadata": {"logprobs": null, "prompt_tokens": 438, "output_tokens": 184, "total_tokens": 622, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a3d4303b-503f-4cdb-8c68-5ca659da44a6", "event_id": "a3d4303b-503f-4cdb-8c68-5ca659da44a6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 200372, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_189", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "e12b1529-7fc1-4880-9aa8-61c827ce7b33", "event_id": "15e877b9-8cd4-4320-a641-5dc63d131bed", "parent_event_id": "e12b1529-7fc1-4880-9aa8-61c827ce7b33", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 630, "start_time": "2024-06-20T16:23:24.132Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_190", "variant_name": null}, {"function_name": "Fn_multiple_function_190", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_190\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"time\":\"3pm\",\"from_timezone\":\"America/New_York\",\"to_timezone\":\"Europe/London\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_190_Output1"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate potential greenhouse gas emissions saved by switching to renewable energy sources.\n  function_name: 'calculate_emission_savings' or null,\n  // Type of the renewable energy source.\n  energy_type: string,\n  // Usage duration in months.\n  usage_duration: int,\n  // The region where you use energy. Default is 'USA'\n  region: string or null,\n} or {\n  // Convert time from one time zone to another.\n  function_name: 'timezone.convert' or null,\n  // The local time you want to convert, e.g. 3pm\n  time: string,\n  // The time zone you want to convert from.\n  from_timezone: string,\n  // The time zone you want to convert to.\n  to_timezone: string,\n}"}]}, {"role": "user", "content": [{"text": "Question: Convert time 3pm from New York time zone to London time zone."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the specified schema:\n\n{\n  \"function_name\": \"timezone.convert\",\n  \"time\": \"3pm\",\n  \"from_timezone\": \"America/New_York\",\n  \"to_timezone\": \"Europe/London\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 218, "output_tokens": 63, "total_tokens": 281, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "e12b1529-7fc1-4880-9aa8-61c827ce7b33", "event_id": "e12b1529-7fc1-4880-9aa8-61c827ce7b33", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 201003, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_190", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "44a6bff3-c784-4885-806d-9278be7acd9e", "event_id": "213ba4af-a101-432f-a6ab-8e0c5b7f31e7", "parent_event_id": "44a6bff3-c784-4885-806d-9278be7acd9e", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 903, "start_time": "2024-06-20T16:23:24.763Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_191", "variant_name": null}, {"function_name": "Fn_multiple_function_191", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_191\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"Hilton Hotel\",\"location\":\"Chicago\",\"room_type\":\"single\",\"start_date\":\"2022-12-10\",\"nights\":2,\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_191_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieves the current stock price of the specified companies\n  function_name: 'get_stock_price' or null,\n  // The list of companies for which to retrieve the stock price.\n  company_names: string[],\n} or {\n  // Calculates the cost in target currency given the amount in base currency and exchange rate\n  function_name: 'currency_converter' or null,\n  // The currency to convert from.\n  base_currency: string,\n  // The currency to convert to.\n  target_currency: string,\n  // The amount in base currency\n  amount: float,\n} or {\n  // Book a room of specified type for a particular number of nights at a specific hotel, starting from a specified date.\n  function_name: 'book_hotel' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The city in which the hotel is located.\n  location: string,\n  // The type of room to be booked.\n  room_type: string,\n  // The start date for the booking.\n  start_date: string,\n  // The number of nights for which the booking is to be made.\n  nights: int,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a single room for two nights at the Hilton Hotel in Chicago, starting from 10th December 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"book_hotel\",\n  \"hotel_name\": \"Hilton Hotel\",\n  \"location\": \"Chicago\",\n  \"room_type\": \"single\",\n  \"start_date\": \"2022-12-10\",\n  \"nights\": 2\n}", "metadata": {"logprobs": null, "prompt_tokens": 325, "output_tokens": 71, "total_tokens": 396, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "44a6bff3-c784-4885-806d-9278be7acd9e", "event_id": "44a6bff3-c784-4885-806d-9278be7acd9e", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 201907, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_191", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "b570685b-587b-47eb-8108-40c9a23904c5", "event_id": "9924a283-43d5-4f4a-957c-997805944d80", "parent_event_id": "b570685b-587b-47eb-8108-40c9a23904c5", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1039, "start_time": "2024-06-20T16:23:25.667Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_192", "variant_name": null}, {"function_name": "Fn_multiple_function_192", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_192\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"hotel_name\":\"Hotel Paradise\",\"location\":\"Las Vegas\",\"room_type\":\"luxury\",\"start_date\":\"05-12-2022\",\"stay_duration\":3,\"meta\":\"Value\",\"view\":\"city\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_192_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Generates a random number from a normal distribution given the mean and standard deviation.\n  function_name: 'random.normalvariate' or null,\n  // Mean of the normal distribution.\n  mu: float,\n  // Standard deviation of the normal distribution.\n  sigma: float,\n} or {\n  // Retrieve the personality traits for a specific personality type, including their strengths and weaknesses.\n  function_name: 'get_personality_traits' or null,\n  // The personality type.\n  type: string,\n  // List of traits to be retrieved, default is ['strengths', 'weaknesses'].\n  traits: [\n    'strengths' or 'weaknesses'\n  ],\n} or {\n  // Estimate future population of elephants given current population and growth rate.\n  function_name: 'elephant_population_estimate' or null,\n  // The current number of elephants.\n  current_population: int,\n  // The annual population growth rate of elephants.\n  growth_rate: float,\n  // The number of years to project the population.\n  years: int,\n} or {\n  // Book a room in a specific hotel with particular preferences\n  function_name: 'book_hotel' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The location of the hotel.\n  location: string,\n  // The type of room preferred.\n  room_type: string,\n  // The starting date of the stay in format MM-DD-YYYY.\n  start_date: string,\n  // The duration of the stay in days.\n  stay_duration: int,\n  // The preferred view from the room, can be ignored if no preference. If none provided, assumes no preference. (default: No preference)\n  view: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Book a luxury room in Hotel Paradise, Las Vegas, with a city view for 3 days starting from May 12, 2022."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the request in the required schema:\n\n{\n  \"function_name\": \"book_hotel\",\n  \"hotel_name\": \"Hotel Paradise\",\n  \"location\": \"Las Vegas\",\n  \"room_type\": \"luxury\",\n  \"start_date\": \"05-12-2022\",\n  \"stay_duration\": 3,\n  \"view\": \"city\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 470, "output_tokens": 91, "total_tokens": 561, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "b570685b-587b-47eb-8108-40c9a23904c5", "event_id": "b570685b-587b-47eb-8108-40c9a23904c5", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 202948, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_192", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "514edf05-c8ba-4790-b463-6986cccfb9ce", "event_id": "822da16d-bdb7-4084-ad7e-a9b95cfa54d6", "parent_event_id": "514edf05-c8ba-4790-b463-6986cccfb9ce", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 828, "start_time": "2024-06-20T16:23:26.708Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_193", "variant_name": null}, {"function_name": "Fn_multiple_function_193", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_193\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"amount\":150,\"from_currency\":\"EUR\",\"to_currency\":\"CAD\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_193_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Convert a value from one currency to another.\n  function_name: 'currency_conversion.convert' or null,\n  // The amount to be converted.\n  amount: int,\n  // The currency to convert from.\n  from_currency: string,\n  // The currency to convert to.\n  to_currency: string,\n} or {\n  // Calculates the absolute pressure from gauge and atmospheric pressures.\n  function_name: 'calc_absolute_pressure' or null,\n  // The atmospheric pressure in atmospheres (atm). Default is 1 atm if not provided.\n  atm_pressure: float or null,\n  // The gauge pressure in atmospheres (atm). Must be provided.\n  gauge_pressure: float,\n} or {\n  // Calculates the displacement of an object in motion given initial velocity, time, and acceleration.\n  function_name: 'calculate_displacement' or null,\n  // The initial velocity of the object in m/s.\n  initial_velocity: float,\n  // The time in seconds that the object has been in motion.\n  time: float,\n  // The acceleration of the object in m/s^2.\n  acceleration: float or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Convert 150 Euros to Canadian dollars."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the required schema:\n\n{\n  \"function_name\": \"currency_conversion.convert\",\n  \"amount\": 150,\n  \"from_currency\": \"EUR\",\n  \"to_currency\": \"CAD\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 309, "output_tokens": 59, "total_tokens": 368, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "514edf05-c8ba-4790-b463-6986cccfb9ce", "event_id": "514edf05-c8ba-4790-b463-6986cccfb9ce", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 203777, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_193", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2145cfa2-28b4-4141-a089-57a2a047d663", "event_id": "2b597acd-fb01-4fb2-a728-71fa97212bae", "parent_event_id": "2145cfa2-28b4-4141-a089-57a2a047d663", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 893, "start_time": "2024-06-20T16:23:27.538Z", "tags": {"test_category": "multiple_function", "baml.runtime": "0.40.0", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_194", "variant_name": null}, {"function_name": "Fn_multiple_function_194", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_194\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"start_location\":\"Eiffel Tower, Paris, France\",\"end_location\":\"Louvre Museum, Paris, France\",\"meta\":\"Value\",\"traffic\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_194_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the factorial of a given number.\n  function_name: 'math.factorial' or null,\n  // The number for which factorial needs to be calculated.\n  number: float,\n} or {\n  // Find the closest high-rated grocery stores based on certain product availability.\n  function_name: 'grocery_store.find_best' or null,\n  // The current location of the user.\n  my_location: string,\n  // The minimum required store rating. Default is 0.0.\n  rating: float or null,\n  // Required products in a list.\n  products: string[],\n} or {\n  // Locate nearby restaurants based on specific criteria like cuisine type.\n  function_name: 'restaurant.find_nearby' or null,\n  // The city and state, e.g. Seattle, WA\n  location: string,\n  // Preferred type of cuisine in restaurant.\n  cuisine: string,\n  // Maximum distance (in miles) within which to search for restaurants. Default is 5.\n  max_distance: float or null,\n} or {\n  // Retrieve the travel distance and estimated travel time from one location to another via car\n  function_name: 'maps.get_distance_duration' or null,\n  // Starting point of the journey\n  start_location: string,\n  // Ending point of the journey\n  end_location: string,\n  // If true, considers current traffic. Default is false.\n  traffic: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Get me the travel distance and duration from the Eiffel Tower to the Louvre Museum"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"maps.get_distance_duration\",\n  \"start_location\": \"Eiffel Tower, Paris, France\",\n  \"end_location\": \"Louvre Museum, Paris, France\",\n  \"traffic\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 383, "output_tokens": 63, "total_tokens": 446, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2145cfa2-28b4-4141-a089-57a2a047d663", "event_id": "2145cfa2-28b4-4141-a089-57a2a047d663", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 204672, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_194", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "42367f5f-d114-4265-a21a-1f1130c2f1ce", "event_id": "b8ffe328-e255-4b6c-a821-69e4b93066ea", "parent_event_id": "42367f5f-d114-4265-a21a-1f1130c2f1ce", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 741, "start_time": "2024-06-20T16:23:28.432Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_195", "variant_name": null}, {"function_name": "Fn_multiple_function_195", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_195\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"museum_name\":\"Metropolitan Museum of Art\",\"day\":\"Saturday\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_195_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the name of the discoverer of an element based on its name.\n  function_name: 'discoverer.get' or null,\n  // The name of the element.\n  element_name: string,\n  // Optional parameter that refers to the year of discovery. It could be helpful in case an element was discovered more than once. Default is 0.\n  year: int or null,\n  // Optional parameter indicating if the first discoverer's name should be retrieved. (default: True)\n  first: bool or null,\n} or {\n  // Verify the details of a lawsuit case and check its status using case ID.\n  function_name: 'lawsuit.check_case' or null,\n  // The identification number of the lawsuit case.\n  case_id: int,\n  // The status of the lawsuit case to be verified.\n  closed_status: bool,\n} or {\n  // Retrieve opening hours of a specified museum for the specified day.\n  function_name: 'get_museum_hours' or null,\n  // The name of the museum.\n  museum_name: string,\n  // Day of the week. If not specified, returns the current day's hours.\n  day: string,\n} or {\n  // Calculates the probability of rolling a certain sum with two dice, commonly used in board game like Monopoly.\n  function_name: 'monopoly_odds_calculator' or null,\n  // The number for which the odds are calculated.\n  number: int,\n  // The number of dice involved in the roll.\n  dice_number: int,\n  // The number of faces on a single die. Default is 6 for standard six-faced die.\n  dice_faces: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the opening hours of the Metropolitan Museum of Art on Saturday?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the required schema:\n\n{\n  \"function_name\": \"get_museum_hours\",\n  \"museum_name\": \"Metropolitan Museum of Art\",\n  \"day\": \"Saturday\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 433, "output_tokens": 51, "total_tokens": 484, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "42367f5f-d114-4265-a21a-1f1130c2f1ce", "event_id": "42367f5f-d114-4265-a21a-1f1130c2f1ce", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 205414, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_195", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a98369f3-996b-4412-862e-ae0bdafdb1e6", "event_id": "331a52c6-b333-4798-a95a-1cc606494c78", "parent_event_id": "a98369f3-996b-4412-862e-ae0bdafdb1e6", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 735, "start_time": "2024-06-20T16:23:29.174Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_196", "variant_name": null}, {"function_name": "Fn_multiple_function_196", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_196\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"temp\":298,\"volume\":10,\"meta\":\"Value\",\"gas\":\"air\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_196_Output2"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Retrieve the detailed information about a lawsuit based on its case number and the court location.\n  function_name: 'get_lawsuit_details' or null,\n  // The case number of the lawsuit.\n  case_number: string,\n  // The location of the court where the case is filed.\n  court_location: string,\n  // Optional. Array containing additional details to be fetched. Default is empty array.\n  additional_details: [\n    'attorneys' or 'plaintiffs' or 'defendants' or 'charges' or 'court_updates'\n  ],\n} or {\n  // Get the team ranking in a sports league based on season and type.\n  function_name: 'get_team_rank' or null,\n  // The name of the sports team.\n  team_name: string,\n  // The name of the league in which the team competes.\n  league: string,\n  // The season for which the team's ranking is sought.\n  season: string,\n  // Type of the season: regular or playoff.\n  type: 'regular' or 'playoff',\n} or {\n  // Calculate the heat capacity at constant pressure of air using its temperature and volume.\n  function_name: 'calc_heat_capacity' or null,\n  // The temperature of the gas in Kelvin.\n  temp: int,\n  // The volume of the gas in m^3.\n  volume: int,\n  // Type of gas, with air as default.\n  gas: string or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Calculate the heat capacity at constant pressure for air, given its temperature is 298K and volume is 10 m^3."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calc_heat_capacity\",\n  \"temp\": 298,\n  \"volume\": 10,\n  \"gas\": \"air\"\n}", "metadata": {"logprobs": null, "prompt_tokens": 398, "output_tokens": 54, "total_tokens": 452, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a98369f3-996b-4412-862e-ae0bdafdb1e6", "event_id": "a98369f3-996b-4412-862e-ae0bdafdb1e6", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 206151, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"test_category": "multiple_function", "baml.language": "python", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_196", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "a53658a6-4e5e-4485-b509-e07b983ec4b3", "event_id": "7a2ff96a-39b7-4313-b456-7f006c377db9", "parent_event_id": "a53658a6-4e5e-4485-b509-e07b983ec4b3", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 875, "start_time": "2024-06-20T16:23:29.911Z", "tags": {"baml.language": "python", "test_category": "multiple_function", "baml.runtime": "0.40.0"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_197", "variant_name": null}, {"function_name": "Fn_multiple_function_197", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_197\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"cell_compartment\":\"plasma membrane\",\"meta\":\"Value\",\"include_description\":false}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_197_Output3"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Find the tallest mountains within a specified radius of a location.\n  function_name: 'locate_tallest_mountains' or null,\n  // The city from which to calculate distance.\n  location: string,\n  // The radius within which to find mountains, measured in kilometers.\n  radius: float,\n  // The number of mountains to find, listed from tallest to smallest.\n  amount: int,\n} or {\n  // Calculate the electric field produced by a charge at a certain distance.\n  function_name: 'calculate_electric_field' or null,\n  // Charge in coulombs producing the electric field.\n  charge: float,\n  // Distance from the charge in meters where the field is being measured.\n  distance: float,\n  // Permitivity of the space where field is being calculated, default is for vacuum.\n  permitivity: float or null,\n} or {\n  // Calculate the frequency of homozygous dominant genotype based on the allele frequency using Hardy Weinberg Principle.\n  function_name: 'calculate_genotype_frequency' or null,\n  // The frequency of the dominant allele in the population.\n  allele_frequency: float,\n  // The genotype which frequency is needed, default is homozygous dominant. \n  genotype: 'AA' or 'Aa' or 'aa',\n} or {\n  // Get the list of proteins in a specific cell compartment.\n  function_name: 'cellbio.get_proteins' or null,\n  // The specific cell compartment.\n  cell_compartment: string,\n  // Set true if you want a brief description of each protein. (default: false)\n  include_description: bool or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: What are the names of proteins found in the plasma membrane?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the response in the requested schema:\n\n{\n  \"function_name\": \"cellbio.get_proteins\",\n  \"cell_compartment\": \"plasma membrane\",\n  \"include_description\": false\n}", "metadata": {"logprobs": null, "prompt_tokens": 431, "output_tokens": 52, "total_tokens": 483, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "a53658a6-4e5e-4485-b509-e07b983ec4b3", "event_id": "a53658a6-4e5e-4485-b509-e07b983ec4b3", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 207027, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_197", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "2c848843-f237-4bd5-967f-f05f59c64864", "event_id": "0fb13648-e03d-4b9d-8753-b136d5113338", "parent_event_id": "2c848843-f237-4bd5-967f-f05f59c64864", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 1457, "start_time": "2024-06-20T16:23:30.787Z", "tags": {"baml.runtime": "0.40.0", "baml.language": "python", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_199", "variant_name": null}, {"function_name": "Fn_multiple_function_199", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_199\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"allele_frequency\":0.3,\"genotype\":\"Value0\",\"meta\":\"Value\"}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_199_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Calculate the frequency of homozygous dominant genotype based on the allele frequency using Hardy Weinberg Principle.\n  function_name: 'calculate_genotype_frequency' or null,\n  // The frequency of the dominant allele in the population.\n  allele_frequency: float,\n  // The genotype which frequency is needed, default is homozygous dominant. \n  genotype: 'AA' or 'Aa' or 'aa',\n} or {\n  // Books a hotel room for a specific date range.\n  function_name: 'hotel_booking' or null,\n  // The name of the hotel.\n  hotel_name: string,\n  // The city and state, e.g. New York, NY.\n  location: string,\n  // The start date of the reservation. Use format 'YYYY-MM-DD'.\n  start_date: string,\n  // The end date of the reservation. Use format 'YYYY-MM-DD'.\n  end_date: string,\n  // The number of rooms to reserve. (default: 1)\n  rooms: int or null,\n} or {\n  // Retrieve the highest scoring player in a specific game and season.\n  function_name: 'get_highest_scoring_player' or null,\n  // The game in which you want to find the highest scoring player.\n  game: string,\n  // The season during which the high score was achieved.\n  season: string,\n  // The geographical region in which the game is being played (Optional). Default is 'all'\n  region: string or null,\n} or {\n  // Retrieve the inventor and year of invention based on the invention's name.\n  function_name: 'science_history.get_invention' or null,\n  // The name of the invention.\n  invention_name: string,\n  // Return the year of invention if set to true.\n  want_year: bool,\n}"}]}, {"role": "user", "content": [{"text": "Question: What is the genotype frequency of AA genotype in a population, given that allele frequency of A is 0.3?"}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "Here is the answer in the requested schema:\n\n{\n  \"function_name\": \"calculate_genotype_frequency\",\n  \"allele_frequency\": 0.3,\n  \"genotype\": \"AA\"\n}\n\nTo calculate the genotype frequency of the homozygous dominant (AA) genotype using the Hardy-Weinberg principle, we can use the formula:\n\np^2 = frequency of AA genotype\n\nWhere p is the frequency of the dominant allele (A).\n\nGiven:\n- Frequency of allele A (p) = 0.3\n\nPlugging this into the formula:\np^2 = (0.3)^2 = 0.09\n\nTherefore, the genotype frequency of the AA genotype is 0.09 or 9%.", "metadata": {"logprobs": null, "prompt_tokens": 496, "output_tokens": 181, "total_tokens": 677, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "2c848843-f237-4bd5-967f-f05f59c64864", "event_id": "2c848843-f237-4bd5-967f-f05f59c64864", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 208485, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_199", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
{"project_id": "b-project-id", "event_type": "func_llm", "root_event_id": "1ff31fb9-bf7d-43fe-a94c-502223098820", "event_id": "1f80d4d4-d08f-4c8f-892d-7547591af663", "parent_event_id": "1ff31fb9-bf7d-43fe-a94c-502223098820", "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 830, "start_time": "2024-06-20T16:23:32.246Z", "tags": {"baml.language": "python", "baml.runtime": "0.40.0", "test_category": "multiple_function"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_200", "variant_name": null}, {"function_name": "Fn_multiple_function_200", "variant_name": null}]}, "io": {"input": {"value": ["\"Fn_multiple_function_200\""], "override": null, "type": {"name": "multi", "fields": {"unused": "string"}}}, "output": {"value": "{\"location\":\"Yellowstone\",\"years\":5,\"meta\":\"Value\",\"include_human_impact\":true}", "override": null, "type": {"name": "single", "fields": {"value": "class Fn_multiple_function_200_Output0"}}}}, "error": null, "metadata": [{"model_name": "claude-3-haiku-20240307", "provider": "ClaudeHaiku", "input": {"prompt": {"template": [{"role": "system", "content": [{"text": "Answer in this schema: {\n  // Predicts the forest growth over the next N years based on current trends.\n  function_name: 'forest_growth_forecast' or null,\n  // The location where you want to predict forest growth.\n  location: string,\n  // The number of years for the forecast.\n  years: int,\n  // Whether or not to include the impact of human activities in the forecast. If not provided, defaults to false.\n  include_human_impact: bool or null,\n} or {\n  // Fetch records from a specified database table based on certain conditions.\n  function_name: 'db_fetch_records' or null,\n  // The name of the database.\n  database_name: string,\n  // The name of the table from which records need to be fetched.\n  table_name: string,\n  // The conditions based on which records are to be fetched.\n  conditions: {\n    // The name of the department of students.\n    department: string or null,\n    // The name of the school students are enrolled in.\n    school: string or null,\n  },\n  // Limits the number of records to be fetched. If left empty, it fetches all records. (Optional) Default is 0.\n  fetch_limit: int or null,\n}"}]}, {"role": "user", "content": [{"text": "Question: Predict the growth of forest in Yellowstone for the next 5 years including human impact."}]}], "template_args": {}, "override": null}, "invocation_params": {"model": "claude-3-haiku-20240307", "max_tokens": 1000}}, "output": {"raw_text": "{\n  \"function_name\": \"forest_growth_forecast\",\n  \"location\": \"Yellowstone\",\n  \"years\": 5,\n  \"include_human_impact\": true\n}", "metadata": {"logprobs": null, "prompt_tokens": 331, "output_tokens": 48, "total_tokens": 379, "finish_reason": "\"end_turn\""}, "override": null}, "error": null}]}
{"project_id": "b-project-id", "event_type": "func_code", "root_event_id": "1ff31fb9-bf7d-43fe-a94c-502223098820", "event_id": "1ff31fb9-bf7d-43fe-a94c-502223098820", "parent_event_id": null, "context": {"hostname": "Sams-MBP", "process_id": "d79e282d-9598-479d-971d-2fbdd2a524b4", "stage": "development", "latency_ms": 209317, "start_time": "2024-06-20T16:20:03.760Z", "tags": {"baml.runtime": "0.40.0", "test_category": "multiple_function", "baml.language": "python"}, "event_chain": [{"function_name": "baml_Fn_multiple_function_200", "variant_name": null}]}, "io": {"input": {"value": [], "override": null, "type": {"name": "multi", "fields": {}}}, "output": {"value": "\"success\"", "override": null, "type": {"name": "single", "fields": {"value": "string"}}}}, "error": null, "metadata": null}
